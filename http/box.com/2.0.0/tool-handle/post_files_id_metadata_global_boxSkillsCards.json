{
  "name": "post_files_id_metadata_global_boxSkillsCards",
  "description": "Applies one or more Box Skills metadata cards to a file.",
  "parameters": {
    "type": "object",
    "properties": {
      "file_id": {
        "type": "string",
        "description": "The unique identifier that represents a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
      },
      "body": {
        "properties": {
          "cards": {
            "description": "A list of Box Skill cards to apply to this file.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/$defs/KeywordSkillCard"
                },
                {
                  "$ref": "#/$defs/TimelineSkillCard"
                },
                {
                  "$ref": "#/$defs/TranscriptSkillCard"
                },
                {
                  "$ref": "#/$defs/StatusSkillCard"
                }
              ]
            },
            "type": "array"
          }
        },
        "required": [
          "cards"
        ],
        "type": "object"
      }
    },
    "required": [
      "file_id"
    ],
    "$defs": {
      "KeywordSkillCard": {
        "description": "A skill card that contains a set of keywords",
        "properties": {
          "created_at": {
            "description": "The optional date and time this card was created at.",
            "example": "2018-04-13T13:53:23-07:00",
            "format": "date-time",
            "type": "string"
          },
          "entries": {
            "description": "An list of entries in the metadata card.",
            "items": {
              "description": "An entry in the `entries` attribute of a metadata card",
              "properties": {
                "text": {
                  "description": "The text of the keyword.",
                  "example": "keyword1",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "invocation": {
            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
                "example": "image-recognition-service-123",
                "type": "string"
              },
              "type": {
                "description": "`skill_invocation`",
                "enum": [
                  "skill_invocation"
                ],
                "example": "skill_invocation",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill": {
            "description": "The service that applied this metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the service that\napplied this metadata.",
                "example": "image-recognition-service",
                "type": "string"
              },
              "type": {
                "description": "`service`",
                "enum": [
                  "service"
                ],
                "example": "service",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill_card_title": {
            "description": "The title of the card.",
            "properties": {
              "code": {
                "description": "An optional identifier for the title.",
                "example": "labels",
                "type": "string"
              },
              "message": {
                "description": "The actual title to show in the UI.",
                "example": "Labels",
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "type": "object"
          },
          "skill_card_type": {
            "description": "`keyword`",
            "enum": [
              "keyword"
            ],
            "example": "keyword",
            "type": "string"
          },
          "type": {
            "description": "`skill_card`",
            "enum": [
              "skill_card"
            ],
            "example": "skill_card",
            "type": "string"
          }
        },
        "required": [
          "type",
          "skill_card_type",
          "skill",
          "invocation",
          "entries"
        ],
        "title": "Keyword Skill Card",
        "type": "object",
        "x-box-resource-id": "keyword_skill_card",
        "x-box-tag": "skills"
      },
      "TimelineSkillCard": {
        "description": "A Box Skill metadata card that places a list of images on a\ntimeline.",
        "properties": {
          "created_at": {
            "description": "The optional date and time this card was created at.",
            "example": "2018-04-13T13:53:23-07:00",
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "description": "An total duration in seconds of the timeline.",
            "example": 1000,
            "type": "integer"
          },
          "entries": {
            "description": "A list of entries on the timeline.",
            "items": {
              "description": "An single item that's placed on multiple items on the timeline.",
              "properties": {
                "appears": {
                  "description": "Defines a list of timestamps for when this item should appear on the\ntimeline.",
                  "items": {
                    "description": "The timestamp for an entry.",
                    "properties": {
                      "end": {
                        "description": "The time in seconds when an\nentry should stop appearing on a timeline.",
                        "example": 20,
                        "type": "integer"
                      },
                      "start": {
                        "description": "The time in seconds when an\nentry should start appearing on a timeline.",
                        "example": 1,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "required": [
                    "start",
                    "end"
                  ],
                  "type": "array"
                },
                "image_url": {
                  "description": "The image to show on a for an entry that appears\non a timeline. This image URL is required for every entry.\n\nThe image will be shown in a\nlist of items (for example faces), and clicking\nthe image will show the user where that entry\nappears during the duration of this entry.",
                  "example": "https://example.com/image1.jpg",
                  "type": "string"
                },
                "text": {
                  "description": "The text of the entry. This would be the display\nname for an item being placed on the timeline, for example the name\nof the person who was detected in a video.",
                  "example": "John",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "invocation": {
            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
                "example": "image-recognition-service-123",
                "type": "string"
              },
              "type": {
                "description": "`skill_invocation`",
                "enum": [
                  "skill_invocation"
                ],
                "example": "skill_invocation",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill": {
            "description": "The service that applied this metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the service that\napplied this metadata.",
                "example": "image-recognition-service",
                "type": "string"
              },
              "type": {
                "description": "`service`",
                "enum": [
                  "service"
                ],
                "example": "service",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill_card_title": {
            "description": "The title of the card.",
            "properties": {
              "code": {
                "description": "An optional identifier for the title.",
                "example": "Faces",
                "type": "string"
              },
              "message": {
                "description": "The actual title to show in the UI.",
                "example": "Faces",
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "type": "object"
          },
          "skill_card_type": {
            "description": "`timeline`",
            "enum": [
              "timeline"
            ],
            "example": "timeline",
            "type": "string"
          },
          "type": {
            "description": "`skill_card`",
            "enum": [
              "skill_card"
            ],
            "example": "skill_card",
            "type": "string"
          }
        },
        "required": [
          "type",
          "skill_card_type",
          "skill",
          "invocation",
          "entries"
        ],
        "title": "Timeline Skill Card",
        "type": "object",
        "x-box-resource-id": "timeline_skill_card",
        "x-box-tag": "skills"
      },
      "TranscriptSkillCard": {
        "description": "A Box Skill metadata card that adds a transcript to a file.",
        "properties": {
          "created_at": {
            "description": "The optional date and time this card was created at.",
            "example": "2018-04-13T13:53:23-07:00",
            "format": "date-time",
            "type": "string"
          },
          "duration": {
            "description": "An optional total duration in seconds.\n\nUsed with a `skill_card_type` of `transcript` or\n`timeline`.",
            "example": 1000,
            "type": "integer"
          },
          "entries": {
            "description": "An list of entries for the card. This represents the individual entries of\nthe transcription.",
            "items": {
              "description": "An entry in the `entries` attribute of a metadata card",
              "properties": {
                "appears": {
                  "description": "Defines when a transcribed bit of text appears. This only includes a\nstart time and no end time.",
                  "items": {
                    "description": "The timestamp for an entry.",
                    "properties": {
                      "start": {
                        "description": "The time in seconds when an\nentry should start appearing on a timeline.",
                        "example": 1,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "required": [
                    "start"
                  ],
                  "type": "array"
                },
                "text": {
                  "description": "The text of the entry. This would be the transcribed text assigned\nto the entry on the timeline.",
                  "example": "Hi, and welcome to this video...",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "invocation": {
            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
                "example": "transciption-service-123",
                "type": "string"
              },
              "type": {
                "description": "`skill_invocation`",
                "enum": [
                  "skill_invocation"
                ],
                "example": "skill_invocation",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill": {
            "description": "The service that applied this metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the service that\napplied this metadata.",
                "example": "transciption-service",
                "type": "string"
              },
              "type": {
                "description": "`service`",
                "enum": [
                  "service"
                ],
                "example": "service",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill_card_title": {
            "description": "The title of the card.",
            "properties": {
              "code": {
                "description": "An optional identifier for the title.",
                "example": "my_transcripts",
                "type": "string"
              },
              "message": {
                "description": "The actual title to show in the UI.",
                "example": "My Transcripts",
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "type": "object"
          },
          "skill_card_type": {
            "description": "`transcript`",
            "enum": [
              "transcript"
            ],
            "example": "transcript",
            "type": "string"
          },
          "type": {
            "description": "`skill_card`",
            "enum": [
              "skill_card"
            ],
            "example": "skill_card",
            "type": "string"
          }
        },
        "required": [
          "type",
          "skill_card_type",
          "skill",
          "invocation",
          "entries"
        ],
        "title": "Transcript Skill Card",
        "type": "object",
        "x-box-resource-id": "transcript_skill_card",
        "x-box-tag": "skills"
      },
      "StatusSkillCard": {
        "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
        "properties": {
          "created_at": {
            "description": "The optional date and time this card was created at.",
            "example": "2018-04-13T13:53:23-07:00",
            "format": "date-time",
            "type": "string"
          },
          "invocation": {
            "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata.",
                "example": "image-recognition-service-123",
                "type": "string"
              },
              "type": {
                "description": "`skill_invocation`",
                "enum": [
                  "skill_invocation"
                ],
                "example": "skill_invocation",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill": {
            "description": "The service that applied this metadata.",
            "properties": {
              "id": {
                "description": "A custom identifier that represent the service that\napplied this metadata.",
                "example": "image-recognition-service",
                "type": "string"
              },
              "type": {
                "description": "`service`",
                "enum": [
                  "service"
                ],
                "example": "service",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "skill_card_title": {
            "description": "The title of the card.",
            "properties": {
              "code": {
                "description": "An optional identifier for the title.",
                "example": "status",
                "type": "string"
              },
              "message": {
                "description": "The actual title to show in the UI.",
                "example": "Status",
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "type": "object"
          },
          "skill_card_type": {
            "description": "`status`",
            "enum": [
              "status"
            ],
            "example": "status",
            "type": "string"
          },
          "status": {
            "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file.",
            "properties": {
              "code": {
                "description": "A code for the status of this Skill invocation. By\ndefault each of these will have their own accompanied\nmessages. These can be adjusted by setting the `message`\nvalue on this object.",
                "enum": [
                  "invoked",
                  "processing",
                  "success",
                  "transient_failure",
                  "permanent_failure"
                ],
                "example": "success",
                "type": "string"
              },
              "message": {
                "description": "A custom message that can be provided with this status.\nThis will be shown in the web app to the end user.",
                "example": "We're preparing to process your file. Please hold on!",
                "type": "string"
              }
            },
            "required": [
              "code"
            ],
            "type": "object"
          },
          "type": {
            "description": "`skill_card`",
            "enum": [
              "skill_card"
            ],
            "example": "skill_card",
            "type": "string"
          }
        },
        "required": [
          "type",
          "skill_card_type",
          "skill",
          "invocation",
          "status"
        ],
        "title": "Status Skill Card",
        "type": "object",
        "x-box-resource-id": "status_skill_card",
        "x-box-tag": "skills"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.box.com/2.0/files/{file_id}/metadata/global/boxSkillsCards"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Skills metadata instance"
        },
        "The metadata assigned to a using for Box skills.",
        "**Key properties:**",
        {
          "$ul": [
            "**$canEdit**: Whether the user can edit this metadata",
            "**$id**: A UUID to identify the metadata object",
            "**$parent**: An ID for the parent folder",
            "**$scope**: An ID for the scope in which this template",
            "**$template**: The name of the template",
            "**$type**: A unique identifier for the \"type\" of this instance. This is an internal",
            "**$typeVersion**: The last-known version of the template of the object. This is an internal",
            "**$version**: The version of the metadata object. Starts at 0 and increases every time",
            "**cards**: A list of Box Skill cards that have been applied to this file."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
