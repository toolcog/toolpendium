{
  "name": "get_events",
  "description": "Returns up to a year of past events for a given user\nor for the entire enterprise.\n\nBy default this returns events for the authenticated user. To retrieve events\nfor the entire enterprise, set the `stream_type` to `admin_logs_streaming`\nfor live monitoring of new events, or `admin_logs` for querying across\nhistorical events. The user making the API call will\nneed to have admin privileges, and the application will need to have the\nscope `manage enterprise properties` checked.",
  "parameters": {
    "type": "object",
    "properties": {
      "stream_type": {
        "default": "all",
        "enum": [
          "all",
          "changes",
          "sync",
          "admin_logs",
          "admin_logs_streaming"
        ],
        "type": "string",
        "description": "Defines the type of events that are returned\n\n* `all` returns everything for a user and is the default\n* `changes` returns events that may cause file tree changes\n  such as file updates or collaborations.\n* `sync` is similar to `changes` but only applies to synced folders\n* `admin_logs` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions. This\n  stream type is for programmatically pulling from a 1 year history of\n  events across all users within the enterprise and within a\n  `created_after` and `created_before` time frame. The complete history\n  of events will be returned in chronological order based on the event\n  time, but latency will be much higher than `admin_logs_streaming`.\n* `admin_logs_streaming` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions. This\n  stream type is for polling for recent events across all users within\n  the enterprise. Latency will be much lower than `admin_logs`, but\n  events will not be returned in chronological order and may\n  contain duplicates."
      },
      "stream_position": {
        "type": "string",
        "description": "The location in the event stream to start receiving events from.\n\n* `now` will return an empty list events and\nthe latest stream position for initialization.\n* `0` or `null` will return all events."
      },
      "limit": {
        "default": 100,
        "format": "int64",
        "maximum": 500,
        "type": "integer",
        "description": "Limits the number of events returned\n\nNote: Sometimes, the events less than the limit requested can be returned\neven when there may be more events remaining. This is primarily done in\nthe case where a number of events have already been retrieved and these\nretrieved events are returned rather than delaying for an unknown amount\nof time to see if there are any more results."
      },
      "event_type": {
        "items": {
          "description": "An event type that can be filtered by",
          "enum": [
            "ACCESS_GRANTED",
            "ACCESS_REVOKED",
            "ADD_DEVICE_ASSOCIATION",
            "ADD_LOGIN_ACTIVITY_DEVICE",
            "ADMIN_LOGIN",
            "APPLICATION_CREATED",
            "APPLICATION_PUBLIC_KEY_ADDED",
            "APPLICATION_PUBLIC_KEY_DELETED",
            "CHANGE_ADMIN_ROLE",
            "CHANGE_FOLDER_PERMISSION",
            "COLLABORATION_ACCEPT",
            "COLLABORATION_EXPIRATION",
            "COLLABORATION_INVITE",
            "COLLABORATION_REMOVE",
            "COLLABORATION_ROLE_CHANGE",
            "COMMENT_CREATE",
            "COMMENT_DELETE",
            "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
            "CONTENT_WORKFLOW_AUTOMATION_ADD",
            "CONTENT_WORKFLOW_AUTOMATION_DELETE",
            "CONTENT_WORKFLOW_POLICY_ADD",
            "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
            "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
            "COPY",
            "DATA_RETENTION_CREATE_RETENTION",
            "DATA_RETENTION_REMOVE_RETENTION",
            "DELETE",
            "DELETE_USER",
            "DEVICE_TRUST_CHECK_FAILED",
            "DOWNLOAD",
            "EDIT",
            "EDIT_USER",
            "EMAIL_ALIAS_CONFIRM",
            "EMAIL_ALIAS_REMOVE",
            "ENTERPRISE_APP_AUTHORIZATION_UPDATE",
            "EXTERNAL_COLLAB_SECURITY_SETTINGS",
            "FAILED_LOGIN",
            "FILE_MARKED_MALICIOUS",
            "FILE_WATERMARKED_DOWNLOAD",
            "GROUP_ADD_ITEM",
            "GROUP_ADD_USER",
            "GROUP_CREATION",
            "GROUP_DELETION",
            "GROUP_EDITED",
            "GROUP_REMOVE_ITEM",
            "GROUP_REMOVE_USER",
            "ITEM_MODIFY",
            "ITEM_OPEN",
            "ITEM_SHARED_UPDATE",
            "ITEM_SYNC",
            "ITEM_UNSYNC",
            "LEGAL_HOLD_ASSIGNMENT_CREATE",
            "LEGAL_HOLD_ASSIGNMENT_DELETE",
            "LEGAL_HOLD_POLICY_CREATE",
            "LEGAL_HOLD_POLICY_DELETE",
            "LEGAL_HOLD_POLICY_UPDATE",
            "LOCK",
            "LOGIN",
            "METADATA_INSTANCE_CREATE",
            "METADATA_INSTANCE_DELETE",
            "METADATA_INSTANCE_UPDATE",
            "METADATA_TEMPLATE_CREATE",
            "METADATA_TEMPLATE_DELETE",
            "METADATA_TEMPLATE_UPDATE",
            "MOVE",
            "NEW_USER",
            "OAUTH2_ACCESS_TOKEN_REVOKE",
            "PREVIEW",
            "REMOVE_DEVICE_ASSOCIATION",
            "REMOVE_LOGIN_ACTIVITY_DEVICE",
            "RENAME",
            "RETENTION_POLICY_ASSIGNMENT_ADD",
            "SHARE",
            "SHARE_EXPIRATION",
            "SHIELD_ALERT",
            "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED",
            "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION",
            "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED",
            "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION",
            "SHIELD_JUSTIFICATION_APPROVAL",
            "SIGN_DOCUMENT_ASSIGNED",
            "SIGN_DOCUMENT_CANCELLED",
            "SIGN_DOCUMENT_COMPLETED",
            "SIGN_DOCUMENT_CONVERTED",
            "SIGN_DOCUMENT_CREATED",
            "SIGN_DOCUMENT_DECLINED",
            "SIGN_DOCUMENT_EXPIRED",
            "SIGN_DOCUMENT_SIGNED",
            "SIGN_DOCUMENT_VIEWED_BY_SIGNED",
            "SIGNER_DOWNLOADED",
            "SIGNER_FORWARDED",
            "STORAGE_EXPIRATION",
            "TASK_ASSIGNMENT_CREATE",
            "TASK_ASSIGNMENT_DELETE",
            "TASK_ASSIGNMENT_UPDATE",
            "TASK_CREATE",
            "TASK_UPDATE",
            "TERMS_OF_SERVICE_ACCEPT",
            "TERMS_OF_SERVICE_REJECT",
            "UNDELETE",
            "UNLOCK",
            "UNSHARE",
            "UPDATE_COLLABORATION_EXPIRATION",
            "UPDATE_SHARE_EXPIRATION",
            "UPLOAD",
            "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
            "WATERMARK_LABEL_CREATE",
            "WATERMARK_LABEL_DELETE"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of events to filter by. This can only be used when\nrequesting the events with a `stream_type` of `admin_logs` or\n`adming_logs_streaming`. For any other `stream_type` this value will be\nignored."
      },
      "created_after": {
        "format": "date-time",
        "type": "string",
        "description": "The lower bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored."
      },
      "created_before": {
        "format": "date-time",
        "type": "string",
        "description": "The upper bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.box.com/2.0/events{?stream_type,stream_position,limit,event_type,created_after,created_before}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Events"
        },
        "A list of event objects",
        "**Key properties:**",
        {
          "$ul": [
            "**chunk_size**: The number of events returned in this response.",
            "**entries**",
            "**next_stream_position**: The stream position of the start of the next page (chunk)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
