{
  "name": "get_metadata_cascade_policies_id",
  "description": "Retrieve a specific metadata cascade policy assigned to a folder.",
  "parameters": {
    "type": "object",
    "properties": {
      "metadata_cascade_policy_id": {
        "type": "string",
        "description": "The ID of the metadata cascade policy."
      }
    },
    "required": [
      "metadata_cascade_policy_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.box.com/2.0/metadata_cascade_policies/{metadata_cascade_policy_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Metadata cascade policy"
        },
        "A metadata cascade policy automatically applies a metadata template instance\nto all the files and folders within the targeted folder.",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: The ID of the metadata cascade policy object",
            [
              "**owner_enterprise**: The enterprise that owns this policy.",
              {
                "$ul": [
                  "**id**: The ID of the enterprise that owns the policy.",
                  "**type**: `enterprise`"
                ]
              }
            ],
            [
              "**parent**: Represent the folder the policy is applied to.",
              {
                "$ul": [
                  "**id**: The ID of the folder the policy is applied to.",
                  "**type**: `folder`"
                ]
              }
            ],
            "**scope**: The scope of the of the template that is cascaded down to the folder's",
            "**templateKey**: The key of the template that is cascaded down to the folder's",
            "**type**: `metadata_cascade_policy`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
