{
  "name": "post_sign_requests",
  "description": "Creates a sign request. This involves preparing a document for signing and\nsending the sign request to signers.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/SignRequestCreateRequest"
      }
    },
    "$defs": {
      "SignRequestCreateRequest": {
        "allOf": [
          {
            "$ref": "#/$defs/SignRequest--Base"
          },
          {
            "properties": {
              "signature_color": {
                "description": "Force a specific signature color (blue, black, or red).",
                "enum": [
                  "blue",
                  "black",
                  "red"
                ],
                "example": "blue",
                "nullable": true,
                "type": "string"
              },
              "signers": {
                "description": "Array of signers for the sign request. 35 is the\nmax number of signers permitted.",
                "items": {
                  "$ref": "#/$defs/SignRequestCreateSigner"
                },
                "type": "array"
              },
              "source_files": {
                "description": "List of files to create a signing document from. This is currently\nlimited to 10 files. Only the ID and type fields are required\nfor each file. The array will be empty if the `source_files`\nare deleted.",
                "items": {
                  "$ref": "#/$defs/File--Mini"
                },
                "maximum": 10,
                "minimum": 1,
                "type": "array"
              }
            }
          }
        ],
        "description": "A request to create a sign request object",
        "required": [
          "signers"
        ],
        "title": "Create a sign request",
        "type": "object"
      },
      "SignRequest--Base": {
        "description": "A request to create a sign request object",
        "properties": {
          "are_reminders_enabled": {
            "description": "Reminds signers to sign a document on day 3, 8, 13 and 18. Reminders are only sent to outstanding signers.",
            "example": true,
            "type": "boolean"
          },
          "are_text_signatures_enabled": {
            "default": true,
            "description": "Disables the usage of signatures generated by typing (text).",
            "example": true,
            "type": "boolean"
          },
          "days_valid": {
            "description": "Number of days after which this request will automatically expire if not completed.",
            "example": 2,
            "maximum": 730,
            "minimum": 0,
            "nullable": true,
            "type": "integer"
          },
          "declined_redirect_url": {
            "description": "The uri that a signer will be redirected to after declining to sign a document.",
            "example": "https://declined-redirect.com",
            "nullable": true,
            "type": "string"
          },
          "email_message": {
            "description": "Message to include in sign request email. The field is cleaned through sanitization of specific characters. However, some html tags are allowed. Links included in the message are also converted to hyperlinks in the email. The message may contain the following html tags including `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`. Be aware that when the text to html ratio is too high, the email may end up in spam filters. Custom styles on these tags are not allowed. If this field is not passed, a default message will be used.",
            "example": "Hello! Please sign the document below",
            "nullable": true,
            "type": "string"
          },
          "email_subject": {
            "description": "Subject of sign request email. This is cleaned by sign request. If this field is not passed, a default subject will be used.",
            "example": "Sign Request from Acme",
            "nullable": true,
            "type": "string"
          },
          "external_id": {
            "description": "This can be used to reference an ID in an external system that the sign request is related to.",
            "example": "123",
            "nullable": true,
            "type": "string"
          },
          "is_document_preparation_needed": {
            "description": "Indicates if the sender should receive a `prepare_url` in the response to complete document preparation via UI.",
            "example": true,
            "type": "boolean"
          },
          "is_phone_verification_required_to_view": {
            "description": "Forces signers to verify a text message prior to viewing the document. You must specify the phone number of signers to have this setting apply to them.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the sign request.",
            "example": "name",
            "type": "string"
          },
          "parent_folder": {
            "allOf": [
              {
                "$ref": "#/$defs/Folder--Mini"
              },
              {
                "description": "The destination folder to place final, signed document and signing\nlog. Only `ID` and `type` fields are required. The root folder,\nfolder ID `0`, cannot be used."
              }
            ]
          },
          "prefill_tags": {
            "description": "When a document contains sign related tags in the content, you can prefill them using this `prefill_tags` by referencing the 'id' of the tag as the `external_id` field of the prefill tag.",
            "items": {
              "$ref": "#/$defs/SignRequestPrefillTag"
            },
            "type": "array"
          },
          "redirect_url": {
            "description": "When specified, signature request will be redirected to this url when a document is signed.",
            "example": "https://www.example.com",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "source_files",
          "parent_folder"
        ],
        "title": "Create a sign request",
        "type": "object",
        "x-box-resource-id": "sign_request--base",
        "x-box-tag": "sign_requests"
      },
      "Folder--Mini": {
        "allOf": [
          {
            "$ref": "#/$defs/Folder--Base"
          },
          {
            "properties": {
              "name": {
                "description": "The name of the folder.",
                "example": "Contracts",
                "nullable": false,
                "type": "string"
              },
              "sequence_id": {
                "allOf": [
                  {
                    "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource.",
                    "example": "3",
                    "nullable": false,
                    "type": "string"
                  },
                  {
                    "nullable": false
                  }
                ]
              }
            }
          }
        ],
        "description": "A mini representation of a file version, used when\nnested under another resource.",
        "title": "Folder (Mini)",
        "type": "object",
        "x-box-resource-id": "folder--mini",
        "x-box-variant": "mini"
      },
      "Folder--Base": {
        "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
        "properties": {
          "etag": {
            "description": "The HTTP `etag` of this folder. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the folder if (no) changes have happened.",
            "example": "1",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`.",
            "example": "12345",
            "nullable": false,
            "type": "string"
          },
          "type": {
            "description": "`folder`",
            "enum": [
              "folder"
            ],
            "example": "folder",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Folder (Base)",
        "type": "object",
        "x-box-resource-id": "folder--base",
        "x-box-sanitized": true,
        "x-box-tag": "folders",
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "mini",
          "standard",
          "full"
        ]
      },
      "SignRequestPrefillTag": {
        "description": "Prefill tags are used to prefill placeholders with signer input data. Only\none value field can be included.",
        "properties": {
          "checkbox_value": {
            "description": "Checkbox prefill value",
            "example": true,
            "type": "boolean"
          },
          "date_value": {
            "description": "Date prefill value",
            "example": "2021-04-26T08:12:13.982Z",
            "format": "date-time",
            "type": "string"
          },
          "document_tag_id": {
            "description": "This references the ID of a specific tag contained in a file of the sign request.",
            "example": "1234",
            "type": "string"
          },
          "text_value": {
            "description": "Text prefill value",
            "example": "text",
            "type": "string"
          }
        },
        "title": "Sign Request Prefill Tag",
        "type": "object"
      },
      "SignRequestCreateSigner": {
        "description": "The schema for a Signer in a POST Sign Request request body",
        "properties": {
          "declined_redirect_url": {
            "description": "The URL that a signer will be redirect\nto after declining to sign a document.\nDefining this URL overrides default or global\ndeclined redirect URL settings for a specific signer.",
            "example": "https://declined-example.com",
            "nullable": true,
            "type": "string"
          },
          "email": {
            "description": "Email address of the signer",
            "example": "example@gmail.com",
            "type": "string"
          },
          "embed_url_external_user_id": {
            "description": "User ID for the signer in an external application responsible\nfor authentication when accessing the embed URL.",
            "example": "1234",
            "type": "string"
          },
          "is_in_person": {
            "description": "Used in combination with an embed URL for a sender. After the\nsender signs, they are redirected to the next `in_person` signer.",
            "example": true,
            "type": "boolean"
          },
          "login_required": {
            "description": "If set to true, signer will need to login to a Box account\nbefore signing the request. If the signer does not have\nan existing account, they will have an option to create\na free Box account.",
            "example": true,
            "nullable": true,
            "type": "boolean"
          },
          "order": {
            "description": "Order of the signer",
            "example": 2,
            "minimum": 0,
            "type": "integer"
          },
          "password": {
            "description": "If set, the signer is required to enter the password before they are able\nto sign a document. This field is write only.",
            "example": "SecretPassword123",
            "type": "string",
            "writeOnly": true
          },
          "redirect_url": {
            "description": "The URL that a signer will be redirected\nto after signing a document. Defining this URL\noverrides default or global redirect URL\nsettings for a specific signer.\nIf no declined redirect URL is specified,\nthis URL will be used for decline actions as well.",
            "example": "https://example.com",
            "nullable": true,
            "type": "string"
          },
          "role": {
            "default": "signer",
            "description": "Defines the role of the signer in the sign request. A `signer`\nmust sign the document and an `approver` must approve the document. A\n`final_copy_reader` only receives the final signed document and signing\nlog.",
            "enum": [
              "signer",
              "approver",
              "final_copy_reader"
            ],
            "example": "signer",
            "type": "string"
          },
          "verification_phone_number": {
            "description": "If set, this phone number is be used to verify the signer\nvia two factor authentication before they are able to sign the document.",
            "example": "6314578901",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "Signer fields for Create Sign Request",
        "type": "object"
      },
      "File--Mini": {
        "allOf": [
          {
            "$ref": "#/$defs/File--Base"
          },
          {
            "properties": {
              "file_version": {
                "allOf": [
                  {
                    "$ref": "#/$defs/FileVersion--Mini"
                  },
                  {
                    "description": "The information about the current version of the file."
                  }
                ]
              },
              "name": {
                "description": "The name of the file",
                "example": "Contract.pdf",
                "type": "string"
              },
              "sequence_id": {
                "allOf": [
                  {
                    "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource.",
                    "example": "3",
                    "nullable": false,
                    "type": "string"
                  },
                  {
                    "nullable": false
                  }
                ]
              },
              "sha1": {
                "description": "The SHA1 hash of the file. This can be used to compare the contents\nof a file on Box with a local file.",
                "example": "85136C79CBF9FE36BB9D05D0639C70C265C18D37",
                "format": "digest",
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "description": "A mini representation of a file, used when\nnested under another resource.",
        "required": [
          "sequence_id",
          "sha1"
        ],
        "title": "File (Mini)",
        "type": "object",
        "x-box-resource-id": "file--mini",
        "x-box-variant": "mini"
      },
      "File--Base": {
        "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
        "properties": {
          "etag": {
            "description": "The HTTP `etag` of this file. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the file if (no) changes have happened.",
            "example": "1",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "example": "12345",
            "nullable": false,
            "type": "string"
          },
          "type": {
            "description": "`file`",
            "enum": [
              "file"
            ],
            "example": "file",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "File (Base)",
        "type": "object",
        "x-box-resource-id": "file--base",
        "x-box-sanitized": true,
        "x-box-tag": "files",
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "mini",
          "standard",
          "full"
        ]
      },
      "FileVersion--Mini": {
        "allOf": [
          {
            "$ref": "#/$defs/FileVersion--Base"
          },
          {
            "properties": {
              "sha1": {
                "description": "The SHA1 hash of this version of the file.",
                "example": "134b65991ed521fcfe4724b7d814ab8ded5185dc",
                "type": "string"
              }
            }
          }
        ],
        "description": "A mini representation of a file version, used when\nnested within another resource.",
        "title": "File version (Mini)",
        "type": "object",
        "x-box-resource-id": "file_version--mini",
        "x-box-variant": "mini"
      },
      "FileVersion--Base": {
        "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
        "properties": {
          "id": {
            "description": "The unique identifier that represent a file version.",
            "example": "12345",
            "nullable": false,
            "type": "string"
          },
          "type": {
            "description": "`file_version`",
            "enum": [
              "file_version"
            ],
            "example": "file_version",
            "nullable": false,
            "type": "string"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "File version (Base)",
        "type": "object",
        "x-box-resource-id": "file_version--base",
        "x-box-sanitized": true,
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "mini",
          "standard",
          "full"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.box.com/2.0/sign_requests"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Create a sign request"
        },
        "A request to create a sign request object",
        "**Key properties:**",
        {
          "$ul": [
            "**are_reminders_enabled**: Reminds signers to sign a document on day 3, 8, 13 and 18. Reminders are only sent to outstanding signers.",
            "**are_text_signatures_enabled**: Disables the usage of signatures generated by typing (text). (default: true)",
            "**days_valid**: Number of days after which this request will automatically expire if not completed.",
            "**declined_redirect_url**: The uri that a signer will be redirected to after declining to sign a document.",
            "**email_message**: Message to include in sign request email. The field is cleaned through sanitization of specific characters. However, some html tags are allowed. Links included in the message are also converted to hyperlinks in the email. The message may contain the following html tags including `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`. Be aware that when the text to html ratio is too high, the email may end up in spam filters. Custom styles on these tags are not allowed. If this field is not passed, a default message will be used.",
            "**email_subject**: Subject of sign request email. This is cleaned by sign request. If this field is not passed, a default subject will be used.",
            "**external_id**: This can be used to reference an ID in an external system that the sign request is related to.",
            "**is_document_preparation_needed**: Indicates if the sender should receive a `prepare_url` in the response to complete document preparation via UI.",
            "**is_phone_verification_required_to_view**: Forces signers to verify a text message prior to viewing the document. You must specify the phone number of signers to have this setting apply to them.",
            "**name**: Name of the sign request.",
            "**parent_folder**",
            "**prefill_tags**: When a document contains sign related tags in the content, you can prefill them using this `prefill_tags` by referencing the 'id' of the tag as the `external_id` field of the prefill tag.",
            "**redirect_url**: When specified, signature request will be redirected to this url when a document is signed.",
            "**auto_expire_at**: Uses `days_valid` to calculate the date and time, in GMT, the sign request will expire if unsigned.",
            "**id**: Sign request ID",
            "**prepare_url**: This URL is returned if `is_document_preparation_needed` is",
            [
              "**sign_files**: List of files that will be signed, which are copies of the original",
              {
                "$ul": [
                  "**files**",
                  "**is_ready_for_download**: Indicates whether the `sign_files` documents are processing"
                ]
              }
            ],
            "**signature_color**: Force a specific color for the signature (blue, black, or red).",
            "**signers**: Array of signers for the sign request",
            "**signing_log**",
            "**source_files**: List of files to create a signing document from. Only the ID and type fields are required for each file. The array will be empty if the `source_files` are deleted.",
            "**status**: Describes the status of the sign request",
            "**type**: object type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
