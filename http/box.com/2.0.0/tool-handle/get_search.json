{
  "name": "get_search",
  "description": "Searches for files, folders, web links, and shared files across the\nusers content or across the entire enterprise.",
  "parameters": {
    "type": "object",
    "properties": {
      "query": {
        "type": "string",
        "description": "The string to search for. This query is matched against item names,\ndescriptions, text content of files, and various other fields of\nthe different item types.\n\nThis parameter supports a variety of operators to further refine\nthe results returns.\n\n* `\"\"` - by wrapping a query in double quotes only exact matches are\n  returned by the API. Exact searches do not return search matches\n  based on specific character sequences. Instead, they return\n  matches based on phrases, that is, word sequences. For example:\n  A search for `\"Blue-Box\"` may return search results including\n  the sequence `\"blue.box\"`, `\"Blue Box\"`, and `\"Blue-Box\"`;\n  any item containing the words `Blue` and `Box` consecutively, in\n  the order specified.\n* `AND` - returns items that contain both the search terms. For\n  example, a search for `marketing AND BoxWorks` returns items\n  that have both `marketing` and `BoxWorks` within its text in any order.\n  It does not return a result that only has `BoxWorks` in its text.\n* `OR` - returns items that contain either of the search terms. For\n  example, a search for `marketing OR BoxWorks` returns a result that\n  has either `marketing` or `BoxWorks` within its text. Using this\n  operator is not necessary as we implicitly interpret multi-word\n  queries as `OR` unless another supported boolean term is used.\n* `NOT` - returns items that do not contain the search term provided.\n  For example, a search for `marketing AND NOT BoxWorks` returns a result\n  that has only `marketing` within its text. Results containing\n  `BoxWorks` are omitted.\n\nWe do not support lower case (that is,\n`and`, `or`, and `not`) or mixed case (that is, `And`, `Or`, and `Not`)\noperators.\n\nThis field is required unless the `mdfilters` parameter is defined."
      },
      "scope": {
        "default": "user_content",
        "enum": [
          "user_content",
          "enterprise_content"
        ],
        "type": "string",
        "description": "Limits the search results to either the files that the user has\naccess to, or to files available to the entire enterprise.\n\nThe scope defaults to `user_content`, which limits the search\nresults to content that is available to the currently authenticated\nuser.\n\nThe `enterprise_content` can be requested by an admin through our\nsupport channels. Once this scope has been enabled for a user, it\nwill allow that use to query for content across the entire\nenterprise and not only the content that they have access to."
      },
      "file_extensions": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any files that match any of the provided\nfile extensions. This list is a comma-separated list of file extensions\nwithout the dots."
      },
      "created_at_range": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any items created within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything created before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead."
      },
      "updated_at_range": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any items updated within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything updated before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead."
      },
      "size_range": {
        "items": {
          "type": "integer"
        },
        "type": "array",
        "description": "Limits the search results to any items with a size within\na given file size range. This applied to files and folders.\n\nSize ranges are defined as comma separated list of a lower\nand upper byte size limit (inclusive).\n\nThe upper and lower bound can be omitted to create open ranges."
      },
      "owner_user_ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any items that are owned\nby the given list of owners, defined as a list of comma separated\nuser IDs.\n\nThe items still need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults. If the user does not have access to any files owned by any of\nthe users an empty result set will be returned.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team."
      },
      "recent_updater_user_ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any items that have been updated\nby the given list of users, defined as a list of comma separated\nuser IDs.\n\nThe items still need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults. If the user does not have access to any files owned by any of\nthe users an empty result set will be returned.\n\nThis feature only searches back to the last 10 versions of an item."
      },
      "ancestor_folder_ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to items within the given\nlist of folders, defined as a comma separated lists\nof folder IDs.\n\nSearch results will also include items within any subfolders\nof those ancestor folders.\n\nThe folders still need to be owned or shared with\nthe currently authenticated user. If the folder is not accessible by this\nuser, or it does not exist, a `HTTP 404` error code will be returned\ninstead.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team."
      },
      "content_types": {
        "items": {
          "enum": [
            "name",
            "description",
            "file_content",
            "comments",
            "tag"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any items that match the search query\nfor a specific part of the file, for example the file description.\n\nContent types are defined as a comma separated lists\nof Box recognized content types. The allowed content types are as follows.\n\n* `name` - The name of the item, as defined by its `name` field.\n* `description` - The description of the item, as defined by its\n  `description` field.\n* `file_content` - The actual content of the file.\n* `comments` - The content of any of the comments on a file or\n   folder.\n* `tags` - Any tags that are applied to an item, as defined by its\n   `tags` field."
      },
      "type": {
        "enum": [
          "file",
          "folder",
          "web_link"
        ],
        "type": "string",
        "description": "Limits the search results to any items of this type. This\nparameter only takes one value. By default the API returns\nitems that match any of these types.\n\n* `file` - Limits the search results to files\n* `folder` - Limits the search results to folders\n* `web_link` - Limits the search results to web links, also known\n   as bookmarks"
      },
      "trash_content": {
        "default": "non_trashed_only",
        "enum": [
          "non_trashed_only",
          "trashed_only"
        ],
        "type": "string",
        "description": "Determines if the search should look in the trash for items.\n\nBy default, this API only returns search results for items\nnot currently in the trash (`non_trashed_only`).\n\n* `trashed_only` - Only searches for items currently in the trash\n* `non_trashed_only` - Only searches for items currently not in\n  the trash"
      },
      "mdfilters": {
        "description": "Limits the search results to any items for which the metadata matches\nthe provided filter.\n\nThis parameter contains a list of 1 metadata template to filter\nthe search results by. This list can currently only\ncontain one entry, though this might be expanded in the future.\n\nThis parameter is required unless the `query` parameter is provided.",
        "items": {
          "$ref": "#/$defs/MetadataFilter"
        },
        "maxItems": 1,
        "minItems": 1,
        "type": "array"
      },
      "sort": {
        "default": "relevance",
        "enum": [
          "modified_at",
          "relevance"
        ],
        "type": "string",
        "description": "Defines the order in which search results are returned. This API\ndefaults to returning items by relevance unless this parameter is\nexplicitly specified.\n\n* `relevance` (default) returns the results sorted by relevance to the\nquery search term. The relevance is based on the occurrence of the search\nterm in the items name, description, content, and additional properties.\n* `modified_at` returns the results ordered in descending order by date\nat which the item was last modified."
      },
      "direction": {
        "default": "DESC",
        "enum": [
          "DESC",
          "ASC"
        ],
        "type": "string",
        "description": "Defines the direction in which search results are ordered. This API\ndefaults to returning items in descending (`DESC`) order unless this\nparameter is explicitly specified.\n\nWhen results are sorted by `relevance` the ordering is locked to returning\nitems in descending order of relevance, and this parameter is ignored."
      },
      "limit": {
        "default": 30,
        "format": "int64",
        "maximum": 200,
        "type": "integer",
        "description": "Defines the maximum number of items to return as part of a page of\nresults."
      },
      "include_recent_shared_links": {
        "default": false,
        "type": "boolean",
        "description": "Defines whether the search results should include any items\nthat the user recently accessed through a shared link.\n\nWhen this parameter has been set to true,\nthe format of the response of this API changes to return\na list of [Search Results with\nShared Links](r://search_results_with_shared_links)"
      },
      "fields": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested."
      },
      "offset": {
        "default": 0,
        "format": "int64",
        "type": "integer",
        "description": "The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response."
      },
      "deleted_user_ids": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to items that were deleted by the given\nlist of users, defined as a list of comma separated user IDs.\n\nThe `trash_content` parameter needs to be set to `trashed_only`.\n\nIf searching in trash is not performed, an empty result set\nis returned. The items need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults.\n\nIf the user does not have access to any files owned by\nany of the users, an empty result set is returned.\n\nData available from 2023-02-01 onwards."
      },
      "deleted_at_range": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Limits the search results to any items deleted within a given\ndate range.\n\nDate ranges are defined as comma separated RFC3339 timestamps.\n\nIf the the start date is omitted (`2014-05-17T13:35:01-07:00`),\nanything deleted before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00`),\nthe current date will be used as the end date instead.\n\nThe `trash_content` parameter needs to be set to `trashed_only`.\n\nIf searching in trash is not performed, then an empty result\nis returned.\n\nData available from 2023-02-01 onwards."
      }
    },
    "$defs": {
      "MetadataFilter": {
        "description": "A metadata template to filter the search results by.",
        "properties": {
          "filters": {
            "allOf": [
              {
                "anyOf": [
                  {
                    "$ref": "#/$defs/MetadataFieldFilterString"
                  },
                  {
                    "$ref": "#/$defs/MetadataFieldFilterFloat"
                  },
                  {
                    "$ref": "#/$defs/MetadataFieldFilterMultiSelect"
                  },
                  {
                    "$ref": "#/$defs/MetadataFieldFilterFloatRange"
                  },
                  {
                    "$ref": "#/$defs/MetadataFieldFilterDateRange"
                  }
                ]
              },
              {
                "description": "Specifies which fields on the template to filter the search\nresults by. When more than one field is specified, the query\nperforms a logical `AND` to ensure that the instance of the\ntemplate matches each of the fields specified."
              },
              {
                "example": {
                  "category": "online",
                  "contractValue": 1000000
                }
              }
            ]
          },
          "scope": {
            "description": "Specifies the scope of the template to filter search results by.\n\nThis will be `enterprise_{enterprise_id}` for templates defined\nfor use in this enterprise, and `global` for general templates\nthat are available to all enterprises using Box.",
            "enum": [
              "global",
              "enterprise",
              "enterprise_{enterprise_id}"
            ],
            "example": "enterprise",
            "type": "string"
          },
          "templateKey": {
            "description": "The key of the template to filter search results by.\n\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\n\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata",
            "example": "contract",
            "type": "string"
          }
        },
        "title": "Metadata filter",
        "type": "object",
        "x-box-resource-id": "metadata_filter",
        "x-box-tag": "search"
      },
      "MetadataFieldFilterString": {
        "additionalProperties": {
          "description": "A mapping between a metadata `string` field key and\nthe value to match search results on.",
          "example": "online",
          "type": "string",
          "x-box-example-key": "category"
        },
        "description": "Specifies which text field on the template to filter the search\nresults by.",
        "example": {
          "category": "online"
        },
        "title": "Metadata field filter (string)",
        "type": "object",
        "x-box-resource-id": "metadata_field_filter_string"
      },
      "MetadataFieldFilterFloat": {
        "additionalProperties": {
          "description": "A mapping between a metadata `float` field key and\nthe value to match search results on.",
          "example": 10000,
          "type": "number",
          "x-box-example-key": "contractValue"
        },
        "description": "Specifies which `float` field on the template to filter the search\nresults by.",
        "example": {
          "contractValue": 10000
        },
        "title": "Metadata field filter (float)",
        "type": "object",
        "x-box-resource-id": "metadata_field_filter_float"
      },
      "MetadataFieldFilterMultiSelect": {
        "additionalProperties": {
          "description": "A mapping between a metadata `multiSelect` field key and\nthe one or more values to match search results on.\n\nWhen performing a search, the query will essentially\nperform an `OR` operation to match any template where any of\nthe provided values match this field.",
          "example": [
            "online",
            "enterprise"
          ],
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-box-example-key": "category"
        },
        "description": "Specifies the values to match for a `multiSelect` metadata\nfield. When performing a search, the query will essentially\nperform an `OR` operation to match any template where any of\nthe provided values match this field.",
        "example": {
          "category": [
            "online",
            "enterprise"
          ]
        },
        "title": "Metadata field filter (multi-select)",
        "type": "object",
        "x-box-resource-id": "metadata_field_filter_multi_select"
      },
      "MetadataFieldFilterFloatRange": {
        "additionalProperties": {
          "description": "Specifies which `float` field on the template to filter the search\nresults by, specifying a range of values that can match.",
          "example": {
            "gt": 100000,
            "lt": 200000
          },
          "properties": {
            "gt": {
              "description": "Specifies the (inclusive) lower bound for the metadata field\nvalue. The value of a field must be greater than (`gt`) or\nequal to this value for the search query to match this\ntemplate.",
              "example": 100000,
              "type": "number"
            },
            "lt": {
              "description": "Specifies the (inclusive) upper bound for the metadata field\nvalue. The value of a field must be lower than (`lt`) or\nequal to this value for the search query to match this\ntemplate.",
              "example": 200000,
              "type": "number"
            }
          },
          "type": "object",
          "x-box-example-key": "value"
        },
        "description": "Specifies which `float` field on the template to filter the search\nresults by, specifying a range of values that can match.",
        "example": {
          "contractValue": {
            "gt": 100000,
            "lt": 200000
          }
        },
        "title": "Metadata field filter (float range)",
        "type": "object",
        "x-box-resource-id": "metadata_field_filter_float_range"
      },
      "MetadataFieldFilterDateRange": {
        "additionalProperties": {
          "description": "Match a `date` metadata field to a range of values.",
          "example": {
            "gt": "2016-08-01T00:00:00Z",
            "lt": "2017-08-01T00:00:00Z"
          },
          "properties": {
            "gt": {
              "description": "Specifies the (inclusive) lower bound for the metadata field\nvalue. The value of a field must be greater than (`gt`) or\nequal to this value for the search query to match this\ntemplate.",
              "example": "2016-08-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            },
            "lt": {
              "description": "Specifies the (inclusive) upper bound for the metadata field\nvalue. The value of a field must be lower than (`lt`) or\nequal to this value for the search query to match this\ntemplate.",
              "example": "2017-08-01T00:00:00Z",
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object",
          "x-box-example-key": "expirationDate"
        },
        "description": "Specifies which `date` field on the template to filter the search\nresults by, specifying a range of dates that can match.",
        "example": {
          "expirationDate": {
            "gt": "2016-08-01T00:00:00Z",
            "lt": "2017-08-01T00:00:00Z"
          }
        },
        "title": "Metadata field filter (date range)",
        "type": "object",
        "x-box-resource-id": "metadata_field_filter_date_range"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.box.com/2.0/search{?query,scope,file_extensions,created_at_range,updated_at_range,size_range,owner_user_ids,recent_updater_user_ids,ancestor_folder_ids,content_types,type,trash_content,mdfilters,sort,direction,limit,include_recent_shared_links,fields,offset,deleted_user_ids,deleted_at_range}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
