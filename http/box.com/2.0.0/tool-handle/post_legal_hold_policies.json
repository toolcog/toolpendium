{
  "name": "post_legal_hold_policies",
  "description": "Create a new legal hold policy.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "description": {
            "description": "A description for the policy.",
            "example": "A custom policy for the sales team",
            "maxLength": 500,
            "type": "string"
          },
          "filter_ended_at": {
            "description": "The filter end date.\n\nWhen this policy is applied using a `custodian` legal\nhold assignments, it will only apply to file versions\ncreated or uploaded inside of the\ndate range. Other assignment types, such as folders and\nfiles, will ignore the date filter.\n\nRequired if `is_ongoing` is set to `false`.",
            "example": "2012-12-18T10:53:43-08:00",
            "format": "date-time",
            "maxLength": 500,
            "type": "string"
          },
          "filter_started_at": {
            "description": "The filter start date.\n\nWhen this policy is applied using a `custodian` legal\nhold assignments, it will only apply to file versions\ncreated or uploaded inside of the\ndate range. Other assignment types, such as folders and\nfiles, will ignore the date filter.\n\nRequired if `is_ongoing` is set to `false`.",
            "example": "2012-12-12T10:53:43-08:00",
            "format": "date-time",
            "maxLength": 500,
            "type": "string"
          },
          "is_ongoing": {
            "description": "Whether new assignments under this policy should\ncontinue applying to files even after initialization.\n\nWhen this policy is applied using a legal hold assignment,\nit will continue applying the policy to any new file versions\neven after it has been applied.\n\nFor example, if a legal hold assignment is placed on a user\ntoday, and that user uploads a file tomorrow, that file will\nget held. This will continue until the policy is retired.\n\nRequired if no filter dates are set.",
            "example": true,
            "type": "boolean"
          },
          "policy_name": {
            "description": "The name of the policy.",
            "example": "Sales Policy",
            "maxLength": 254,
            "type": "string"
          }
        },
        "required": [
          "policy_name"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.box.com/2.0/legal_hold_policies"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Legal hold policy (Mini)"
        },
        "A mini legal hold policy",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: The unique identifier for this legal hold policy",
            "**type**: `legal_hold_policy`",
            [
              "**assignment_counts**: Counts of assignments within this a legal hold policy by item type",
              {
                "$ul": [
                  "**file**: The number of files this policy is applied to",
                  "**file_version**: The number of file versions this policy is applied to",
                  "**folder**: The number of folders this policy is applied to",
                  "**user**: The number of users this policy is applied to"
                ]
              }
            ],
            "**created_at**: When the legal hold policy object was created",
            "**created_by**",
            "**deleted_at**: When the policy release request was sent. (Because",
            "**description**: Description of the legal hold policy. Optional",
            "**filter_ended_at**: User-specified, optional date filter applies to",
            "**filter_started_at**: User-specified, optional date filter applies to",
            "**modified_at**: When the legal hold policy object was modified.",
            "**policy_name**: Name of the legal hold policy.",
            "**release_notes**: Optional notes about why the policy was created.",
            "**status**: * 'active' - the policy is not in a transition state"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Client error"
        },
        "A generic error",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: A Box-specific error code",
            [
              "**context_info**: A free-form object that contains additional context",
              {
                "$ul": [
                  "**message**: More details on the error."
                ]
              }
            ],
            "**help_url**: A URL that links to more information about why this error occurred.",
            "**message**: A short message describing the error.",
            "**request_id**: A unique identifier for this response, which can be used",
            "**status**: The HTTP status of the response.",
            "**type**: `error`"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
