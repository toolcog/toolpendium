{
  "name": "getTickets",
  "description": "List all abuse tickets ids that match user provided filters",
  "parameters": {
    "type": "object",
    "properties": {
      "type": {
        "enum": [
          "A_RECORD",
          "CHILD_ABUSE",
          "CONTENT",
          "FRAUD_WIRE",
          "IP_BLOCK",
          "MALWARE",
          "NETWORK_ABUSE",
          "PHISHING",
          "SPAM"
        ],
        "type": "string",
        "description": "The type of abuse."
      },
      "closed": {
        "default": false,
        "type": "boolean",
        "description": "Is this abuse ticket closed?"
      },
      "sourceDomainOrIp": {
        "format": "host-name-or-ip-address",
        "type": "string",
        "description": "The domain name or ip address the abuse originated from"
      },
      "target": {
        "type": "string",
        "description": "The brand/company the abuse is targeting. ie: brand name/bank name"
      },
      "createdStart": {
        "format": "iso-datetime",
        "type": "string",
        "description": "The earliest abuse ticket creation date to pull abuse tickets for"
      },
      "createdEnd": {
        "format": "iso-datetime",
        "type": "string",
        "description": "The latest abuse ticket creation date to pull abuse tickets for"
      },
      "limit": {
        "default": 100,
        "format": "integer-positive",
        "maximum": 100,
        "type": "integer",
        "description": "Number of abuse ticket numbers to return."
      },
      "offset": {
        "default": 0,
        "format": "integer-positive",
        "type": "integer",
        "description": "The earliest result set record number to pull abuse tickets for"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//api.ote-godaddy.com/v1/abuse/tickets{?type,closed,sourceDomainOrIp,target,createdStart,createdEnd,limit,offset}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**pagination**",
              {
                "$ul": [
                  "**first**: Optional link to first list of results",
                  "**last**: Optional link to last list of results",
                  "**next**: Optional link to next list of results",
                  "**previous**: Optional link to previous list of results",
                  "**total**: Number of records available"
                ]
              }
            ],
            "**ticketIds**: A list of abuse ticket ids originated by this reporter."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error",
            "**stack**: Stack trace indicating where the error occurred.<br/>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error",
            "**stack**: Stack trace indicating where the error occurred.<br/>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error",
            "**stack**: Stack trace indicating where the error occurred.<br/>"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
