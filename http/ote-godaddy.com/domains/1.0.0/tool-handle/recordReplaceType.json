{
  "name": "recordReplaceType",
  "description": "Replace all DNS Records for the specified Domain with the specified Type",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Shopper-Id": {
        "type": "string",
        "description": "Shopper ID which owns the domain. NOTE: This is only required if you are a Reseller managing a domain purchased outside the scope of your reseller account. For instance, if you're a Reseller, but purchased a Domain via http://www.godaddy.com"
      },
      "domain": {
        "type": "string",
        "description": "Domain whose DNS Records are to be replaced"
      },
      "type": {
        "enum": [
          "A",
          "AAAA",
          "CNAME",
          "MX",
          "NS",
          "SOA",
          "SRV",
          "TXT"
        ],
        "type": "string",
        "description": "DNS Record Type for which DNS Records are to be replaced"
      },
      "body": {
        "items": {
          "$ref": "#/$defs/DNSRecordCreateType"
        },
        "type": "array",
        "description": "DNS Records to replace whatever currently exists"
      }
    },
    "required": [
      "domain",
      "type",
      "body"
    ],
    "$defs": {
      "DNSRecordCreateType": {
        "properties": {
          "data": {
            "type": "string"
          },
          "name": {
            "format": "domain",
            "type": "string"
          },
          "port": {
            "description": "Service port (SRV only)",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "priority": {
            "description": "Record priority (MX and SRV only)",
            "format": "integer-positive",
            "type": "integer"
          },
          "protocol": {
            "description": "Service protocol (SRV only)",
            "type": "string"
          },
          "service": {
            "description": "Service type (SRV only)",
            "type": "string"
          },
          "ttl": {
            "format": "integer-positive",
            "type": "integer"
          },
          "weight": {
            "description": "Record weight (SRV only)",
            "format": "integer-positive",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "data"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "//api.ote-godaddy.com/v1/domains/{domain}/records/{type}"
    },
    "headers": {
      "X-Shopper-Id": {
        "$": "X-Shopper-Id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error",
            "**retryAfterSec**: Number of seconds to wait before attempting a similar request"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "504": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
