{
  "name": "certificate_get",
  "description": "Once the certificate order has been created, this method can be used to check the status of the certificate. This method can also be used to retrieve details of the certificate.",
  "parameters": {
    "type": "object",
    "properties": {
      "certificateId": {
        "type": "string",
        "description": "Certificate id to lookup"
      }
    },
    "required": [
      "certificateId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//api.ote-godaddy.com/v1/certificates/{certificateId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**certificateId**: The unique identifier of the certificate request. Only present if no errors returned",
            "**commonName**: Common name of certificate",
            [
              "**contact**",
              {
                "$ul": [
                  "**email**: Email address of requestor contact",
                  "**jobTitle**: Only used for EVSSL. Job title of requestor contact",
                  "**nameFirst**: First name of requestor contact",
                  "**nameLast**: Last name of requestor contact",
                  "**nameMiddle**: Middle initial of requestor contact",
                  "**phone**: Phone number for requestor contact",
                  "**suffix**: Suffix of requestor contact"
                ]
              }
            ],
            "**createdAt**: The date the certificate was ordered.",
            "**deniedReason**: Only present if certificate order has been denied",
            [
              "**organization**",
              {
                "$ul": [
                  [
                    "**address**",
                    {
                      "$ul": [
                        "**address1**: Address line 1 of organization address",
                        "**address2**: Address line 2 of organization address",
                        "**city**: City/Locality of organization address",
                        "**country**: Two character country code of organization",
                        "**postalCode**: Postal code of organization address",
                        "**state**: Full name of State/Province/Territory of organization address"
                      ]
                    }
                  ],
                  "**assumedName**: Only for EVSSL. The DBA(does business as) name for the organization.",
                  [
                    "**jurisdictionOfIncorporation**",
                    {
                      "$ul": [
                        "**city**",
                        "**country**",
                        "**county**",
                        "**state**"
                      ]
                    }
                  ],
                  "**name**: Name of organization that owns common name",
                  "**phone**: Phone number for organization",
                  "**registrationAgent**: Only for EVSSL.",
                  "**registrationNumber**: Only for EVSSL."
                ]
              }
            ],
            "**period**: Validity period of order. Specified in years",
            "**productType**: Certificate product type",
            "**progress**: Percentage of completion for certificate vetting",
            "**revokedAt**: The revocation date of certificate (if revoked).",
            "**rootType**: Root Type",
            "**serialNumber**: Serial number of certificate (if issued or revoked)",
            "**serialNumberHex**: Hexadecmial format for Serial number of certificate(if issued or revoked)",
            "**slotSize**: Number of subject alternative names(SAN) to be included in certificate ",
            "**status**: Status of certificate",
            "**subjectAlternativeNames**: Contains subject alternative names set",
            "**validEnd**: The end date of the certificate's validity (if issued or revoked).",
            "**validStart**: The start date of the certificate's validity (if issued or revoked)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
