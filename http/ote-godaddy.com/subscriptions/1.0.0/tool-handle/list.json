{
  "name": "list",
  "description": "Retrieve a list of Subscriptions for the specified Shopper",
  "parameters": {
    "type": "object",
    "properties": {
      "X-Shopper-Id": {
        "type": "string",
        "description": "Shopper ID to return subscriptions for when not using JWT"
      },
      "X-Market-Id": {
        "default": "en-US",
        "type": "string",
        "description": "The market that the response should be formatted for"
      },
      "productGroupKeys": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Only return Subscriptions with the specified product groups"
      },
      "includes": {
        "enum": [
          "addons",
          "relations"
        ],
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Optional details to be included in the response"
      },
      "offset": {
        "default": 0,
        "type": "integer",
        "description": "Number of Subscriptions to skip before starting to return paged results (must be a multiple of the limit)"
      },
      "limit": {
        "default": 25,
        "maximum": 2000,
        "minimum": 1,
        "type": "integer",
        "description": "Number of Subscriptions to retrieve in this page, starting after offset"
      },
      "sort": {
        "default": "-expiresAt",
        "enum": [
          "expiresAt",
          "-expiresAt"
        ],
        "type": "string",
        "description": "Property name that will be used to sort results. \"-\" indicates descending"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//api.ote-godaddy.com/v1/subscriptions{?productGroupKeys,includes,offset,limit,sort}"
    },
    "headers": {
      "X-Shopper-Id": {
        "$": "X-Shopper-Id"
      },
      "X-Market-Id": {
        "$": "X-Market-Id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**pagination**",
              {
                "$ul": [
                  "**first**: URI to access the first page",
                  "**last**: URI to access the last page",
                  "**next**: URI to access the next page",
                  "**previous**: URI to access the previous page",
                  "**total**: Number of records available"
                ]
              }
            ],
            "**subscriptions**: A collection of subscriptions"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error",
            "**retryAfterSec**: Number of seconds to wait before attempting a similar request"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
