{
  "name": "get",
  "description": "<strong>API Resellers</strong><ul><li>This endpoint does not support subaccounts and therefore API Resellers should not supply an X-Shopper-Id header</li></ul>",
  "parameters": {
    "type": "object",
    "properties": {
      "orderId": {
        "type": "string",
        "description": "Order id whose details are to be retrieved"
      },
      "X-Shopper-Id": {
        "type": "string",
        "description": "Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>"
      },
      "X-Market-Id": {
        "default": "en-US",
        "type": "string",
        "description": "Unique identifier of the Market in which the request is happening"
      }
    },
    "required": [
      "orderId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//api.ote-godaddy.com/v1/orders/{orderId}"
    },
    "headers": {
      "X-Shopper-Id": {
        "$": "X-Shopper-Id"
      },
      "X-Market-Id": {
        "$": "X-Market-Id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**billTo**",
              {
                "$ul": [
                  [
                    "**contact**",
                    {
                      "$ul": [
                        [
                          "**addressMailing**",
                          {
                            "$ul": [
                              "**address1**",
                              "**address2**",
                              "**city**",
                              "**country**: Two-letter ISO country code to be used as a hint for target region<br/><br/> (default: US)",
                              "**postalCode**: Postal or zip code",
                              "**state**: State or province or territory"
                            ]
                          }
                        ],
                        "**email**",
                        "**fax**",
                        "**jobTitle**",
                        "**nameFirst**",
                        "**nameLast**",
                        "**nameMiddle**",
                        "**organization**",
                        "**phone**"
                      ]
                    }
                  ],
                  "**taxId**: Tax id used for calculating the tax the customer is required to pay"
                ]
              }
            ],
            "**createdAt**: Date and time when the current order is created on",
            "**currency**: Currency in which the order has been placed",
            "**items**",
            "**orderId**: Unique identifier of current order",
            "**parentOrderId**: Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.",
            "**payments**",
            [
              "**pricing**",
              {
                "$ul": [
                  "**discount**: Discount from promotional pricing",
                  [
                    "**fees**",
                    {
                      "$ul": [
                        "**icann**: Domain registration transaction fee charged by ICANN",
                        "**total**: Sum of all fees"
                      ]
                    }
                  ],
                  "**id**",
                  "**list**: Sum of list prices for the entire cart",
                  "**savings**: Savings off of list price <pre>`savings` = `list` - `subtotal`</pre>",
                  "**subtotal**: Price with `discount` and without taxes or fees",
                  "**taxDetails**: A collection of line item tax details",
                  "**taxes**: Taxes for the entire cart",
                  "**total**: Price the customer pays <pre>`total` = `subtotal` + `taxes` + `fees.total`</pre>"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error",
            "**retryAfterSec**: Number of seconds to wait before attempting a similar request"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "504": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Short identifier for the error, suitable for indicating the specific error within client code",
            "**fields**: List of the specific fields, and the errors found with their contents",
            "**message**: Human-readable, English description of the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
