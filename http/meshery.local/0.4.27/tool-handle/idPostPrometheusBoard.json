{
  "name": "idPostPrometheusBoard",
  "description": "Used to persist selected board and panels",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "items": {
          "$ref": "#/$defs/SelectedGrafanaConfig"
        },
        "type": "array"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "SelectedGrafanaConfig": {
        "description": "SelectedGrafanaConfig represents the selected boards, panels, and template variables",
        "properties": {
          "board": {
            "$ref": "#/$defs/GrafanaBoard"
          },
          "panels": {
            "items": {
              "$ref": "#/$defs/Panel"
            },
            "type": "array",
            "x-go-name": "GrafanaPanels"
          },
          "templateVars": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "SelectedTemplateVars"
          }
        },
        "type": "object",
        "x-go-package": "github.com/layer5io/meshery/models"
      },
      "GrafanaBoard": {
        "description": "GrafanaBoard represents a Grafana board",
        "properties": {
          "org_id": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "OrgID"
          },
          "panels": {
            "items": {
              "$ref": "#/$defs/Panel"
            },
            "type": "array",
            "x-go-name": "Panels"
          },
          "slug": {
            "type": "string",
            "x-go-name": "Slug"
          },
          "template_vars": {
            "items": {
              "$ref": "#/$defs/GrafanaTemplateVars"
            },
            "type": "array",
            "x-go-name": "TemplateVars"
          },
          "title": {
            "type": "string",
            "x-go-name": "Title"
          },
          "uid": {
            "type": "string",
            "x-go-name": "UID"
          },
          "uri": {
            "type": "string",
            "x-go-name": "URI"
          }
        },
        "type": "object",
        "x-go-package": "github.com/layer5io/meshery/models"
      },
      "Panel": {
        "properties": {
          "alert": {
            "$ref": "#/$defs/Alert"
          },
          "aliasColors": {
            "type": "object",
            "x-go-name": "AliasColors"
          },
          "bars": {
            "type": "boolean",
            "x-go-name": "Bars"
          },
          "cards": {
            "properties": {
              "cardPadding": {
                "format": "double",
                "type": "number",
                "x-go-name": "CardPadding"
              },
              "cardRound": {
                "format": "double",
                "type": "number",
                "x-go-name": "CardRound"
              }
            },
            "type": "object",
            "x-go-name": "Cards"
          },
          "collapsed": {
            "type": "boolean",
            "x-go-name": "Collapsed"
          },
          "color": {
            "properties": {
              "cardColor": {
                "type": "string",
                "x-go-name": "CardColor"
              },
              "colorScale": {
                "type": "string",
                "x-go-name": "ColorScale"
              },
              "colorScheme": {
                "type": "string",
                "x-go-name": "ColorScheme"
              },
              "exponent": {
                "format": "double",
                "type": "number",
                "x-go-name": "Exponent"
              },
              "max": {
                "format": "double",
                "type": "number",
                "x-go-name": "Max"
              },
              "min": {
                "format": "double",
                "type": "number",
                "x-go-name": "Min"
              },
              "mode": {
                "type": "string",
                "x-go-name": "Mode"
              }
            },
            "type": "object",
            "x-go-name": "Color"
          },
          "colorBackground": {
            "type": "boolean",
            "x-go-name": "ColorBackground"
          },
          "colorValue": {
            "type": "boolean",
            "x-go-name": "ColorValue"
          },
          "colors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Colors"
          },
          "columns": {
            "items": {
              "$ref": "#/$defs/Column"
            },
            "type": "array",
            "x-go-name": "Columns"
          },
          "content": {
            "type": "string",
            "x-go-name": "Content"
          },
          "dashLength": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "DashLength"
          },
          "dashboardTags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "DashboardTags"
          },
          "dashes": {
            "type": "boolean",
            "x-go-name": "Dashes"
          },
          "dataFormat": {
            "type": "string",
            "x-go-name": "DataFormat"
          },
          "datasource": {
            "type": "string",
            "x-go-name": "Datasource"
          },
          "decimals": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Decimals"
          },
          "description": {
            "type": "string",
            "x-go-name": "Description"
          },
          "editable": {
            "type": "boolean",
            "x-go-name": "Editable"
          },
          "error": {
            "type": "boolean",
            "x-go-name": "Error"
          },
          "fieldConfig": {
            "$ref": "#/$defs/FieldConfig"
          },
          "fill": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Fill"
          },
          "folderId": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "FolderID"
          },
          "format": {
            "type": "string",
            "x-go-name": "Format"
          },
          "gauge": {
            "$ref": "#/$defs/Gauge"
          },
          "gridPos": {
            "properties": {
              "h": {
                "format": "int64",
                "type": "integer",
                "x-go-name": "H"
              },
              "w": {
                "format": "int64",
                "type": "integer",
                "x-go-name": "W"
              },
              "x": {
                "format": "int64",
                "type": "integer",
                "x-go-name": "X"
              },
              "y": {
                "format": "int64",
                "type": "integer",
                "x-go-name": "Y"
              }
            },
            "type": "object",
            "x-go-name": "GridPos"
          },
          "headings": {
            "type": "boolean",
            "x-go-name": "Headings"
          },
          "height": {
            "type": "object",
            "x-go-name": "Height"
          },
          "hideTimeOverride": {
            "type": "boolean",
            "x-go-name": "HideTimeOverride"
          },
          "hideZeroBuckets": {
            "type": "boolean",
            "x-go-name": "HideZeroBuckets"
          },
          "highlightCards": {
            "type": "boolean",
            "x-go-name": "HighlightCards"
          },
          "id": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "ID"
          },
          "isNew": {
            "type": "boolean",
            "x-go-name": "IsNew"
          },
          "leftYAxisLabel": {
            "type": "string",
            "x-go-name": "LeftYAxisLabel"
          },
          "legend": {
            "$ref": "#/$defs/Legend"
          },
          "limit": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Limit"
          },
          "lines": {
            "type": "boolean",
            "x-go-name": "Lines"
          },
          "linewidth": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "Linewidth"
          },
          "links": {
            "items": {
              "$ref": "#/$defs/Link"
            },
            "type": "array",
            "x-go-name": "Links"
          },
          "mappingType": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "MappingType"
          },
          "mappingTypes": {
            "items": {
              "$ref": "#/$defs/MapType"
            },
            "type": "array",
            "x-go-name": "MappingTypes"
          },
          "maxDataPoints": {
            "$ref": "#/$defs/IntString"
          },
          "minSpan": {
            "format": "float",
            "type": "number",
            "x-go-name": "MinSpan"
          },
          "mode": {
            "type": "string",
            "x-go-name": "Mode"
          },
          "nameFilter": {
            "type": "string",
            "x-go-name": "NameFilter"
          },
          "nullPointMode": {
            "type": "string",
            "x-go-name": "NullPointMode"
          },
          "onlyAlertsOnDashboard": {
            "type": "boolean",
            "x-go-name": "OnlyAlertsOnDashboard"
          },
          "options": {
            "$ref": "#/$defs/Options"
          },
          "pageSize": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "PageSize"
          },
          "panels": {
            "items": {
              "$ref": "#/$defs/Panel"
            },
            "type": "array",
            "x-go-name": "Panels"
          },
          "percentage": {
            "type": "boolean",
            "x-go-name": "Percentage"
          },
          "pointradius": {
            "format": "float",
            "type": "number",
            "x-go-name": "Pointradius"
          },
          "points": {
            "type": "boolean",
            "x-go-name": "Points"
          },
          "postfix": {
            "type": "string",
            "x-go-name": "Postfix"
          },
          "postfixFontSize": {
            "type": "string",
            "x-go-name": "PostfixFontSize"
          },
          "prefix": {
            "type": "string",
            "x-go-name": "Prefix"
          },
          "prefixFontSize": {
            "type": "string",
            "x-go-name": "PrefixFontSize"
          },
          "query": {
            "type": "string",
            "x-go-name": "Query"
          },
          "rangeMaps": {
            "items": {
              "$ref": "#/$defs/RangeMap"
            },
            "type": "array",
            "x-go-name": "RangeMaps"
          },
          "recent": {
            "type": "boolean",
            "x-go-name": "Recent"
          },
          "renderer": {
            "type": "string",
            "x-go-name": "Renderer"
          },
          "repeat": {
            "type": "string",
            "x-go-name": "Repeat"
          },
          "repeatPanelId": {
            "description": "RepeatIteration *int64   `json:\"repeatIteration,omitempty\"`",
            "format": "uint64",
            "type": "integer",
            "x-go-name": "RepeatPanelID"
          },
          "reverseYBuckets": {
            "type": "boolean",
            "x-go-name": "ReverseYBuckets"
          },
          "rightYAxisLabel": {
            "type": "string",
            "x-go-name": "RightYAxisLabel"
          },
          "scopedVars": {
            "additionalProperties": {
              "properties": {
                "selected": {
                  "type": "boolean",
                  "x-go-name": "Selected"
                },
                "text": {
                  "type": "string",
                  "x-go-name": "Text"
                },
                "value": {
                  "type": "string",
                  "x-go-name": "Value"
                }
              },
              "type": "object"
            },
            "type": "object",
            "x-go-name": "ScopedVars"
          },
          "scroll": {
            "type": "boolean",
            "x-go-name": "Scroll"
          },
          "search": {
            "type": "boolean",
            "x-go-name": "Search"
          },
          "seriesOverrides": {
            "items": {
              "$ref": "#/$defs/SeriesOverride"
            },
            "type": "array",
            "x-go-name": "SeriesOverrides"
          },
          "show": {
            "type": "string",
            "x-go-name": "Show"
          },
          "showHeader": {
            "type": "boolean",
            "x-go-name": "ShowHeader"
          },
          "sort": {
            "$ref": "#/$defs/Sort"
          },
          "sortOrder": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "SortOrder"
          },
          "spaceLength": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "SpaceLength"
          },
          "span": {
            "format": "float",
            "type": "number",
            "x-go-name": "Span"
          },
          "sparkline": {
            "$ref": "#/$defs/SparkLine"
          },
          "stack": {
            "type": "boolean",
            "x-go-name": "Stack"
          },
          "starred": {
            "type": "boolean",
            "x-go-name": "Starred"
          },
          "stateFilter": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "StateFilter"
          },
          "steppedLine": {
            "type": "boolean",
            "x-go-name": "SteppedLine"
          },
          "styles": {
            "items": {
              "$ref": "#/$defs/ColumnStyle"
            },
            "type": "array",
            "x-go-name": "Styles"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Tags"
          },
          "targets": {
            "items": {
              "$ref": "#/$defs/Target"
            },
            "type": "array",
            "x-go-name": "Targets"
          },
          "thresholds": {
            "items": {
              "$ref": "#/$defs/Threshold"
            },
            "type": "string",
            "x-go-name": "Thresholds"
          },
          "timeFrom": {
            "type": "string",
            "x-go-name": "TimeFrom"
          },
          "timeShift": {
            "type": "string",
            "x-go-name": "TimeShift"
          },
          "title": {
            "type": "string",
            "x-go-name": "Title"
          },
          "tooltip": {
            "$ref": "#/$defs/Tooltip"
          },
          "tooltipDecimals": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "TooltipDecimals"
          },
          "transform": {
            "type": "string",
            "x-go-name": "Transform"
          },
          "transparent": {
            "type": "boolean",
            "x-go-name": "Transparent"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          },
          "valueFontSize": {
            "type": "string",
            "x-go-name": "ValueFontSize"
          },
          "valueMaps": {
            "items": {
              "$ref": "#/$defs/ValueMap"
            },
            "type": "array",
            "x-go-name": "ValueMaps"
          },
          "valueName": {
            "type": "string",
            "x-go-name": "ValueName"
          },
          "x-axis": {
            "type": "boolean",
            "x-go-name": "XAxis"
          },
          "xAxis": {
            "properties": {
              "show": {
                "type": "boolean",
                "x-go-name": "Show"
              }
            },
            "type": "object",
            "x-go-name": "XAxis"
          },
          "xBucketNumber": {
            "format": "double",
            "type": "number",
            "x-go-name": "XBucketNumber"
          },
          "xBucketSize": {
            "type": "string",
            "x-go-name": "XBucketSize"
          },
          "xaxis": {
            "$ref": "#/$defs/Axis"
          },
          "y-axis": {
            "type": "boolean",
            "x-go-name": "YAxis"
          },
          "yAxis": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer",
                "x-go-name": "Decimals"
              },
              "format": {
                "type": "string",
                "x-go-name": "Format"
              },
              "logBase": {
                "format": "int64",
                "type": "integer",
                "x-go-name": "LogBase"
              },
              "max": {
                "type": "string",
                "x-go-name": "Max"
              },
              "min": {
                "type": "string",
                "x-go-name": "Min"
              },
              "show": {
                "type": "boolean",
                "x-go-name": "Show"
              },
              "splitFactor": {
                "format": "double",
                "type": "number",
                "x-go-name": "SplitFactor"
              }
            },
            "type": "object",
            "x-go-name": "YAxis"
          },
          "yBucketBound": {
            "type": "string",
            "x-go-name": "YBucketBound"
          },
          "yBucketNumber": {
            "format": "double",
            "type": "number",
            "x-go-name": "YBucketNumber"
          },
          "yBucketSize": {
            "format": "double",
            "type": "number",
            "x-go-name": "YBucketSize"
          },
          "y_formats": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "YFormats"
          },
          "yaxes": {
            "items": {
              "$ref": "#/$defs/Axis"
            },
            "type": "array",
            "x-go-name": "Yaxes"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Alert": {
        "properties": {
          "alertRuleTags": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-go-name": "AlertRuleTags"
          },
          "conditions": {
            "items": {
              "$ref": "#/$defs/AlertCondition"
            },
            "type": "array",
            "x-go-name": "Conditions"
          },
          "executionErrorState": {
            "type": "string",
            "x-go-name": "ExecutionErrorState"
          },
          "for": {
            "type": "string",
            "x-go-name": "For"
          },
          "frequency": {
            "type": "string",
            "x-go-name": "Frequency"
          },
          "handler": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Handler"
          },
          "message": {
            "type": "string",
            "x-go-name": "Message"
          },
          "name": {
            "type": "string",
            "x-go-name": "Name"
          },
          "noDataState": {
            "type": "string",
            "x-go-name": "NoDataState"
          },
          "notifications": {
            "items": {
              "$ref": "#/$defs/AlertNotification"
            },
            "type": "array",
            "x-go-name": "Notifications"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "AlertCondition": {
        "properties": {
          "evaluator": {
            "$ref": "#/$defs/AlertEvaluator"
          },
          "operator": {
            "$ref": "#/$defs/AlertOperator"
          },
          "query": {
            "$ref": "#/$defs/AlertQuery"
          },
          "reducer": {
            "$ref": "#/$defs/AlertReducer"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "AlertEvaluator": {
        "properties": {
          "params": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array",
            "x-go-name": "Params"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "AlertOperator": {
        "properties": {
          "type": {
            "type": "string",
            "x-go-name": "Type"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "AlertQuery": {
        "properties": {
          "params": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Params"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "AlertReducer": {
        "properties": {
          "params": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Params"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "AlertNotification": {
        "description": "AlertNotification as described in the doc\nhttps://grafana.com/docs/grafana/latest/http_api/alerting_notification_channels/",
        "properties": {
          "disableResolveMessage": {
            "type": "boolean",
            "x-go-name": "DisableResolveMessage"
          },
          "frequency": {
            "type": "string",
            "x-go-name": "Frequency"
          },
          "id": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "ID"
          },
          "isDefault": {
            "type": "boolean",
            "x-go-name": "IsDefault"
          },
          "name": {
            "type": "string",
            "x-go-name": "Name"
          },
          "sendReminder": {
            "type": "boolean",
            "x-go-name": "SendReminder"
          },
          "settings": {
            "type": "object",
            "x-go-name": "Settings"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          },
          "uid": {
            "type": "string",
            "x-go-name": "UID"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Column": {
        "description": "for a table",
        "properties": {
          "text": {
            "type": "string",
            "x-go-name": "TextType"
          },
          "value": {
            "type": "string",
            "x-go-name": "Value"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "FieldConfig": {
        "properties": {
          "defaults": {
            "properties": {
              "threshold": {
                "properties": {
                  "mode": {
                    "type": "string",
                    "x-go-name": "Mode"
                  },
                  "steps": {
                    "items": {
                      "properties": {
                        "color": {
                          "type": "string",
                          "x-go-name": "Color"
                        },
                        "value": {
                          "type": "string",
                          "x-go-name": "Value"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array",
                    "x-go-name": "Steps"
                  }
                },
                "type": "object",
                "x-go-name": "Threshold"
              },
              "unit": {
                "type": "string",
                "x-go-name": "Unit"
              }
            },
            "type": "object",
            "x-go-name": "Defaults"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Gauge": {
        "description": "for a stat",
        "properties": {
          "maxValue": {
            "format": "float",
            "type": "number",
            "x-go-name": "MaxValue"
          },
          "minValue": {
            "format": "float",
            "type": "number",
            "x-go-name": "MinValue"
          },
          "show": {
            "type": "boolean",
            "x-go-name": "Show"
          },
          "thresholdLabels": {
            "type": "boolean",
            "x-go-name": "ThresholdLabels"
          },
          "thresholdMarkers": {
            "type": "boolean",
            "x-go-name": "ThresholdMarkers"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Legend": {
        "description": "for a graph panel",
        "properties": {
          "alignAsTable": {
            "type": "boolean",
            "x-go-name": "AlignAsTable"
          },
          "avg": {
            "type": "boolean",
            "x-go-name": "Avg"
          },
          "current": {
            "type": "boolean",
            "x-go-name": "Current"
          },
          "hideEmpty": {
            "type": "boolean",
            "x-go-name": "HideEmpty"
          },
          "hideZero": {
            "type": "boolean",
            "x-go-name": "HideZero"
          },
          "max": {
            "type": "boolean",
            "x-go-name": "Max"
          },
          "min": {
            "type": "boolean",
            "x-go-name": "Min"
          },
          "rightSide": {
            "type": "boolean",
            "x-go-name": "RightSide"
          },
          "show": {
            "type": "boolean",
            "x-go-name": "Show"
          },
          "sideWidth": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "SideWidth"
          },
          "total": {
            "type": "boolean",
            "x-go-name": "Total"
          },
          "values": {
            "type": "boolean",
            "x-go-name": "Values"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Link": {
        "properties": {
          "asDropdown": {
            "type": "boolean",
            "x-go-name": "AsDropdown"
          },
          "dashUri": {
            "type": "string",
            "x-go-name": "DashURI"
          },
          "dashboard": {
            "type": "string",
            "x-go-name": "Dashboard"
          },
          "icon": {
            "type": "string",
            "x-go-name": "Icon"
          },
          "includeVars": {
            "type": "boolean",
            "x-go-name": "IncludeVars"
          },
          "keepTime": {
            "type": "boolean",
            "x-go-name": "KeepTime"
          },
          "params": {
            "type": "string",
            "x-go-name": "Params"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Tags"
          },
          "targetBlank": {
            "type": "boolean",
            "x-go-name": "TargetBlank"
          },
          "title": {
            "type": "string",
            "x-go-name": "Title"
          },
          "tooltip": {
            "type": "string",
            "x-go-name": "Tooltip"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          },
          "url": {
            "type": "string",
            "x-go-name": "URL"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "MapType": {
        "properties": {
          "name": {
            "type": "string",
            "x-go-name": "Name"
          },
          "value": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Value"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "IntString": {
        "properties": {
          "Valid": {
            "type": "boolean"
          },
          "Value": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "IntString represents special type for json values that could be strings or ints: 100 or \"100\"",
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Options": {
        "properties": {
          "colorMode": {
            "type": "string",
            "x-go-name": "ColorMode"
          },
          "content": {
            "type": "string",
            "x-go-name": "Content"
          },
          "displayMode": {
            "type": "string",
            "x-go-name": "DisplayMode"
          },
          "graphMode": {
            "type": "string",
            "x-go-name": "GraphMode"
          },
          "justifyMode": {
            "type": "string",
            "x-go-name": "JustifyMode"
          },
          "mode": {
            "type": "string",
            "x-go-name": "Mode"
          },
          "orientation": {
            "type": "string",
            "x-go-name": "Orientation"
          },
          "reduceOptions": {
            "properties": {
              "calcs": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-name": "Calcs"
              },
              "fields": {
                "type": "string",
                "x-go-name": "Fields"
              },
              "values": {
                "type": "boolean",
                "x-go-name": "Values"
              }
            },
            "type": "object",
            "x-go-name": "ReduceOptions"
          },
          "textMode": {
            "type": "string",
            "x-go-name": "TextMode"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "RangeMap": {
        "properties": {
          "from": {
            "type": "string",
            "x-go-name": "From"
          },
          "text": {
            "type": "string",
            "x-go-name": "Text"
          },
          "to": {
            "type": "string",
            "x-go-name": "To"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "SeriesOverride": {
        "description": "for a graph panel",
        "properties": {
          "alias": {
            "type": "string",
            "x-go-name": "Alias"
          },
          "bars": {
            "type": "boolean",
            "x-go-name": "Bars"
          },
          "color": {
            "type": "string",
            "x-go-name": "Color"
          },
          "dashes": {
            "type": "boolean",
            "x-go-name": "Dashes"
          },
          "fill": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Fill"
          },
          "fillBelowTo": {
            "type": "string",
            "x-go-name": "FillBelowTo"
          },
          "legend": {
            "type": "boolean",
            "x-go-name": "Legend"
          },
          "lines": {
            "type": "boolean",
            "x-go-name": "Lines"
          },
          "linewidth": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "LineWidth"
          },
          "nullPointMode": {
            "type": "string",
            "x-go-name": "NullPointMode"
          },
          "stack": {
            "$ref": "#/$defs/BoolString"
          },
          "transform": {
            "type": "string",
            "x-go-name": "Transform"
          },
          "yaxis": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "YAxis"
          },
          "zindex": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "ZIndex"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "BoolString": {
        "properties": {
          "Flag": {
            "type": "boolean"
          },
          "Value": {
            "type": "string"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Sort": {
        "description": "for a graph panel",
        "properties": {
          "col": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Col"
          },
          "desc": {
            "type": "boolean",
            "x-go-name": "Desc"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "SparkLine": {
        "description": "for a stat",
        "properties": {
          "fillColor": {
            "type": "string",
            "x-go-name": "FillColor"
          },
          "full": {
            "type": "boolean",
            "x-go-name": "Full"
          },
          "lineColor": {
            "type": "string",
            "x-go-name": "LineColor"
          },
          "show": {
            "type": "boolean",
            "x-go-name": "Show"
          },
          "ymax": {
            "format": "double",
            "type": "number",
            "x-go-name": "YMax"
          },
          "ymin": {
            "format": "double",
            "type": "number",
            "x-go-name": "YMin"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "ColumnStyle": {
        "description": "for a table",
        "properties": {
          "alias": {
            "type": "string",
            "x-go-name": "Alias"
          },
          "colorMode": {
            "type": "string",
            "x-go-name": "ColorMode"
          },
          "colors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Colors"
          },
          "dateFormat": {
            "type": "string",
            "x-go-name": "DateFormat"
          },
          "decimals": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "Decimals"
          },
          "link": {
            "type": "boolean",
            "x-go-name": "Link"
          },
          "linkTargetBlank": {
            "type": "boolean",
            "x-go-name": "LinkTargetBlank"
          },
          "linkTooltip": {
            "type": "string",
            "x-go-name": "LinkTooltip"
          },
          "linkUrl": {
            "type": "string",
            "x-go-name": "LinkUrl"
          },
          "mappingType": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "MappingType"
          },
          "pattern": {
            "type": "string",
            "x-go-name": "Pattern"
          },
          "thresholds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Thresholds"
          },
          "type": {
            "type": "string",
            "x-go-name": "Type"
          },
          "unit": {
            "type": "string",
            "x-go-name": "Unit"
          },
          "valueMaps": {
            "items": {
              "$ref": "#/$defs/ValueMap"
            },
            "type": "array",
            "x-go-name": "ValueMaps"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "ValueMap": {
        "description": "for a stat",
        "properties": {
          "op": {
            "type": "string",
            "x-go-name": "Op"
          },
          "text": {
            "type": "string",
            "x-go-name": "TextType"
          },
          "value": {
            "type": "string",
            "x-go-name": "Value"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Target": {
        "description": "for an any panel",
        "properties": {
          "alias": {
            "type": "string",
            "x-go-name": "Alias"
          },
          "aliasBy": {
            "type": "string",
            "x-go-name": "AliasBy"
          },
          "alignOptions": {
            "items": {
              "$ref": "#/$defs/StackdriverAlignOptions"
            },
            "type": "array",
            "x-go-name": "AlignOptions"
          },
          "alignmentPeriod": {
            "type": "string",
            "x-go-name": "AlignmentPeriod"
          },
          "bucketAggs": {
            "items": {
              "properties": {
                "field": {
                  "type": "string",
                  "x-go-name": "Field"
                },
                "id": {
                  "type": "string",
                  "x-go-name": "ID"
                },
                "settings": {
                  "properties": {
                    "interval": {
                      "type": "string",
                      "x-go-name": "Interval"
                    },
                    "min_doc_count": {
                      "type": "object",
                      "x-go-name": "MinDocCount"
                    },
                    "order": {
                      "type": "string",
                      "x-go-name": "Order"
                    },
                    "orderBy": {
                      "type": "string",
                      "x-go-name": "OrderBy"
                    },
                    "size": {
                      "type": "string",
                      "x-go-name": "Size"
                    }
                  },
                  "type": "object",
                  "x-go-name": "Settings"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-name": "BucketAggs"
          },
          "crossSeriesReducer": {
            "type": "string",
            "x-go-name": "CrossSeriesReducer"
          },
          "datasource": {
            "type": "string",
            "x-go-name": "Datasource"
          },
          "dimensions": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-go-name": "Dimensions"
          },
          "dsType": {
            "description": "For Elasticsearch",
            "type": "string",
            "x-go-name": "DsType"
          },
          "expr": {
            "description": "For Prometheus",
            "type": "string",
            "x-go-name": "Expr"
          },
          "filters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Filters"
          },
          "format": {
            "type": "string",
            "x-go-name": "Format"
          },
          "group": {
            "items": {
              "properties": {
                "params": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-go-name": "Params"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-name": "Group"
          },
          "groupBys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "GroupBys"
          },
          "hide": {
            "type": "boolean",
            "x-go-name": "Hide"
          },
          "instant": {
            "type": "boolean",
            "x-go-name": "Instant"
          },
          "interval": {
            "type": "string",
            "x-go-name": "Interval"
          },
          "intervalFactor": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "IntervalFactor"
          },
          "legendFormat": {
            "type": "string",
            "x-go-name": "LegendFormat"
          },
          "measurement": {
            "description": "For InfluxDB",
            "type": "string",
            "x-go-name": "Measurement"
          },
          "metricColumn": {
            "type": "string",
            "x-go-name": "MetricColumn"
          },
          "metricKind": {
            "type": "string",
            "x-go-name": "MetricKind"
          },
          "metricName": {
            "type": "string",
            "x-go-name": "MetricName"
          },
          "metricType": {
            "type": "string",
            "x-go-name": "MetricType"
          },
          "metrics": {
            "items": {
              "properties": {
                "field": {
                  "type": "string",
                  "x-go-name": "Field"
                },
                "id": {
                  "type": "string",
                  "x-go-name": "ID"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-name": "Metrics"
          },
          "namespace": {
            "description": "For CloudWatch",
            "type": "string",
            "x-go-name": "Namespace"
          },
          "perSeriesAligner": {
            "type": "string",
            "x-go-name": "PerSeriesAligner"
          },
          "period": {
            "type": "string",
            "x-go-name": "Period"
          },
          "projectName": {
            "description": "For the Stackdriver data source. Find out more information at\nhttps:/grafana.com/docs/grafana/v6.0/features/datasources/stackdriver/",
            "type": "string",
            "x-go-name": "ProjectName"
          },
          "query": {
            "type": "string",
            "x-go-name": "Query"
          },
          "rawQuery": {
            "type": "boolean",
            "x-go-name": "RawQuery"
          },
          "rawSql": {
            "type": "string",
            "x-go-name": "RawSql"
          },
          "refId": {
            "type": "string",
            "x-go-name": "RefID"
          },
          "region": {
            "type": "string",
            "x-go-name": "Region"
          },
          "select": {
            "items": {
              "items": {
                "properties": {
                  "params": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-name": "Params"
                  },
                  "type": {
                    "type": "string",
                    "x-go-name": "Type"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "type": "array",
            "x-go-name": "Select"
          },
          "statistics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "Statistics"
          },
          "step": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Step"
          },
          "table": {
            "description": "For PostgreSQL",
            "type": "string",
            "x-go-name": "Table"
          },
          "target": {
            "description": "For Graphite",
            "type": "string",
            "x-go-name": "Target"
          },
          "timeColumn": {
            "type": "string",
            "x-go-name": "TimeColumn"
          },
          "timeField": {
            "type": "string",
            "x-go-name": "TimeField"
          },
          "valueType": {
            "type": "string",
            "x-go-name": "ValueType"
          },
          "where": {
            "items": {
              "properties": {
                "datatype": {
                  "type": "string",
                  "x-go-name": "Datatype"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                },
                "params": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-go-name": "Params"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-name": "Where"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "StackdriverAlignOptions": {
        "description": "StackdriverAlignOptions defines the list of alignment options shown in\nGrafana during query configuration.",
        "properties": {
          "expanded": {
            "type": "boolean",
            "x-go-name": "Expanded"
          },
          "label": {
            "type": "string",
            "x-go-name": "Label"
          },
          "options": {
            "items": {
              "$ref": "#/$defs/StackdriverAlignOption"
            },
            "type": "array",
            "x-go-name": "Options"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "StackdriverAlignOption": {
        "description": "StackdriverAlignOption defines a single alignment option shown in Grafana\nduring query configuration.",
        "properties": {
          "label": {
            "type": "string",
            "x-go-name": "Label"
          },
          "metricKinds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "MetricKinds"
          },
          "text": {
            "type": "string",
            "x-go-name": "Text"
          },
          "value": {
            "type": "string",
            "x-go-name": "Value"
          },
          "valueTypes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-name": "ValueTypes"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Threshold": {
        "properties": {
          "colorMode": {
            "description": "critical, warning, ok, custom",
            "type": "string",
            "x-go-name": "ColorMode"
          },
          "fill": {
            "type": "boolean",
            "x-go-name": "Fill"
          },
          "fillColor": {
            "description": "hexadecimal color (e.g. #629e51, only when ColorMode is \"custom\")",
            "type": "string",
            "x-go-name": "FillColor"
          },
          "line": {
            "type": "boolean",
            "x-go-name": "Line"
          },
          "lineColor": {
            "description": "hexadecimal color (e.g. #629e51, only when ColorMode is \"custom\")",
            "type": "string",
            "x-go-name": "LineColor"
          },
          "op": {
            "description": "gt or lt",
            "type": "string",
            "x-go-name": "Op"
          },
          "value": {
            "description": "the alert threshold value, we do not omitempty, since 0 is a valid\nthreshold",
            "format": "float",
            "type": "number",
            "x-go-name": "Value"
          },
          "yaxis": {
            "description": "left or right",
            "type": "string",
            "x-go-name": "Yaxis"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Tooltip": {
        "properties": {
          "msResolution": {
            "type": "boolean",
            "x-go-name": "MsResolution"
          },
          "shared": {
            "type": "boolean",
            "x-go-name": "Shared"
          },
          "sort": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Sort"
          },
          "value_type": {
            "type": "string",
            "x-go-name": "ValueType"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "Axis": {
        "description": "for a graph panel",
        "properties": {
          "decimals": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "Decimals"
          },
          "format": {
            "type": "string",
            "x-go-name": "Format"
          },
          "label": {
            "type": "string",
            "x-go-name": "Label"
          },
          "logBase": {
            "format": "int64",
            "type": "integer",
            "x-go-name": "LogBase"
          },
          "max": {
            "$ref": "#/$defs/FloatString"
          },
          "min": {
            "$ref": "#/$defs/FloatString"
          },
          "show": {
            "type": "boolean",
            "x-go-name": "Show"
          }
        },
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "FloatString": {
        "properties": {
          "Valid": {
            "type": "boolean"
          },
          "Value": {
            "format": "double",
            "type": "number"
          }
        },
        "title": "FloatString represents special type for json values that could be strings or ints: 100 or \"100\"",
        "type": "object",
        "x-go-package": "github.com/grafana-tools/sdk"
      },
      "GrafanaTemplateVars": {
        "description": "GrafanaTemplateVars represents template variables in a bboard",
        "properties": {
          "datasource": {
            "$ref": "#/$defs/GrafanaDataSource"
          },
          "hide": {
            "format": "uint8",
            "type": "integer",
            "x-go-name": "Hide"
          },
          "name": {
            "type": "string",
            "x-go-name": "Name"
          },
          "query": {
            "type": "string",
            "x-go-name": "Query"
          },
          "value": {
            "type": "object",
            "x-go-name": "Value"
          }
        },
        "type": "object",
        "x-go-package": "github.com/layer5io/meshery/models"
      },
      "GrafanaDataSource": {
        "description": "GrafanaDataSource represents a Grafana datasource like Prometheus",
        "properties": {
          "id": {
            "format": "uint64",
            "type": "integer",
            "x-go-name": "ID"
          },
          "name": {
            "type": "string",
            "x-go-name": "Name"
          }
        },
        "type": "object",
        "x-go-package": "github.com/layer5io/meshery/models"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://meshery.local/api/telemetry/metrics/boards"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
