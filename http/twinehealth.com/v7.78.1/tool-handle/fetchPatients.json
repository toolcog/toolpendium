{
  "name": "fetchPatients",
  "description": "Get a list of patients.",
  "parameters": {
    "type": "object",
    "properties": {
      "filter[groups]": {
        "type": "string",
        "description": "Comma-separated list of group ids. Note that either `filter[group]` or `filter[organization]` must be specified."
      },
      "filter[organization]": {
        "type": "string",
        "description": "Fitbit Plus organization id. Note that either `filter[group]` or `filter[organization]` must be specified."
      },
      "filter[identifier][system]": {
        "type": "string",
        "description": "Identifier system (example: \"MyEHR\") - requires a \"filter[identifier][value]\" parameter"
      },
      "filter[identifier][value]": {
        "type": "string",
        "description": "Identifier value (example: \"12345\") - requires a \"filter[identifier][system]\" parameter"
      },
      "filter[archived]": {
        "type": "boolean",
        "description": "If not specified, return all patients. If set to 'true' return only archived patients, if set to 'false', return only patients who are not archived."
      },
      "filter[created_at]": {
        "type": "string",
        "description": "The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n"
      },
      "filter[updated_at]": {
        "type": "string",
        "description": "The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`\n"
      },
      "page[number]": {
        "default": 1,
        "type": "integer",
        "description": "Page number"
      },
      "page[size]": {
        "default": 10,
        "maximum": 50,
        "minimum": 0,
        "type": "integer",
        "description": "Page size"
      },
      "page[limit]": {
        "default": 50,
        "minimum": 0,
        "type": "integer",
        "description": "Page limit"
      },
      "page[cursor]": {
        "type": "string",
        "description": "Page cursor"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.twinehealth.com/pub/patient{?filter[groups],filter[organization],filter[identifier][system],filter[identifier][value],filter[archived],filter[created_at],filter[updated_at],page[number],page[size],page[limit],page[cursor]}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            [
              "**links**",
              {
                "$ul": [
                  "**last**",
                  "**next**",
                  "**prev**",
                  "**self**"
                ]
              }
            ],
            [
              "**meta**",
              {
                "$ul": [
                  "**count**",
                  "**req_id**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**errors**",
              {
                "$ul": [
                  "**code**",
                  "**detail**",
                  [
                    "**source**",
                    {
                      "$ul": [
                        "**parameter**",
                        "**pointer**"
                      ]
                    }
                  ],
                  "**status**",
                  "**title**"
                ]
              }
            ],
            [
              "**meta**",
              {
                "$ul": [
                  "**count**",
                  "**req_id**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**errors**",
              {
                "$ul": [
                  "**code**",
                  "**detail**",
                  [
                    "**source**",
                    {
                      "$ul": [
                        "**parameter**",
                        "**pointer**"
                      ]
                    }
                  ],
                  "**status**",
                  "**title**"
                ]
              }
            ],
            [
              "**meta**",
              {
                "$ul": [
                  "**count**",
                  "**req_id**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**errors**",
              {
                "$ul": [
                  "**code**",
                  "**detail**",
                  [
                    "**source**",
                    {
                      "$ul": [
                        "**parameter**",
                        "**pointer**"
                      ]
                    }
                  ],
                  "**status**",
                  "**title**"
                ]
              }
            ],
            [
              "**meta**",
              {
                "$ul": [
                  "**count**",
                  "**req_id**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
