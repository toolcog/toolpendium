{
  "name": "nodes_addon_read",
  "description": "Retrieve details of an individual addon connected to this node.\n#### Permissions\nNodeSettings that are attached to public nodes will give read-only access to everyone. Private nodes require explicit read permission. Write and admin access are the same for public and private nodes. Administrators on a parent node have implicit read permissions for all child nodes.\nAny users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.\n#### Returns\nReturns a JSON object with a `data` key containing the details of the requested addon, if the request is successful.\n\nIf the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.",
  "parameters": {
    "type": "object",
    "properties": {
      "node_id": {
        "type": "string",
        "description": "The unique identifier of the node."
      },
      "provider": {
        "type": "string",
        "description": "The unique identifier of the addon."
      }
    },
    "required": [
      "node_id",
      "provider"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.test.osf.io/v2/nodes/{node_id}/addons/{provider}/"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Node Addon"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**attributes**: The properties of the node addon entity.",
              {
                "$ul": [
                  "**configured**: Whether or not this node has been configured with an addon folder.",
                  "**enabled**: Whether or not this node has a NodeSettings object associated with it.",
                  "**external_account_id**: The ID of the associated node addon account, if any.",
                  "**folder_id**: The ID of the linked folder from the addon provider.",
                  "**folder_path**: The folder path of the linked folder from the addon provider. Google Drive specific",
                  "**label**: A label specific to the addon provider.",
                  "**node_has_auth**: Whether or not this node is fully authorized to use this node addon.",
                  "**url**: An external link specific to the addon provider."
                ]
              }
            ],
            "**id**: The unique identifier of the draft registration entity.",
            [
              "**links**: URLs to alternative representations of the node addon entity.",
              {
                "$ul": [
                  "**self**: A link to the the canonical API endpoint for this node addon."
                ]
              }
            ],
            "**type**: The type identifier of the node addon entity (`node_addons`)."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
