{
  "name": "collections_detail",
  "description": "Retrieves a collection, if the user has appropriate permissions.\n\n#### Permissions\nAnonymous users are able to see all public collections at this endpoint. Logged in users will only be able to see their own content.\n#### Returns\nReturns a JSON object containing `data` and `links` keys.\n\nThe `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).",
  "parameters": {
    "type": "object",
    "properties": {
      "collection_id": {
        "type": "string",
        "description": "A short id for that collection"
      }
    },
    "required": [
      "collection_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.test.osf.io/v2/collections/{collection_id}/"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Collection list"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**attributes**: The properties of the collection.",
              {
                "$ul": [
                  "**bookmarks**: This attribute indicates if a collection is being used as part of the bookmarking feature that allows each user to create a personal collection.",
                  "**collected_type_choices**: A list of the acceptable entity `collected_type` metadata options acceptable for entities in the a collection. This indicates the collected types of entities within a collection.",
                  "**date_created**: The time at which the collection was created, as an iso8601 formatted timestamp.",
                  "**date_modified**: The time at which the collection was last modified, as an iso8601 formatted timestamp.",
                  "**is_promoted**: ???",
                  "**is_public**: This attribute indicates if a collection is viewable to a user with no special permissions.",
                  "**issue_choices**: A list of the acceptable entity `issue` metadata options acceptable for entities in the a collection.  This indicates what issues exist of a multi-issue collection.",
                  "**program_area_choices**: A list of the acceptable entity `program_area` metadata options acceptable for entities in the a collection.  This indicates what program areas a collection is composed of .",
                  "**status_choices**: A list of the acceptable entity `status` metadata options acceptable for entities in the a collection. This indicates the status of a entity within a collection.",
                  "**title**: The title of the collection.",
                  "**volume_choices**: A list of the acceptable entity `volume` metadata options acceptable for entities in the a collection.  This indicates what volumes exist of a multi-volume collection."
                ]
              }
            ],
            "**id**: The unique identifier of the collection.",
            [
              "**links**: URLs to alternative representations of the entity.",
              {
                "$ul": [
                  "**self**: A link to the canonical API endpoint of this collection."
                ]
              }
            ],
            [
              "**relationships**: URLs to other entities or entity collections that have a relationship to the node entity.",
              {
                "$ul": [
                  "**collected_metadata**: A link to the list of metadata entries that are linked to the current collections.",
                  "**linked_nodes**: A link to the list of nodes that are linked to the current collection.",
                  "**linked_preprints**: A link to the list of preprints that are linked to the current collection.",
                  "**linked_registrations**: A link to the list of registrations that are linked to the current collection.",
                  "**node_links**: A link to the list of nodes that are linked to the current collection.",
                  "**provider**: A link to the list of preprints that this node relates to."
                ]
              }
            ],
            "**type**: The type identifier of the entity (`collections`)."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.id"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
