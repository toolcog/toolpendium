{
  "name": "preprint_providers_preprints_list",
  "description": "\nA paginated list of preprints from the specified preprint provider. The returned preprints are sorted by their creation date, with the most recent preprints appearing first.\n#### Returns\nReturns a JSON object containing `data` and `links` keys.\n\nThe `data` key contains an array of 10 preprints. Each resource in the array is a separate preprint object.\n\nThe `links` key contains a dictionary with keys that can be used for [pagination](#tag/Pagination).\n\nIf the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.\n\n#### Filtering\nYou can optionally request that the response only include preprints that match your filters by utilizing the `filter` query parameter, e.g. https://api.osf.io/v2/preprint_providers/osf/preprints/?filter[is_published]=true.\n\nPreprints may be filtered by their `id`, `is_published`, `date_created`, `date_modified`, and `provider`.",
  "parameters": {
    "type": "object",
    "properties": {
      "preprint_provider_id": {
        "type": "string",
        "description": "The unique identifier of the preprint provider."
      }
    },
    "required": [
      "preprint_provider_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.test.osf.io/v2/preprint_providers/{preprint_provider_id}/preprints/"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Preprint list"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**attributes**: The properties of the preprint entity.",
              {
                "$ul": [
                  "**date_created**: The time at which the preprint was created, as an iso8601 formatted timestamp.",
                  "**date_modified**: The time at which the preprint was last modified, as an iso8601 formatted timestamp.",
                  "**date_published**: The time at which the preprint was published, as an iso8601 formatted timestamp.",
                  "**doi**: The DOI of the associated journal article, as entered by the user, if the preprint is published.",
                  "**is_preprint_orphan**: Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.",
                  "**license_record**: The metadata (copyright year and holder) associated with a license, required for certain licenses.",
                  "**subjects**: A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject."
                ]
              }
            ],
            "**id**: The identifier of the preprint entity.",
            [
              "**links**: URLs to alternative representations of the preprint entity.",
              {
                "$ul": [
                  "**doi**: The URL representation of the DOI entered by the user for the preprint manuscript.",
                  "**html**: A link to the project on the OSF that was created for the preprint, or from which the preprint was created.",
                  "**preprint_doi**: The URL representation of the OSF assigned DOI for the preprint.",
                  "**self**: A link to the detail page for the preprint."
                ]
              }
            ],
            [
              "**relationships**: URLs to other entities or entity collections that have a relationship to the preprint entity.",
              {
                "$ul": [
                  "**bibliographic_contributors**: A relationship to the bibliographic contributors that are listed as contributing to this preprint.",
                  "**citation**: A relationship to the citation of the preprint.",
                  "**identifiers**: A relationship to the identifiers associated with the preprint.",
                  "**license**: A relationship to the license that has been applied to the preprint.",
                  "**node**: A relationship to the node that was created for the preprint, or from which the preprint was created.",
                  "**primary_file**: A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.",
                  "**provider**: A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.)."
                ]
              }
            ],
            "**type**: The type identifier of the preprint entity (`preprints`)."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.id"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
