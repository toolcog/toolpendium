{
  "name": "nodes_comment_create",
  "description": "Create a comment on a given node overview page or a reply to a comment on that node.\n\nTo create a comment on the node overview page, the target `type` would be \"nodes\" and the target `id` would be the node `id`.\n\nTo reply to a comment on this node, the target `type` would be \"comments\" and the target `id` would be the `id` of the comment to reply to.\n#### Required\nA relationship object with a `data` key, containing the target (`comments` or `nodes`) type and a target `id` is required.\nIn addition, the `content` attribute describing the relationship between the node and the comment is required.\n#### Returns\nReturns a JSON object with a data key containing the representation of the new comment, if the request is successful.\n\nIf the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.",
  "parameters": {
    "type": "object",
    "properties": {
      "node_id": {
        "type": "string",
        "description": "The unique identifier of the node you want to comment on."
      },
      "body": {
        "example": {
          "data": {
            "attributes": {
              "content": "comment content"
            },
            "relationships": {
              "target": {
                "data": {
                  "id": "{target_id}",
                  "type": "{target_type}"
                }
              }
            },
            "type": "comments"
          }
        },
        "properties": {
          "attributes": {
            "description": "The properties of the comment entity.",
            "properties": {
              "can_edit": {
                "description": "Whether or not the current user has permission to edit this comment",
                "readOnly": true,
                "type": "boolean"
              },
              "content": {
                "description": "The content of the comment.",
                "readOnly": false,
                "type": "string"
              },
              "date_created": {
                "description": "The time at which the comment was created, as an iso8601 formatted timestamp.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "date_modified": {
                "description": "The time at which the comment was last modified, as an iso8601 formatted timestamp.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "deleted": {
                "description": "Whether or not the comment is deleted.",
                "readOnly": true,
                "type": "boolean"
              },
              "has_children": {
                "description": "Whether or not the comment has replies.",
                "readOnly": true,
                "type": "boolean"
              },
              "has_report": {
                "description": "Whether or not the comment the current user reported this as spam.",
                "readOnly": true,
                "type": "boolean"
              },
              "is_abuse": {
                "description": "Whether or not the comment is flagged or confirmed spam.",
                "readOnly": true,
                "type": "boolean"
              },
              "is_ham": {
                "description": "Whether or not an admin checked the legitimacy of this comment.",
                "readOnly": true,
                "type": "boolean"
              },
              "modified": {
                "description": "Whether or not the comment has been edited.",
                "readOnly": true,
                "type": "boolean"
              },
              "page": {
                "description": "The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.",
                "readOnly": true,
                "type": "string"
              }
            },
            "readOnly": false,
            "title": "Attributes",
            "type": "object"
          },
          "id": {
            "description": "The identifier of the comment entity.",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "URLs to alternative representations of the comment entity.",
            "properties": {
              "self": {
                "description": "A link to the detail page for the comment.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              }
            },
            "readOnly": true,
            "title": "Links",
            "type": "object"
          },
          "relationships": {
            "description": "URLs to other entities or entity collections that have a relationship to the comment entity.",
            "properties": {
              "node": {
                "description": "A relationship to the node the comment is on.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              },
              "replies": {
                "description": "A relationship to the replies to the comment.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              },
              "reports": {
                "description": "A relationship to the reports connected to the comment.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              },
              "target": {
                "description": "A relationship to the target of the comment.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              },
              "user": {
                "description": "A relationship to the user who created the comment.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              }
            },
            "readOnly": false,
            "title": "Relationships",
            "type": "object"
          },
          "type": {
            "description": "The type identifier of the comment entity (`comments`).",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "Comment",
        "type": "object"
      }
    },
    "required": [
      "node_id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.test.osf.io/v2/nodes/{node_id}/comments/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
