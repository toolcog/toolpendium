{
  "name": "nodes_draft_registrations_partial_update",
  "description": "Updates a draft registration by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.\n\nDraft Registrations contain Registration questions that will become part of the Registration. Answer the questions in the draft registration supplement by sending update requests until you are ready to submit the draft.\n\nThe registration supplement of a draft registration cannot be updated after the draft has been created.\n\nWhen updating a draft registration, `registration_metadata` is required. It must be a dictionary with keys as question ids in the registration form, and values as nested dictionaries matching the specific format in the [registration schema](TODO: link me pls).\n\nIf a question is multiple-choice, the question response must exactly match one of the possible choices.\n#### Permissions\nOnly project administrators may update draft registrations.\n#### Returns\nReturns a JSON object with a `data` key containing the new representation of the updated draft registration, if the request is successful.\n\nIf the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.",
  "parameters": {
    "type": "object",
    "properties": {
      "node_id": {
        "type": "string",
        "description": "The unique identifier of the node."
      },
      "draft_id": {
        "type": "string",
        "description": "The unique identifier of the draft registration."
      },
      "body": {
        "example": {
          "data": {
            "relationships": {
              "registration_schema": {
                "data": {
                  "id": "61e02b6c90de34000ae3447a",
                  "type": "registration_schemas"
                }
              }
            },
            "type": "draft_registrations"
          }
        },
        "properties": {
          "attributes": {
            "description": "The properties of the Draft Registration entity.",
            "properties": {
              "category": {
                "description": "The category of the Draft Registration.",
                "readOnly": false,
                "type": "string"
              },
              "current_user_permissions": {
                "description": "The current users permission level for the Draft Registration.",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "datetime_initiated": {
                "description": "The time at which the draft registration was first initiated, as an iso8601 formatted timestamp.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "datetime_updated": {
                "description": "The time at which the draft registration was last updated, as an iso8601 formatted timestamp.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "description": {
                "description": "The description of the Draft Registration.",
                "readOnly": false,
                "type": "string"
              },
              "has_project": {
                "description": "This indicates whether a Draft Registration was branched from a project.",
                "readOnly": true,
                "type": "boolean"
              },
              "node_license": {
                "properties": {
                  "copyright_holders": {
                    "description": "A list of names of copyright holders for the license.",
                    "items": {
                      "description": "A copyright holders for the license.",
                      "readOnly": true,
                      "type": "string"
                    },
                    "readOnly": false,
                    "type": "array"
                  },
                  "year": {
                    "description": "The year the copyright was made.",
                    "readOnly": false,
                    "type": "integer"
                  }
                },
                "title": "Node License",
                "type": "object"
              },
              "registration_metadata": {
                "description": "This is a legacy format for `registration_responses`.",
                "readOnly": false,
                "type": "object"
              },
              "registration_responses": {
                "description": "A dictionary of question IDs and responses from the registration schema.",
                "readOnly": false,
                "type": "object"
              },
              "tags": {
                "description": "The searchable tags of the Draft Registration.",
                "items": {
                  "type": "string"
                },
                "readOnly": false,
                "type": "array"
              },
              "title": {
                "description": "The title of the Draft Registration.",
                "readOnly": false,
                "type": "string"
              }
            },
            "readOnly": false,
            "title": "Attributes",
            "type": "object"
          },
          "id": {
            "description": "The unique identifier of the draft registration entity.",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "description": "URLs to alternative representations of the draft registration entity.",
            "properties": {
              "html": {
                "description": "A link to the draft registration's page on the OSF.",
                "format": "URL",
                "readOnly": true,
                "type": "string"
              }
            },
            "readOnly": true,
            "required": [
              "html"
            ],
            "title": "Links",
            "type": "object"
          },
          "relationships": {
            "description": "URLs to other entities or entity collections that have a relationship to the draft registration entity.",
            "properties": {
              "branched_from": {
                "description": "A link to the node that this draft registration was created from.",
                "readOnly": true,
                "type": "string"
              },
              "initiator": {
                "description": "A link to the user who initiated the draft registration.",
                "readOnly": true,
                "type": "string"
              },
              "registration_schema": {
                "description": "A link to the detailed registration schema that this draft conforms to.",
                "readOnly": true,
                "type": "string"
              }
            },
            "readOnly": true,
            "title": "Relationships",
            "type": "object"
          },
          "type": {
            "description": "The type identifier of the draft registration entity (`draft_registrations`).",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "type",
          "attributes",
          "relationships",
          "links"
        ],
        "title": "Draft Registration",
        "type": "object"
      }
    },
    "required": [
      "node_id",
      "draft_id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://api.test.osf.io/v2/nodes/{node_id}/draft_registrations/{draft_id}/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
