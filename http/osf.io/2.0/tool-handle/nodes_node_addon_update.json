{
  "name": "nodes_node_addon_update",
  "description": "Updates a node addon by setting the values of the attributes specified in the request body. Any unspecified attributes will be left unchanged.\n\nNode addon can be updated with either a **PUT** or **PATCH** request. The `external_account_id`, `enabled`, and `folder_id` fields are mandatory in a **PUT**, and optional in **PATCH**. Non-string values will be accepted and stringified, however we make no promises about the stringification output.\n\nTo delete or deauthorize a node addon, issue a **PUT** with all fields set to `null` or `False`, or a **PATCH** with enabled set `False`.\n#### Permissions\nNodeSettings that are attached to public nodes will give read-only access to everyone. Private nodes require explicit read permission. Write and admin access are the same for public and private nodes. Administrators on a parent node have implicit read permissions for all child nodes.\nAny users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.\n\n#### Returns\nReturns a JSON object with a `data` key containing the new representation of the updated node addon, if the request is successful.\n\nIf the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.",
  "parameters": {
    "type": "object",
    "properties": {
      "node_id": {
        "type": "string",
        "description": "The unique identifier of the node."
      },
      "provider": {
        "type": "string",
        "description": "The unique identifier of the addon."
      },
      "body": {
        "example": {
          "data": {
            "attributes": {
              "external_account_id": "{account_id}",
              "folder_id": "{folder_id}",
              "folder_path": "{folder_path}",
              "label": "{label}",
              "url": "{url}"
            },
            "id": "{provider}",
            "type": "node_addons"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "node_id",
      "provider",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://api.test.osf.io/v2/nodes/{node_id}/addons/{provider}/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
