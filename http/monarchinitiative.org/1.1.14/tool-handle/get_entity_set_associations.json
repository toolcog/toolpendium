{
  "name": "get_entity_set_associations",
  "description": "Returns compact associations for a given input set",
  "parameters": {
    "type": "object",
    "properties": {
      "subject": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
      },
      "background": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests"
      },
      "object_category": {
        "type": "string",
        "description": "E.g. phenotype, function"
      },
      "object_slim": {
        "type": "string",
        "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/bioentityset/associations{?subject,background,object_category,object_slim}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**docs**: solr docs",
            "**facet_counts**: Mapping between field names and association counts",
            "**highlighting**: Mapping between id and solr highlight",
            "**numFound**: total number of associations matching query",
            "**associations**: Complete representation of full association object, plus evidence",
            "**compact_associations**: Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs",
            "**objects**: List of distinct objects used"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
