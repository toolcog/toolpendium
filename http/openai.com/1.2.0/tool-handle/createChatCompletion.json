{
  "name": "createChatCompletion",
  "description": "Creates a completion for the chat message",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/CreateChatCompletionRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "CreateChatCompletionRequest": {
        "properties": {
          "frequency_penalty": {
            "default": 0,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\n\n[See more information about frequency and presence penalties.](/docs/api-reference/parameter-details)\n",
            "maximum": 2,
            "minimum": -2,
            "nullable": true,
            "type": "number"
          },
          "logit_bias": {
            "default": null,
            "description": "Modify the likelihood of specified tokens appearing in the completion.\n\nAccepts a json object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.\n",
            "nullable": true,
            "type": "object",
            "x-oaiTypeLabel": "map"
          },
          "max_tokens": {
            "default": "inf",
            "description": "The maximum number of tokens allowed for the generated answer. By default, the number of tokens the model can return will be (4096 - prompt tokens).\n",
            "type": "integer"
          },
          "messages": {
            "description": "The messages to generate chat completions for, in the [chat format](/docs/guides/chat/introduction).",
            "items": {
              "$ref": "#/$defs/ChatCompletionRequestMessage"
            },
            "minItems": 1,
            "type": "array"
          },
          "model": {
            "description": "ID of the model to use. Currently, only `gpt-3.5-turbo` and `gpt-3.5-turbo-0301` are supported.",
            "type": "string"
          },
          "n": {
            "default": 1,
            "description": "How many chat completion choices to generate for each input message.",
            "example": 1,
            "maximum": 128,
            "minimum": 1,
            "nullable": true,
            "type": "integer"
          },
          "presence_penalty": {
            "default": 0,
            "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\n\n[See more information about frequency and presence penalties.](/docs/api-reference/parameter-details)\n",
            "maximum": 2,
            "minimum": -2,
            "nullable": true,
            "type": "number"
          },
          "stop": {
            "default": null,
            "description": "Up to 4 sequences where the API will stop generating further tokens.\n",
            "oneOf": [
              {
                "nullable": true,
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "maxItems": 4,
                "minItems": 1,
                "type": "array"
              }
            ]
          },
          "stream": {
            "default": false,
            "description": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message.\n",
            "nullable": true,
            "type": "boolean"
          },
          "temperature": {
            "default": 1,
            "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.\n",
            "example": 1,
            "maximum": 2,
            "minimum": 0,
            "nullable": true,
            "type": "number"
          },
          "top_p": {
            "default": 1,
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.\n",
            "example": 1,
            "maximum": 1,
            "minimum": 0,
            "nullable": true,
            "type": "number"
          },
          "user": {
            "$ref": "#/$defs/user"
          }
        },
        "required": [
          "model",
          "messages"
        ],
        "type": "object"
      },
      "ChatCompletionRequestMessage": {
        "properties": {
          "content": {
            "description": "The contents of the message",
            "type": "string"
          },
          "name": {
            "description": "The name of the user in a multi-user chat",
            "type": "string"
          },
          "role": {
            "description": "The role of the author of this message.",
            "enum": [
              "system",
              "user",
              "assistant"
            ],
            "type": "string"
          }
        },
        "required": [
          "role",
          "content"
        ],
        "type": "object"
      },
      "user": {
        "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n",
        "example": "user-1234",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.openai.com/v1/chat/completions"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**choices**",
            "**created**",
            "**id**",
            "**model**",
            "**object**",
            [
              "**usage**",
              {
                "$ul": [
                  "**completion_tokens**",
                  "**prompt_tokens**",
                  "**total_tokens**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
