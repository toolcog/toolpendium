{
  "name": "app_documents_sales_models_create",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "appId": {
        "type": "integer",
        "description": "The identifier of the Sinao application you are using. Each application corresponds to a company and an accounting. A user can have several Sinao applications. To retrieve the identifiers of its applications, you must call the endpoint `/apps`."
      },
      "name": {
        "type": "string"
      },
      "title": {
        "type": "string"
      },
      "content": {
        "items": {
          "$ref": "#/$defs/SalesLine"
        },
        "type": "array"
      },
      "columns": {
        "properties": {
          "amount": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "discount": {
            "type": "string"
          },
          "due": {
            "type": "string"
          },
          "info_total_quantity": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "quantity_name": {
            "type": "string"
          },
          "subtotal": {
            "type": "string"
          },
          "vat_percent": {
            "type": "string"
          }
        },
        "type": "object",
        "description": "List columns to display"
      }
    },
    "required": [
      "appId"
    ],
    "$defs": {
      "SalesLine": {
        "properties": {
          "account": {
            "type": "object"
          },
          "action": {
            "enum": [
              "sell",
              "rent"
            ],
            "type": "string"
          },
          "amount": {
            "description": "Price without taxes in cents",
            "type": "integer"
          },
          "amount_accurately": {
            "description": "Price without taxes in cents + 3 decimales, example : 9899000 = 98,99€ || 1 = 0,00001€",
            "type": "integer"
          },
          "amount_with_taxes": {
            "description": "Used when there is a difference of 1 cent when starting from the amount with taxes",
            "type": "boolean"
          },
          "detail": {
            "description": "Description of the product or service",
            "type": "string"
          },
          "discount": {
            "properties": {
              "amount": {
                "description": "Use discount value for fix discount",
                "type": "integer"
              },
              "percent": {
                "description": "Use discount percent for variable discount",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "document": {
            "oneOf": [
              {
                "$ref": "#/$defs/Invoice"
              },
              {
                "$ref": "#/$defs/Quote"
              }
            ]
          },
          "id": {
            "type": "integer"
          },
          "metadata": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "product": {
            "$ref": "#/$defs/Product"
          },
          "quantity": {
            "description": "Quantity of product or service",
            "format": "double",
            "type": "number"
          },
          "stock": {
            "$ref": "#/$defs/ProductStock"
          },
          "style": {
            "properties": {
              "position": {
                "type": "integer"
              },
              "section_id": {
                "description": "Section is an Order with a position like SectionId",
                "type": "integer"
              },
              "type": {
                "enum": [
                  "section",
                  "description",
                  "product"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "total_quantity": {
            "description": "Information about total quantity to sell, only for display",
            "type": "string"
          },
          "totals": {
            "properties": {
              "due": {
                "type": "integer"
              },
              "subtotal": {
                "type": "integer"
              },
              "taxes": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "unity": {
            "description": "Unity, hours, days, meters, liters..",
            "type": "string"
          },
          "vat_percent": {
            "description": "VAT rate in cents",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Invoice": {
        "allOf": [
          {
            "$ref": "#/$defs/SalesDocumentContract"
          },
          {
            "properties": {
              "avoid_of": {
                "$ref": "#/$defs/Invoice"
              },
              "delivered_at": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "downpayments": {
                "items": {
                  "$ref": "#/$defs/Invoice"
                },
                "type": "array"
              },
              "invoice_of": {
                "$ref": "#/$defs/Quote"
              },
              "paid_at": {
                "format": "date-time",
                "type": "string"
              },
              "payment_methods": {
                "description": "Accepted methods of payment for this invoice. Methods comma separated",
                "type": "string"
              },
              "payment_period": {
                "description": "Days count before considere this invoice as late",
                "type": "integer"
              },
              "related_recurring_invoice": {
                "$ref": "#/$defs/RecurringInvoice"
              },
              "sepa_direct_debit_exported_at": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "status": {
                "enum": [
                  "draft",
                  "final",
                  "paid"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "SalesDocumentContract": {
        "properties": {
          "attachments": {
            "items": {
              "format": "uri",
              "type": "string"
            },
            "type": "array"
          },
          "author": {
            "$ref": "#/$defs/User"
          },
          "balance": {
            "$ref": "#/$defs/Balance"
          },
          "bank_detail": {
            "$ref": "#/$defs/BankDetails"
          },
          "columns": {
            "description": "Columns titles. Remove or NULL a property to hide a column",
            "properties": {
              "amount": {
                "type": "string"
              },
              "designation": {
                "type": "string"
              },
              "discount": {
                "type": "string"
              },
              "due": {
                "type": "string"
              },
              "info_total_quantity": {
                "type": "string"
              },
              "quantity": {
                "type": "string"
              },
              "quantity_name": {
                "type": "string"
              },
              "subtotal": {
                "type": "string"
              },
              "vat_percent": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "contact_infos": {
            "properties": {
              "address": {
                "description": "Customer addresss (street number and address) obtained from customer object or set manually",
                "type": "string"
              },
              "address2": {
                "description": "Customer address subline obtained from customer object or set manually",
                "type": "string"
              },
              "details": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "location": {
                "description": "Customer address location (city, postal code and country) obtained from customer object or set manually",
                "type": "string"
              },
              "name": {
                "description": "Customer name obtained from customer object or set manually",
                "type": "string"
              },
              "type": {
                "enum": [
                  "organization",
                  "person"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "content": {
            "items": {
              "$ref": "#/$defs/SalesLine"
            },
            "type": "array"
          },
          "currency": {
            "type": "string"
          },
          "customer": {
            "oneOf": [
              {
                "$ref": "#/$defs/ContactPerson"
              },
              {
                "$ref": "#/$defs/ContactOrganization"
              }
            ]
          },
          "discount": {
            "properties": {
              "amount": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "percent": {
                "type": "integer"
              },
              "value": {
                "description": "Value calculated by amount and percent",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "downpayment_request": {
            "description": "Amount of deposit required on the quote. On an invoice, this deposit represents a cash advance to be deducted from the payment but not from the amount of the invoice",
            "properties": {
              "amount": {
                "type": "integer"
              },
              "percent": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "email_sent_at": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "imported_at": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "legal_notice": {
            "description": "Legal mentions",
            "type": "string"
          },
          "metadata": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "note": {
            "description": "Private note",
            "nullable": true,
            "type": "string"
          },
          "number": {
            "readOnly": true,
            "type": "string"
          },
          "reference": {
            "description": "Free variable not display in document",
            "type": "string"
          },
          "tags": {
            "items": {
              "format": "string"
            },
            "type": "array"
          },
          "third_account": {
            "properties": {
              "address": {
                "description": "Third account addresss (street number and address) obtained from customer object or set manually",
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "location": {
                "description": "Third account address location (city, postal code and country) obtained from customer object or set manually",
                "type": "string"
              },
              "name": {
                "description": "Third account name obtained from customer object or set manually",
                "type": "string"
              },
              "type": {
                "enum": [
                  "organization",
                  "person"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "title": {
            "type": "string"
          },
          "totals": {
            "properties": {
              "due": {
                "type": "integer"
              },
              "subtotal": {
                "properties": {
                  "by_account": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "by_vat": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "total": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "taxes": {
                "properties": {
                  "total": {
                    "type": "integer"
                  },
                  "vat": {
                    "properties": {
                      "by_account": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "by_vat": {
                        "items": {
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "validated_at": {
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "vat_exemption": {
            "properties": {
              "article": {
                "type": "string"
              },
              "exempted": {
                "type": "boolean"
              },
              "reason": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "written_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/$defs/PersonIdentity"
          },
          {
            "properties": {
              "created_at": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "email": {
                "description": "Email used as login",
                "format": "email",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "readOnly": true,
                "type": "integer"
              },
              "last_access_at": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "metadata": {
                "items": {},
                "nullable": true,
                "type": "array"
              },
              "password": {
                "format": "password",
                "minLength": 8,
                "type": "string",
                "writeOnly": true
              },
              "password_is_undefined": {
                "readOnly": true,
                "type": "boolean"
              },
              "updated_at": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "PersonIdentity": {
        "properties": {
          "civility": {
            "description": "Civility is the lastname prefix",
            "nullable": true,
            "type": "string"
          },
          "establishments": {
            "items": {
              "$ref": "#/$defs/EstablishmentIdentity"
            },
            "type": "array"
          },
          "firstname": {
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "image": {
            "format": "uri",
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "metadata": {
            "items": {},
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EstablishmentIdentity": {
        "description": "A card for an establishment contact informations",
        "properties": {
          "emails": {
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "The identifier of the establishment can be absent if the data comes from the INSEE database. In this case, it is not editable",
            "nullable": true,
            "type": "integer"
          },
          "name": {
            "description": "Establishment name",
            "type": "string"
          },
          "nic": {
            "description": "Establishment number (french NIC)",
            "nullable": true,
            "pattern": "/^[0-9]{5}$/i",
            "type": "string"
          },
          "phones": {
            "items": {
              "format": "phone",
              "type": "string"
            },
            "type": "array"
          },
          "place": {
            "properties": {
              "administrative_area_level1": {
                "type": "string"
              },
              "administrative_area_level2": {
                "type": "string"
              },
              "administrative_area_level3": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "countryiso2": {
                "type": "string"
              },
              "formatted_address": {
                "description": "When obtaining data, the formatted address is automatically composed from the other properties of the object. When updating data, the formatted address can be used to automatically hydrate the other properties from Google Maps",
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "latitude": {
                "type": "integer"
              },
              "locality": {
                "type": "string"
              },
              "longitude": {
                "type": "integer"
              },
              "postal_code": {
                "type": "string"
              },
              "route": {
                "type": "string"
              },
              "route2": {
                "type": "string"
              },
              "street_number": {
                "type": "string"
              },
              "sublocality": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Balance": {
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "due": {
            "description": "Initial balance total due",
            "type": "integer"
          },
          "meaning": {
            "enum": [
              "completed",
              "remaining",
              "overpaid"
            ],
            "type": "string"
          },
          "paid": {
            "type": "integer"
          },
          "remaining": {
            "type": "integer"
          }
        }
      },
      "BankDetails": {
        "properties": {
          "bic": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactPerson": {
        "allOf": [
          {
            "$ref": "#/$defs/PersonIdentity"
          }
        ]
      },
      "ContactOrganization": {
        "allOf": [
          {
            "$ref": "#/$defs/OrganizationIdentity"
          }
        ]
      },
      "OrganizationIdentity": {
        "properties": {
          "billing_name": {
            "description": "Company name for billing",
            "type": "string"
          },
          "capital": {
            "description": "Capital in cents",
            "type": "integer"
          },
          "closeaccounting_period": {
            "type": "string"
          },
          "code_naf": {
            "description": "French NAF Code",
            "pattern": "/^[0-9]{4}[a-z]$/i",
            "type": "string"
          },
          "country_iso2": {
            "format": "ISO 3166-1 alpha-2",
            "type": "string"
          },
          "dissolution_date": {
            "format": "date",
            "type": "string"
          },
          "establishments": {
            "description": "List of contact establishments. Some establishments come from the public database (INSEE), they cannot be edited and have no ID",
            "items": {
              "$ref": "#/$defs/EstablishmentIdentity"
            },
            "type": "array"
          },
          "founding_date": {
            "format": "date",
            "type": "string"
          },
          "founding_location": {
            "type": "string"
          },
          "greffe": {
            "description": "French. Tribunal de commerce",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "legal_form": {
            "type": "string"
          },
          "logo": {
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Company name visible on the app",
            "type": "string"
          },
          "national_id": {
            "description": "Unique National Id, format by country. **In France : [0-9]{9} with last number as security key.**",
            "type": "string"
          },
          "number_of_employees": {
            "type": "string"
          },
          "rcs": {
            "description": "French. Registre du Commerce et des Sociétés",
            "type": "string"
          },
          "slogan": {
            "description": "Free variable",
            "type": "string"
          },
          "tax_id": {
            "description": "International Tax Id",
            "type": "string"
          },
          "vat_id": {
            "description": "European VAT Id. **In France : FR [0-9]{2} [0-9]{9}**",
            "type": "string"
          },
          "vat_system": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Quote": {
        "allOf": [
          {
            "$ref": "#/$defs/SalesDocumentContract"
          },
          {
            "properties": {
              "commercialvalidity_deadline": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "status": {
                "enum": [
                  "draft",
                  "waiting",
                  "goodforagreement",
                  "refused",
                  "transformed",
                  "deleted"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "RecurringInvoice": {
        "allOf": [
          {
            "$ref": "#/$defs/SalesDocumentContract"
          },
          {
            "properties": {
              "content": {
                "items": {
                  "$ref": "#/$defs/SalesLine"
                },
                "type": "array"
              },
              "discount": {
                "type": "integer"
              },
              "discount_end_at": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "discount_mode": {
                "type": "string"
              },
              "discount_start_at": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "end_at": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "frequency_count": {
                "type": "integer"
              },
              "frequency_duration": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "next_invoice_at": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "orders_plan": {
                "items": {
                  "properties": {
                    "end_at": {
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "model": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "saving_status": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "Product": {
        "properties": {
          "accounting_number": {
            "type": "string"
          },
          "amount_accurately": {
            "description": "Price without taxes in milli-cents",
            "type": "integer"
          },
          "category": {
            "$ref": "#/$defs/ProductCategory"
          },
          "currency": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "image": {
            "oneOf": [
              {
                "format": "binary",
                "type": "string"
              },
              {
                "format": "uri",
                "type": "string"
              }
            ]
          },
          "intangible": {
            "description": "Is a service or a product ?",
            "type": "boolean"
          },
          "lifetime": {
            "description": "Product life time in seconds",
            "type": "integer"
          },
          "metadata": {
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "quantity_name": {
            "description": "Name of the quantity: days, liters, m2, m3...",
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "unity": {
            "description": "Unity, hours, days, meters, liters..",
            "type": "string"
          },
          "vat_percent": {
            "description": "VAT rate in cents",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ProductCategory": {
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "image": {
            "oneOf": [
              {
                "format": "binary",
                "type": "string"
              },
              {
                "format": "uri",
                "type": "string"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/$defs/ProductCategory"
          },
          "products": {
            "$ref": "#/$defs/Product"
          }
        },
        "type": "object"
      },
      "ProductStock": {
        "properties": {
          "bar_code": {
            "type": "integer"
          },
          "cost_amount": {
            "type": "integer"
          },
          "entered_at": {
            "type": "integer"
          },
          "expired_at": {
            "type": "integer"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "initial_quantity": {
            "readOnly": true,
            "type": "integer"
          },
          "location": {
            "type": "integer"
          },
          "product": {
            "$ref": "#/$defs/Product"
          },
          "product_stocks_movements": {
            "items": {
              "$ref": "#/$defs/ProductStocksMovement"
            },
            "type": "array"
          },
          "purchase": {
            "$ref": "#/$defs/Purchase"
          },
          "quantity_in": {
            "readOnly": true,
            "type": "integer"
          },
          "quantity_out": {
            "readOnly": true,
            "type": "integer"
          },
          "sales_lines": {
            "items": {
              "$ref": "#/$defs/SalesLine"
            },
            "type": "array"
          },
          "use_duration": {
            "type": "integer"
          }
        }
      },
      "ProductStocksMovement": {
        "properties": {
          "description": {
            "type": "string"
          },
          "future_return_date": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "invoice": {
            "$ref": "#/$defs/Invoice"
          },
          "moved_at": {
            "format": "date-time",
            "type": "string"
          },
          "product_stock": {
            "$ref": "#/$defs/ProductStock"
          },
          "quantity": {
            "readOnly": true,
            "type": "integer"
          },
          "type": {
            "enum": [
              "buy",
              "sell",
              "back",
              "temporaryexit",
              "destruct"
            ],
            "readOnly": true,
            "type": "string"
          },
          "use_duration": {
            "description": "Usage duration in seconds",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Purchase": {
        "properties": {
          "account": {
            "$ref": "#/$defs/Account"
          },
          "accounted_at": {
            "description": "Date on which the accounting entries were generated",
            "format": "date-time",
            "type": "string"
          },
          "amount": {
            "description": "Amount without taxes in cents",
            "type": "integer"
          },
          "amount_net_foreign_currency": {
            "description": "Amount without taxes in cents",
            "readOnly": true,
            "type": "integer"
          },
          "amount_tax": {
            "description": "Amount of taxes in cents",
            "type": "integer"
          },
          "balance": {
            "$ref": "#/$defs/Balance"
          },
          "billed_at": {
            "description": "Date of invoice",
            "format": "date-time",
            "type": "string"
          },
          "comment": {
            "description": "free field",
            "type": "string"
          },
          "completed_at": {
            "description": "Date on which the account, supplier, amount and billed_at fields were completed",
            "format": "date-time",
            "type": "string"
          },
          "foreign_currency": {
            "description": "Amount of taxes in cents",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "is_late": {
            "description": "The payment deadline has passed and full payment has not been received",
            "type": "boolean"
          },
          "md5": {
            "description": "Md5 hash of the initial file sent",
            "type": "string"
          },
          "paid_at": {
            "description": "Date on which the invoice was fully paid",
            "format": "date-time",
            "type": "string"
          },
          "payment_account_number": {
            "description": "Payment Account number",
            "type": "string"
          },
          "payment_deadline_at": {
            "description": "Payment deadline",
            "format": "date-time",
            "type": "string"
          },
          "payment_iban": {
            "description": "Payment IBAN",
            "type": "string"
          },
          "payment_routing_number": {
            "description": "Payment Routing number",
            "type": "string"
          },
          "payment_swift": {
            "description": "Payment SWIFT",
            "type": "string"
          },
          "picture": {
            "description": "Purchase picture",
            "type": "string"
          },
          "status": {
            "enum": [
              "new",
              "completed",
              "paid"
            ],
            "type": "string"
          },
          "supplier": {
            "$ref": "#/$defs/ContactOrganization"
          },
          "supplier_name": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "Name visible on the accounting entries of the purchase",
            "type": "string"
          },
          "vat_detail": {
            "description": "VAT breakdown",
            "type": "object"
          },
          "vat_repayment": {
            "description": "In France, depending on the type of purchase (product or service), VAT is not payable at the same time. VAT on products is due on the date of the invoice, while VAT on services is due on the date of payment thereof",
            "enum": [
              "payment",
              "billing"
            ],
            "type": "string"
          },
          "will_be_late_at": {
            "description": "Date the payment will be late. Is `false` if payment has been made",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "Account": {
        "properties": {
          "accounting_number": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "editable": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "is_associate": {
            "type": "boolean"
          },
          "is_cashflow": {
            "type": "boolean"
          },
          "is_purchase": {
            "type": "boolean"
          },
          "is_sales": {
            "type": "boolean"
          },
          "is_various": {
            "type": "boolean"
          },
          "journalcode": {
            "type": "string"
          },
          "keywords": {
            "description": "keywords comma separated",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "need_charge": {
            "type": "boolean"
          },
          "need_employee": {
            "type": "boolean"
          },
          "need_invoice": {
            "type": "boolean"
          },
          "technical_name": {
            "type": "string"
          }
        }
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.sinao.app/v1/apps/{appId}/salesdocumentmodels{?name,title,content,columns}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**id**",
            "**json**",
            "**name**",
            "**title**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
