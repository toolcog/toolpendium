{
  "name": "List_all_ShareInviteMonetaryAccountResponse_for_User",
  "description": "Return all the shares a user was invited to.",
  "parameters": {
    "type": "object",
    "properties": {
      "userID": {
        "type": "integer",
        "description": ""
      },
      "Cache-Control": {
        "type": "string",
        "description": "The standard HTTP Cache-Control header is required for all signed requests."
      },
      "User-Agent": {
        "type": "string",
        "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header."
      },
      "X-Bunq-Language": {
        "type": "string",
        "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US."
      },
      "X-Bunq-Region": {
        "type": "string",
        "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore."
      },
      "X-Bunq-Client-Request-Id": {
        "type": "string",
        "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer."
      },
      "X-Bunq-Geolocation": {
        "type": "string",
        "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued."
      },
      "X-Bunq-Client-Authentication": {
        "type": "string",
        "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call"
      }
    },
    "required": [
      "userID",
      "User-Agent",
      "X-Bunq-Client-Authentication"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://public-api.sandbox.bunq.com/v1/user/{userID}/share-invite-monetary-account-response"
    },
    "headers": {
      "Cache-Control": {
        "$": "Cache-Control"
      },
      "User-Agent": {
        "$": "User-Agent"
      },
      "X-Bunq-Language": {
        "$": "X-Bunq-Language"
      },
      "X-Bunq-Region": {
        "$": "X-Bunq-Region"
      },
      "X-Bunq-Client-Request-Id": {
        "$": "X-Bunq-Client-Request-Id"
      },
      "X-Bunq-Geolocation": {
        "$": "X-Bunq-Geolocation"
      },
      "X-Bunq-Client-Authentication": {
        "$": "X-Bunq-Client-Authentication"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**access_type**: Type of access that is wanted, one of VIEW_BALANCE, VIEW_TRANSACTION, DRAFT_PAYMENT or FULL_TRANSIENT",
            [
              "**counter_alias**",
              {
                "$ul": [
                  [
                    "**avatar**",
                    {
                      "$ul": [
                        "**anchor_uuid**: The public UUID of object this avatar is anchored to.",
                        "**image**: The actual image information of this avatar.",
                        "**style**: The style (if applicable) for this Avatar.",
                        "**uuid**: The public UUID of the avatar."
                      ]
                    }
                  ],
                  [
                    "**bunq_me**",
                    {
                      "$ul": [
                        "**name**: The alias name.",
                        "**service**: The pointer service. Only required for external counterparties.",
                        "**type**: The alias type, can be: EMAIL|PHONE_NUMBER|IBAN.",
                        "**value**: The alias value."
                      ]
                    }
                  ],
                  "**country**: The country of the user. Formatted as a ISO 3166-1 alpha-2 country code.",
                  "**display_name**: The name to display with this monetary account.",
                  "**iban**: The IBAN of the monetary account.",
                  "**is_light**: Whether or not the monetary account is light.",
                  [
                    "**label_user**",
                    {
                      "$ul": [
                        [
                          "**avatar**",
                          {
                            "$ul": [
                              "**anchor_uuid**: The public UUID of object this avatar is anchored to.",
                              "**image**: The actual image information of this avatar.",
                              "**style**: The style (if applicable) for this Avatar.",
                              "**uuid**: The public UUID of the avatar."
                            ]
                          }
                        ],
                        "**country**: The country of the user. 000 stands for \"unknown\"",
                        "**display_name**: The name to be displayed for this user, as it was given on the request.",
                        "**public_nick_name**: The current nickname of the user.",
                        "**uuid**: The public UUID of the label-user."
                      ]
                    }
                  ],
                  "**merchant_category_code**: The merchant category code.",
                  "**swift_account_number**: The account number used for a SWIFT payment. May or may not be an IBAN.",
                  "**swift_bic**: The BIC used for a SWIFT payment.",
                  "**transferwise_account_number**: The account number used for a Transferwise payment. May or may not be an IBAN.",
                  "**transferwise_bank_code**: The bank code used for a Transferwise payment. May or may not be a BIC."
                ]
              }
            ],
            "**created**: The timestamp of the ShareInviteBankResponse creation.",
            "**description**: The description of this share. It is basically the monetary account description.",
            "**draft_share_invite_bank_id**: The id of the draft share invite bank.",
            "**end_date**: The expiration date of this share.",
            "**id**: The id of the ShareInviteBankResponse.",
            "**monetary_account_id**: The id of the monetary account the ACCEPTED share applies to. null otherwise.",
            [
              "**relation_user**",
              {
                "$ul": [
                  [
                    "**counter_label_user**",
                    {
                      "$ul": [
                        [
                          "**avatar**",
                          {
                            "$ul": [
                              "**anchor_uuid**: The public UUID of object this avatar is anchored to.",
                              "**image**: The actual image information of this avatar.",
                              "**style**: The style (if applicable) for this Avatar.",
                              "**uuid**: The public UUID of the avatar."
                            ]
                          }
                        ],
                        "**country**: The country of the user. 000 stands for \"unknown\"",
                        "**display_name**: The name to be displayed for this user, as it was given on the request.",
                        "**public_nick_name**: The current nickname of the user.",
                        "**uuid**: The public UUID of the label-user."
                      ]
                    }
                  ],
                  "**counter_user_id**: The counter user's ID.",
                  "**counter_user_status**: The account status of a user",
                  [
                    "**label_user**",
                    {
                      "$ul": [
                        [
                          "**avatar**",
                          {
                            "$ul": [
                              "**anchor_uuid**: The public UUID of object this avatar is anchored to.",
                              "**image**: The actual image information of this avatar.",
                              "**style**: The style (if applicable) for this Avatar.",
                              "**uuid**: The public UUID of the avatar."
                            ]
                          }
                        ],
                        "**country**: The country of the user. 000 stands for \"unknown\"",
                        "**display_name**: The name to be displayed for this user, as it was given on the request.",
                        "**public_nick_name**: The current nickname of the user.",
                        "**uuid**: The public UUID of the label-user."
                      ]
                    }
                  ],
                  "**relationship**: The requested relation type.",
                  "**status**: The request's status, only for UPDATE.",
                  "**user_id**: The user's ID.",
                  "**user_status**: The account status of a user"
                ]
              }
            ],
            [
              "**share_detail**",
              {
                "$ul": [
                  [
                    "**draft_payment**",
                    {
                      "$ul": [
                        "**make_draft_payments**: If set to true, the invited user will be able to make draft payments from the shared account.",
                        "**view_balance**: If set to true, the invited user will be able to view the account balance.",
                        "**view_new_events**: If set to true, the invited user will be able to view events starting from the time the share became active.",
                        "**view_old_events**: If set to true, the invited user will be able to view events from before the share was active."
                      ]
                    }
                  ],
                  [
                    "**payment**",
                    {
                      "$ul": [
                        "**make_draft_payments**: If set to true, the invited user will be able to make draft payments from the shared account.",
                        "**make_payments**: If set to true, the invited user will be able to make payments from the shared account.",
                        "**view_balance**: If set to true, the invited user will be able to view the account balance.",
                        "**view_new_events**: If set to true, the invited user will be able to view events starting from the time the share became active.",
                        "**view_old_events**: If set to true, the invited user will be able to view events from before the share was active."
                      ]
                    }
                  ],
                  [
                    "**read_only**",
                    {
                      "$ul": [
                        "**view_balance**: If set to true, the invited user will be able to view the account balance.",
                        "**view_new_events**: If set to true, the invited user will be able to view events starting from the time the share became active.",
                        "**view_old_events**: If set to true, the invited user will be able to view events from before the share was active."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**share_type**: The share type, either STANDARD or MUTUAL.",
            "**start_date**: The start date of this share.",
            "**status**: The status of the share. Can be ACTIVE, REVOKED, REJECTED.",
            "**updated**: The timestamp of the ShareInviteBankResponse last update.",
            [
              "**user_alias_cancelled**",
              {
                "$ul": [
                  [
                    "**avatar**",
                    {
                      "$ul": [
                        "**anchor_uuid**: The public UUID of object this avatar is anchored to.",
                        "**image**: The actual image information of this avatar.",
                        "**style**: The style (if applicable) for this Avatar.",
                        "**uuid**: The public UUID of the avatar."
                      ]
                    }
                  ],
                  "**country**: The country of the user. 000 stands for \"unknown\"",
                  "**display_name**: The name to be displayed for this user, as it was given on the request.",
                  "**public_nick_name**: The current nickname of the user.",
                  "**uuid**: The public UUID of the label-user."
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
