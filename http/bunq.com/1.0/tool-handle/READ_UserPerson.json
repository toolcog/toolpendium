{
  "name": "READ_UserPerson",
  "description": "Get a specific person.",
  "parameters": {
    "type": "object",
    "properties": {
      "itemId": {
        "type": "integer",
        "description": ""
      },
      "Cache-Control": {
        "type": "string",
        "description": "The standard HTTP Cache-Control header is required for all signed requests."
      },
      "User-Agent": {
        "type": "string",
        "description": "The User-Agent header field should contain information about the user agent originating the request. There are no restrictions on the value of this header."
      },
      "X-Bunq-Language": {
        "type": "string",
        "description": "The X-Bunq-Language header must contain a preferred language indication. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore. Currently only the languages en_US and nl_NL are supported. Anything else will default to en_US."
      },
      "X-Bunq-Region": {
        "type": "string",
        "description": "The X-Bunq-Region header must contain the region (country) of the client device. The value of this header is formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, separated by an underscore."
      },
      "X-Bunq-Client-Request-Id": {
        "type": "string",
        "description": "This header must specify an ID with each request that is unique for the logged in user. There are no restrictions for the format of this ID. However, the server will respond with an error when the same ID is used again on the same DeviceServer."
      },
      "X-Bunq-Geolocation": {
        "type": "string",
        "description": "This header must specify the geolocation of the device. The format of this value is longitude latitude altitude radius country. The country is expected to be formatted of an ISO 3166-1 alpha-2 country code. When no geolocation is available or known the header must still be included but can be zero valued."
      },
      "X-Bunq-Client-Authentication": {
        "type": "string",
        "description": "The authentication token is used to authenticate the source of the API call. It is required by all API calls except for POST /v1/installation. It is important to note that the device and session calls are using the token from the response of the installation call, while all the other calls use the token from the response of the session-server call"
      }
    },
    "required": [
      "itemId",
      "User-Agent",
      "X-Bunq-Client-Authentication"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://public-api.sandbox.bunq.com/v1/user-person/{itemId}"
    },
    "headers": {
      "Cache-Control": {
        "$": "Cache-Control"
      },
      "User-Agent": {
        "$": "User-Agent"
      },
      "X-Bunq-Language": {
        "$": "X-Bunq-Language"
      },
      "X-Bunq-Region": {
        "$": "X-Bunq-Region"
      },
      "X-Bunq-Client-Request-Id": {
        "$": "X-Bunq-Client-Request-Id"
      },
      "X-Bunq-Geolocation": {
        "$": "X-Bunq-Geolocation"
      },
      "X-Bunq-Client-Authentication": {
        "$": "X-Bunq-Client-Authentication"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**address_main**",
              {
                "$ul": [
                  "**city**: The city.",
                  "**country**: The country as an ISO 3166-1 alpha-2 country code.",
                  "**extra**: The apartment, building or other extra information for addresses.",
                  "**house_number**: The house number.",
                  "**is_user_address_updated**: To show whether user created or updated her address for app event listing.",
                  "**mailbox_name**: The name on the mailbox (only used for Postal addresses).",
                  "**po_box**: The PO box.",
                  "**postal_code**: The postal code.",
                  "**province**: The province according to local standard.",
                  "**street**: The street."
                ]
              }
            ],
            [
              "**address_postal**",
              {
                "$ul": [
                  "**city**: The city.",
                  "**country**: The country as an ISO 3166-1 alpha-2 country code.",
                  "**extra**: The apartment, building or other extra information for addresses.",
                  "**house_number**: The house number.",
                  "**is_user_address_updated**: To show whether user created or updated her address for app event listing.",
                  "**mailbox_name**: The name on the mailbox (only used for Postal addresses).",
                  "**po_box**: The PO box.",
                  "**postal_code**: The postal code.",
                  "**province**: The province according to local standard.",
                  "**street**: The street."
                ]
              }
            ],
            "**alias**: The aliases of the user.",
            [
              "**avatar**",
              {
                "$ul": [
                  "**anchor_uuid**: The public UUID of object this avatar is anchored to.",
                  "**image**: The actual image information of this avatar.",
                  "**style**: The style (if applicable) for this Avatar.",
                  "**uuid**: The public UUID of the avatar."
                ]
              }
            ],
            "**country_of_birth**: The person's country of birth. Formatted as a SO 3166-1 alpha-2 country code.",
            "**created**: The timestamp of the person object's creation.",
            [
              "**daily_limit_without_confirmation_login**",
              {
                "$ul": [
                  "**currency**: The currency of the amount. It is an ISO 4217 formatted currency code.",
                  "**value**: The amount formatted to two decimal places."
                ]
              }
            ],
            "**date_of_birth**: The person's date of birth. Accepts ISO8601 date formats.",
            "**display_name**: The display name for the person.",
            "**first_name**: The person's first name.",
            "**gender**: The person's gender. Can be MALE, FEMALE or UNKNOWN.",
            "**id**: The id of the modified person object.",
            "**language**: The person's preferred language. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "**last_name**: The person's last name.",
            "**legal_name**: The person's legal name.",
            "**middle_name**: The person's middle name.",
            "**nationality**: The person's nationality. Formatted as a SO 3166-1 alpha-2 country code.",
            "**notification_filters**: The types of notifications that will result in a push notification or URL callback for this UserPerson.",
            "**place_of_birth**: The person's place of birth.",
            "**public_nick_name**: The public nick name for the person.",
            "**public_uuid**: The person's public UUID.",
            "**region**: The person's preferred region. Formatted as a ISO 639-1 language code plus a ISO 3166-1 alpha-2 country code, seperated by an underscore.",
            "**relations**: The relations for this user.",
            "**session_timeout**: The setting for the session timeout of the user in seconds.",
            "**status**: The user status. The user status. Can be: ACTIVE, BLOCKED, SIGNUP, RECOVERY, DENIED or ABORTED.",
            "**sub_status**: The user sub-status. Can be: NONE, FACE_RESET, APPROVAL, APPROVAL_DIRECTOR, APPROVAL_PARENT, APPROVAL_SUPPORT, COUNTER_IBAN, IDEAL or SUBMIT.",
            "**tax_resident**: The user's tax residence numbers for different countries.",
            "**updated**: The timestamp of the person object's last update.",
            "**version_terms_of_service**: The version of the terms of service accepted by the user."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**Error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
