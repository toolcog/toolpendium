{
  "name": "getCase",
  "description": "Retrieve the case with the specified caseId value.",
  "parameters": {
    "type": "object",
    "properties": {
      "caseId": {
        "maxLength": 18,
        "minLength": 18,
        "nullable": false,
        "type": "string",
        "description": "Retrieve the case with the specified caseId value."
      }
    },
    "required": [
      "caseId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://enterpriseapi.unicourt.com//case/{caseId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**attorneys**",
              {
                "$ul": [
                  "**attorneyArray**",
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: Attorneys)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            [
              "**caseDocuments**",
              {
                "$ul": [
                  "**caseDocumentArray**",
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: CaseDocuments)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            "**caseId**: Unique identifier of Case.",
            "**caseName**: Case name as provided by Court.",
            "**caseNumber**: Case number as provided by Court.",
            [
              "**caseStats**: Count of each entitiy of a case is mentioned here so that you can calculate the number of requests needs to be done to obtain each entity results completely.",
              {
                "$ul": [
                  "**allCaseDocumentCount**: Count which includes the freeCaseDocumentCount and paidCaseDocumentCount.",
                  "**attorneyCount**: Count of number of attornies available in the case being requested for.",
                  "**caseDocumentInLibraryCount**: Count of number of documents that are available in the UniCourt CrowdSourced Library for the case being requested for.",
                  "**docketEntryCount**: Count of number of docket entries available in the case being requested for.",
                  "**freeCaseDocumentCount**: Count of number of free documents available in the case being requested for.",
                  "**hearingCount**: Count of number of hearings available in the case being requested for.",
                  "**judgeCount**: Count of number of judges available in the case being requested for.",
                  "**object**: Name of the object (default: CaseStats)",
                  "**paidCaseDocumentCount**: Count of number of paid documents available in the case being requested for.",
                  "**partyCount**: Count of number of parties available in the case being requested for.",
                  "**relatedCaseCount**: Count of related cases that are available in the case being requested."
                ]
              }
            ],
            [
              "**caseStatus**",
              {
                "$ul": [
                  "**caseClassArray**",
                  "**caseStatusGroup**",
                  "**caseStatusGroupId**",
                  "**caseStatusId**",
                  "**createdDate**: The date and time when it was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                  "**name**",
                  "**object** (default: CaseStatus)"
                ]
              }
            ],
            [
              "**caseType**",
              {
                "$ul": [
                  "**areaOfLaw**",
                  "**areaOfLawId**",
                  "**caseClass**",
                  "**caseClassId**",
                  "**caseTypeGroup**",
                  "**caseTypeGroupId**",
                  "**caseTypeId**",
                  "**caseTypeTag**",
                  "**createdDate**: The date and time when it was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                  "**name**",
                  "**object** (default: CaseType)",
                  "**saliCode**"
                ]
              }
            ],
            "**causeOfActionArray**: Array of cause of Actions that are added to this case.",
            "**chargeArray**: Array of charges that are added to this case.",
            [
              "**court**",
              {
                "$ul": [
                  [
                    "**additionalLevels**",
                    {
                      "$ul": [
                        "**level1**",
                        "**level2**",
                        "**level3**",
                        "**level4**",
                        "**object** (default: AdditionalLevels)"
                      ]
                    }
                  ],
                  "**appealCourtsForCourtAPI**",
                  "**container**",
                  "**containerType**",
                  "**courtId**",
                  "**courtLocationsForCourtAPI**",
                  "**courtServiceStatusAPI**",
                  "**courtSystemId**",
                  "**courtTypeId**",
                  "**createdDate**: The date and time when the Court was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                  "**jurisdictionGeoForCourtAPI**",
                  "**name**",
                  "**nameAka**",
                  "**object** (default: Court)",
                  "**system**",
                  "**type**"
                ]
              }
            ],
            [
              "**courtLocation**",
              {
                "$ul": [
                  "**city**: City",
                  "**courtLocationId**",
                  "**courtServiceStatusAPI**",
                  "**courtsForCourtLocationAPI**",
                  "**createdDate**: The date and time when it was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                  "**name**",
                  "**object** (default: CourtLocation)",
                  "**stateName**: State Name if present else default value. (default: UNKNOWN)",
                  "**streetAddress1**: 1st part of the street address.",
                  "**streetAddress2**: 2nd part of the street address."
                ]
              }
            ],
            "**courtServiceStatusAPI**: API to get the service statuses of the given case.",
            "**courtServiceStatusId**: Court Service Status ID of the requested case where we can use it to get the service status",
            [
              "**docketEntries**",
              {
                "$ul": [
                  "**docketEntryArray**",
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: DocketEntries)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            "**exportAPI**: When a case is beyond the threshold of entities we provide this link so that the user can request and get all the data of the case with one additional call. This data will be zipped and sent via a webhoook.",
            "**filedDate**: Filing date for the case provided by the Court. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz",
            "**firstFetchDate**: The date and time when the case was first fetched from the Court. This date and time is in UTC. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz,.",
            "**hasDocumentsWithPreview**: This field will be set to TRUE if atleast one document has a preview.",
            "**hasOnlyMetaInfo**: This field determines if this case object has only meta information. If the value is true and if the full information is required you would need to call the updateCase API.",
            [
              "**hearings**",
              {
                "$ul": [
                  "**hearingArray**",
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: Hearings)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            [
              "**judges**",
              {
                "$ul": [
                  "**judgeArray**",
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: Judges)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            "**lastFetchDate**: The date and time when the case was last fetched from the Court. This date and time is in UTC. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz, Note: It is not necessary that every time the case is fetched from Court we find changes in the case information. It could be that we already have the latest information from the Court and no changes exist.",
            "**lastFetchDateWithUpdates**: The date and time when the case was last fetched from the Court where we found changes in the case information. This date and time is in UTC. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz,",
            "**object**: Name of the object (default: Case)",
            "**participantsLastFetchDate**: The date and time when parties/attorneys were last updated from the Court. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz, Note: This is currently applicable for Federal PACER cases since we have an option to exclude parties and fetch only latest docket entries when updating cases to save PACER fees.",
            [
              "**parties**",
              {
                "$ul": [
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: Parties)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**partyArray**",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            [
              "**relatedCases**",
              {
                "$ul": [
                  "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                  "**object**: Name of the object (default: RelatedCases)",
                  "**pageNumber**: Page number for which results where obtained.",
                  "**relatedCaseArray**",
                  "**totalCount**: Total number of parties of the Case entity in a Case.",
                  "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                ]
              }
            ],
            [
              "**sourceCaseData**: Source data in the court website.",
              {
                "$ul": [
                  "**natureOfSuitArray**: Array of Charges for a case which is provided by the Court.",
                  "**object**: Name of the object (default: SourceCaseData)",
                  "**sourceCaseStatus**: Case Status as provided by Court.",
                  "**sourceCaseType**: Case Type for a case which is provided by the Court.",
                  "**sourceCauseOfActionArray**: Array of Cause Of Action for a case which is provided by the Court.",
                  "**sourceChargeArray**: Array of Charges for a case which is provided by the Court.",
                  "**sourceCourt**: Courtrhouse as provided by Court.",
                  "**sourcePageData**"
                ]
              }
            ],
            "**sourceDataStatus**: The status of source data of case. If the value of sourceDataStatus is SOURCE_DEPRECATED then it means that the Case has been migrated from old court site to a new court site and the data being shown in the API response is from a old court site. If the sourceDataStatus is NO_LONGER_AVAILABLE_IN_COURT then it means that a particular case is invalid in the court site.",
            "**url**: URL to the case page in UniCourt Application."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "451": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
