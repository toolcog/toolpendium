{
  "name": "getDocumentById",
  "description": "Gets details for a requested Document ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "caseDocumentId": {
        "example": "CDOCag3e5eba43b870",
        "maxLength": 18,
        "minLength": 18,
        "nullable": false,
        "type": "string",
        "description": "Specific Case Dcoument ID for which you want the data for."
      }
    },
    "required": [
      "caseDocumentId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://enterpriseapi.unicourt.com//caseDocument/{caseDocumentId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**addedToLibraryDate**: Date and time when the document was downloaded and added to the UniCourt Crowd Source Library.",
            "**caseDocumentId**: UniCourt's Case Document ID.",
            "**childDocumentIdArray**: List of child document ID's if exists or else it will be an empty lsit.",
            "**description**: Description of the document.",
            "**documentFiledDate**: Document Date when it was filed. The document date will be either explicitly provided byt the court or if the document is associatated to a docket entry then the document date will be of docket entry date.",
            "**downloadAPI**: Link to either view the document if it is downloaded and already present in the UniCourt CrowdSourced Library.",
            "**estimatedOrderDuration**: Estimated duration of a Order. (default: estimateUnavailable)",
            "**firstFetchDate**: Is the date when the document was first fetched from the court site.",
            "**inLibrary**: Determines if the document is present in the UniCourt Library or not.",
            "**isPreviewAvailable**: Determines if a preview is available for the case document.",
            "**name**: Document name.",
            "**object**: Name of the object (default: CaseDocument)",
            "**pages**: Total number of pages in the document.",
            "**parentDocumentId**: Document ID which is the parent document for the current document. This will be null if the current document is a parent document.",
            [
              "**previewDocument**",
              {
                "$ul": [
                  "**addedToLibraryDate**: Date and time when the preview document was downloaded and added to the UniCourt CrowdSourced Library.",
                  "**downloadAPI**: Link to get the file url for the preview document which is already present in the UniCourt CrowdSourced Library.",
                  "**inLibrary**: Determines if the preview document is present in the UniCourt Library or not.",
                  "**object**: Name of the object (default: PreviewDocument)"
                ]
              }
            ],
            "**price**: Price of the document.",
            "**sortOrder**: Order of documents how it is being stored in UniCourt.",
            "**sourceDataStatus**: The status of source data of document. If the value of sourceDataStatus is SOURCE_DEPRECATED then it means that the Document has been migrated from old court site to a new court site and the data being shown in the API response is from a old court site. If the sourceDataStatus is NO_LONGER_AVAILABLE_IN_COURT then it means that a particular case is invalid in the court site."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
