{
  "name": "updateCase",
  "description": "Request case updates for the specified case.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/CaseUpdateRequest"
      }
    },
    "$defs": {
      "CaseUpdateRequest": {
        "properties": {
          "caseId": {
            "description": "UniCourt's Case Id for update.",
            "example": "CASEhq9d8b72d0800c",
            "maxLength": 18,
            "minLength": 18,
            "nullable": false,
            "type": "string"
          },
          "pacerOptions": {
            "$ref": "#/$defs/CaseUpdatePacerOptions"
          }
        },
        "required": [
          "caseId"
        ],
        "type": "object",
        "x-unicourt-container": false
      },
      "CaseUpdatePacerOptions": {
        "description": "Applicable for PACER cases.",
        "properties": {
          "additionalPageArray": {
            "description": "Currently this option is only applicable for Federal PACER cases. The default behavior of the Case Update is to fetch the Docket Report from PACER which includes the parties and attorneys too.\n\nHowever if you need to fetch information for other pages in PACER you will need to specify it here.\n- associatedCases:\n> This will fetch the Associated Cases page in PACER if available. This page consists of related cases especially applicable for Multi-District Litigation cases and Member Cases. Including this option will internally link all related cases in our system. Data from this page will be available via the Related Cases API.\n- caseSummary:\n> This will fetch the Case Summary page in PACER if available. This page consists of additional case info which is not present in the Docket Report page. Data from this page will be structured and available as response in the Case API’s ```additional_info``` field.\n- listOfCreditors:\n> This page will fetch the “List Of Creditors” page for PACER Bankruptcy cases of case type \"bk\". Note that this page cannot be extracted for Bankruptcy cases of case type \"ap\" (Adversary Proceedings). This page consists of the Creditor information like the name and address of the Creditors. Data from this page will be structured and available as response in the Case API.\n",
            "example": [
              {
                "fetchIfOlderThanDays": 30,
                "page": "associatedCases"
              },
              {
                "fetchIfOlderThanDays": 15,
                "page": "caseSummary"
              },
              {
                "fetchIfOlderThanDays": 15,
                "page": "listOfCreditors"
              }
            ],
            "items": {
              "properties": {
                "fetchIfOlderThanDays": {
                  "default": 0,
                  "description": "You can limit how often this page information is fetched to reduce your PACER fees.\n\nMin days is 0 and Max days is 100.\n\nExample:\n1.  Specifying a value of 0 ensures that this page is fetched from PACER for this case update irrespective of when the page was last fetched.\n2.  Specifying a value of 30 ensures that this page is fetched from PACER for this case update only if the last fetch was older than 30 days.\n",
                  "example": 30,
                  "maximum": 100,
                  "minimum": 0,
                  "type": "integer"
                },
                "page": {
                  "enum": [
                    "associatedCases",
                    "caseSummary",
                    "listOfCreditors"
                  ],
                  "example": "caseSummary",
                  "maxLength": 15,
                  "minLength": 11,
                  "nullable": false,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "nullable": true,
            "type": "array"
          },
          "fetchParticipantsIfOlderThanDays": {
            "default": 0,
            "description": "**Currently this option is only applicable for Federal PACER cases. You can limit how often parties and attorneys for a PACER case are fetched to reduce your PACER fees. If you are tracking cases daily or hourly you could easily end up with a large PACER bill.**\n\n**Use Case: Cases are typically updated to check for new docket entry filings. However every update to PACER case costs money. Participants for a case change less often than docket entry filings. So fetching participants for every update might result in unnecessary PACER costs; especially on cases which have a lot of parties and attorneys. So instead of getting charged the minimum cost of $0.10 for an update which might have had few docket entries, you could end up spending $3 for every update because there were a lot of parties for that case that were also fetched.**\n\n**With this option you can choose when to fetch parties for case based on when was it last fetched.**\nYou can limit how often this participants are fetched in a PACER case to keep your PACER costs under control.\n\nMin days is 0 and Max days is 100.\n\nExample:\n1.  Specifying a value of 0 ensures that participants are fetched from PACER for this case update irrespective of when the participants were last fetched.\n2.  Specifying a value of 30 ensures that participants are fetched from PACER for this case update only if the last fetch was older than 30 days.\n",
            "example": 30,
            "maximum": 100,
            "minimum": 0,
            "type": "integer"
          },
          "pacerClientCode": {
            "description": "PACER Client Code. This is mandatory if your setting in PACER website is set to True for required client code.",
            "example": "Test UniCourt API",
            "maxLength": 32,
            "minLength": 0,
            "nullable": true,
            "type": "string"
          },
          "pacerUserId": {
            "description": "**Your PACER credentials username. This is mandatory when a PACER Case is being requested in the API. For Non PACER cases this is not mandatory. Suppose your request consists of Non PACER and PACER Cases then this needs to be passed becuase you are requesting a PACER case too.**",
            "example": "URKYwer3tyh5r56gq2",
            "maxLength": 40,
            "minLength": 6,
            "nullable": false,
            "type": "string"
          },
          "refreshType": {
            "default": "fetchNewDocketEntries",
            "description": "This flag determines whether to pull only new or pull all the docket entries for a PACER case being requested.\n\nOnly one of the two values is allowed:\n-   fetchNewDocketEntries:\n    >   Updates the PACER case with only new docket entries that have been added after the previous update of the case being requested.\n-   fetchAllDocketEntries:\n    >   Updates the PACER case by re-parsing all dockets from #1 till latest docket entry available.\n",
            "enum": [
              "fetchNewDocketEntries",
              "fetchAllDocketEntries"
            ],
            "example": "fetchNewDocketEntries",
            "maxLength": 21,
            "minLength": 21,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "pacerUserId"
        ],
        "type": "object",
        "x-unicourt-container": false
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://enterpriseapi.unicourt.com//caseUpdate"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**case**",
              {
                "$ul": [
                  [
                    "**attorneys**",
                    {
                      "$ul": [
                        "**attorneyArray**",
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: Attorneys)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  [
                    "**caseDocuments**",
                    {
                      "$ul": [
                        "**caseDocumentArray**",
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: CaseDocuments)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  "**caseId**: Unique identifier of Case.",
                  "**caseName**: Case name as provided by Court.",
                  "**caseNumber**: Case number as provided by Court.",
                  [
                    "**caseStats**: Count of each entitiy of a case is mentioned here so that you can calculate the number of requests needs to be done to obtain each entity results completely.",
                    {
                      "$ul": [
                        "**allCaseDocumentCount**: Count which includes the freeCaseDocumentCount and paidCaseDocumentCount.",
                        "**attorneyCount**: Count of number of attornies available in the case being requested for.",
                        "**caseDocumentInLibraryCount**: Count of number of documents that are available in the UniCourt CrowdSourced Library for the case being requested for.",
                        "**docketEntryCount**: Count of number of docket entries available in the case being requested for.",
                        "**freeCaseDocumentCount**: Count of number of free documents available in the case being requested for.",
                        "**hearingCount**: Count of number of hearings available in the case being requested for.",
                        "**judgeCount**: Count of number of judges available in the case being requested for.",
                        "**object**: Name of the object (default: CaseStats)",
                        "**paidCaseDocumentCount**: Count of number of paid documents available in the case being requested for.",
                        "**partyCount**: Count of number of parties available in the case being requested for.",
                        "**relatedCaseCount**: Count of related cases that are available in the case being requested."
                      ]
                    }
                  ],
                  [
                    "**caseStatus**",
                    {
                      "$ul": [
                        "**caseClassArray**",
                        "**caseStatusGroup**",
                        "**caseStatusGroupId**",
                        "**caseStatusId**",
                        "**createdDate**: The date and time when it was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                        "**name**",
                        "**object** (default: CaseStatus)"
                      ]
                    }
                  ],
                  [
                    "**caseType**",
                    {
                      "$ul": [
                        "**areaOfLaw**",
                        "**areaOfLawId**",
                        "**caseClass**",
                        "**caseClassId**",
                        "**caseTypeGroup**",
                        "**caseTypeGroupId**",
                        "**caseTypeId**",
                        "**caseTypeTag**",
                        "**createdDate**: The date and time when it was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                        "**name**",
                        "**object** (default: CaseType)",
                        "**saliCode**"
                      ]
                    }
                  ],
                  "**causeOfActionArray**: Array of cause of Actions that are added to this case.",
                  "**chargeArray**: Array of charges that are added to this case.",
                  [
                    "**court**",
                    {
                      "$ul": [
                        [
                          "**additionalLevels**",
                          {
                            "$ul": [
                              "**level1**",
                              "**level2**",
                              "**level3**",
                              "**level4**",
                              "**object** (default: AdditionalLevels)"
                            ]
                          }
                        ],
                        "**appealCourtsForCourtAPI**",
                        "**container**",
                        "**containerType**",
                        "**courtId**",
                        "**courtLocationsForCourtAPI**",
                        "**courtServiceStatusAPI**",
                        "**courtSystemId**",
                        "**courtTypeId**",
                        "**createdDate**: The date and time when the Court was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                        "**jurisdictionGeoForCourtAPI**",
                        "**name**",
                        "**nameAka**",
                        "**object** (default: Court)",
                        "**system**",
                        "**type**"
                      ]
                    }
                  ],
                  [
                    "**courtLocation**",
                    {
                      "$ul": [
                        "**city**: City",
                        "**courtLocationId**",
                        "**courtServiceStatusAPI**",
                        "**courtsForCourtLocationAPI**",
                        "**createdDate**: The date and time when it was first created. This date and time is in UTC. Formatted as YYYY-MM-DD HH:MM:SS.",
                        "**name**",
                        "**object** (default: CourtLocation)",
                        "**stateName**: State Name if present else default value. (default: UNKNOWN)",
                        "**streetAddress1**: 1st part of the street address.",
                        "**streetAddress2**: 2nd part of the street address."
                      ]
                    }
                  ],
                  "**courtServiceStatusAPI**: API to get the service statuses of the given case.",
                  "**courtServiceStatusId**: Court Service Status ID of the requested case where we can use it to get the service status",
                  [
                    "**docketEntries**",
                    {
                      "$ul": [
                        "**docketEntryArray**",
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: DocketEntries)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  "**exportAPI**: When a case is beyond the threshold of entities we provide this link so that the user can request and get all the data of the case with one additional call. This data will be zipped and sent via a webhoook.",
                  "**filedDate**: Filing date for the case provided by the Court. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz",
                  "**firstFetchDate**: The date and time when the case was first fetched from the Court. This date and time is in UTC. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz,.",
                  "**hasDocumentsWithPreview**: This field will be set to TRUE if atleast one document has a preview.",
                  "**hasOnlyMetaInfo**: This field determines if this case object has only meta information. If the value is true and if the full information is required you would need to call the updateCase API.",
                  [
                    "**hearings**",
                    {
                      "$ul": [
                        "**hearingArray**",
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: Hearings)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  [
                    "**judges**",
                    {
                      "$ul": [
                        "**judgeArray**",
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: Judges)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  "**lastFetchDate**: The date and time when the case was last fetched from the Court. This date and time is in UTC. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz, Note: It is not necessary that every time the case is fetched from Court we find changes in the case information. It could be that we already have the latest information from the Court and no changes exist.",
                  "**lastFetchDateWithUpdates**: The date and time when the case was last fetched from the Court where we found changes in the case information. This date and time is in UTC. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz,",
                  "**object**: Name of the object (default: Case)",
                  "**participantsLastFetchDate**: The date and time when parties/attorneys were last updated from the Court. Formatted as YYYY-MM-DDTHH:MM:SS+ZZ:zz, Note: This is currently applicable for Federal PACER cases since we have an option to exclude parties and fetch only latest docket entries when updating cases to save PACER fees.",
                  [
                    "**parties**",
                    {
                      "$ul": [
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: Parties)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**partyArray**",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  [
                    "**relatedCases**",
                    {
                      "$ul": [
                        "**nextPageAPI**: Link to next page of a particular entity in a Case.",
                        "**object**: Name of the object (default: RelatedCases)",
                        "**pageNumber**: Page number for which results where obtained.",
                        "**relatedCaseArray**",
                        "**totalCount**: Total number of parties of the Case entity in a Case.",
                        "**totalPages**: Total number of pages to obtain all the objects of a party in the Case."
                      ]
                    }
                  ],
                  [
                    "**sourceCaseData**: Source data in the court website.",
                    {
                      "$ul": [
                        "**natureOfSuitArray**: Array of Charges for a case which is provided by the Court.",
                        "**object**: Name of the object (default: SourceCaseData)",
                        "**sourceCaseStatus**: Case Status as provided by Court.",
                        "**sourceCaseType**: Case Type for a case which is provided by the Court.",
                        "**sourceCauseOfActionArray**: Array of Cause Of Action for a case which is provided by the Court.",
                        "**sourceChargeArray**: Array of Charges for a case which is provided by the Court.",
                        "**sourceCourt**: Courtrhouse as provided by Court.",
                        "**sourcePageData**"
                      ]
                    }
                  ],
                  "**sourceDataStatus**: The status of source data of case. If the value of sourceDataStatus is SOURCE_DEPRECATED then it means that the Case has been migrated from old court site to a new court site and the data being shown in the API response is from a old court site. If the sourceDataStatus is NO_LONGER_AVAILABLE_IN_COURT then it means that a particular case is invalid in the court site.",
                  "**url**: URL to the case page in UniCourt Application."
                ]
              }
            ],
            "**caseAPI**",
            "**caseId**: Unique Id for a Case in UniCourt.",
            [
              "**exception**: Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
              {
                "$ul": [
                  "**code**: Indicates the type of error occured.",
                  "**details**: Describes what went wrong.",
                  "**message**: Indicates the error message that describes the error code.",
                  "**object** (default: Exception)"
                ]
              }
            ],
            "**object**: Name of the object. (default: CaseUpdate)",
            [
              "**pacerOptions**: Applicable for PACER cases.",
              {
                "$ul": [
                  "**additionalPageArray**: Currently this option is only applicable for Federal PACER cases. The default behavior of the Case Update is to fetch the Docket Report from PACER which includes the parties and attorneys too.",
                  "**fetchParticipantsIfOlderThanDays**: **Currently this option is only applicable for Federal PACER cases. You can limit how often parties and attorneys for a PACER case are fetched to reduce your PACER fees. If you are tracking cases daily or hourly you could easily end up with a large PACER bill.** (default: 0)",
                  "**object**: Name of the object. (default: CaseUpdatePacerOptionsResponse)",
                  "**pacerClientCode**: PACER Client Code. This is mandatory if your setting in PACER website is set to True for required client code.",
                  "**pacerUserId**: **Your PACER credentials username. This is mandatory when a PACER Case is being requested in the API. For Non PACER cases this is not mandatory. Suppose your request consists of Non PACER and PACER Cases then this needs to be passed becuase you are requesting a PACER case too.**",
                  "**refreshType**: This flag determines whether to pull only new or pull all the docket entries for a PACER case being requested. (default: fetchNewDocketEntries)"
                ]
              }
            ],
            "**requestedDate**: The date and time when the case was last requested for update ",
            "**status**: Status of the request."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
