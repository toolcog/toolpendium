{
  "name": "BankruptcyCourtsPacerCaseLocatorCaseSearch",
  "description": "Search for PACER cases filed in U.S. Bankruptcy Courts.",
  "parameters": {
    "type": "object",
    "properties": {
      "pacerUserId": {
        "example": "johndoe",
        "maxLength": 20,
        "minLength": 6,
        "nullable": false,
        "type": "string",
        "description": "The username of the PACER account under which the search is to be performed."
      },
      "pacerClientCode": {
        "example": "john",
        "maxLength": 32,
        "minLength": 1,
        "nullable": false,
        "type": "string",
        "description": "The PACER client code under which the search is to be performed."
      },
      "caseNumber": {
        "example": "12-1234",
        "maxLength": 50,
        "minLength": 3,
        "nullable": true,
        "type": "string",
        "description": "The case number of the target case. You may use the following case-number formats: \n\n\tyy-nnnnn \n\n\tyy-tp-nnnnn \n\n\tyy tp nnnnn \n\n\tyytpnnnnn \n\n\to:yy-nnnnn \n\n\to:yy-tp-nnnnn \n\n\to:yy tp nnnnn \n\n\to:yytpnnnnn \n\nwhere: \n\nyy  case year (may be 2 or 4 digits) \n\nnnnnn  case number (up to 5 digits) \n\ntp  case type (up to 2 characters) \n\no  office where the case was filed (1 digit)."
      },
      "pacerCaseId": {
        "type": "integer",
        "description": "The PACER-assigned identifier of the target case."
      },
      "caseTitle": {
        "maxLength": 255,
        "nullable": true,
        "type": "string",
        "description": "The title of the target case. \n\n\tExamples: \n\n\tA search for case title john doe v will result in all cases with the case title John Doe v. \n\n\tA search for case title Acme, Inc. will result in all case titles starting with Acme, Inc."
      },
      "caseOffice": {
        "maxLength": 1,
        "type": "integer",
        "description": "The divisional office in which the case was filed."
      },
      "caseSequenceNumber": {
        "maxLength": 6,
        "type": "integer",
        "description": "The PACER-assigned sequence number of the target case. Ex 12345"
      },
      "caseYear": {
        "maxLength": 4,
        "type": "integer",
        "description": "The two- or four-digit year in which the target case was filed."
      },
      "caseTypeArray": {
        "items": {
          "maxLength": 255,
          "nullable": true,
          "type": "string"
        },
        "type": "array",
        "description": "The PACER-assigned case type of the target case. Please see Appendix A for valid case-type values. \n\n\tScenario: When mulitple case types needs to be requested. \n\n\tImagine for a given case number 12-1234 I would like to search only with the case type civil(cv) and criminal(cr), My query in the request will look like the example mentioned below. \n\n\tExample: caseTypeArray=cv&caseTypeArray=cr"
      },
      "federalBankruptcyChapterArray": {
        "items": {
          "maxLength": 255,
          "nullable": true,
          "type": "string"
        },
        "type": "array",
        "description": "The chapter of the U.S. Bankruptcy Code under which the target case was filed. Please see Appendix D for a list of valid chapter numbers. \n\n\tScenario: When mulitple Federal Bankruptcy Chapters needs to be requested. \n\n\tImagine for a given case number 12-1234 I would like to search with the Federal Bankruptcy Chapters 7 (Chapter 7) and 11 (Chapter 11), My query in the request will look like the example mentioned below. \n\n\tExample: federalBankruptcyChapterArray=7&federalBankruptcyChapterArray=11"
      },
      "courtRegionIdArray": {
        "items": {
          "maxLength": 255,
          "nullable": true,
          "type": "string"
        },
        "type": "array",
        "description": "The PACER-assigned court region in which the target case was filed. Please see Appendix B for valid court-region values. \n\n\tScenario: When mulitple court region ids needs to be requested. \n\n\tImagine for a given case number 12-1234 I would like to search in the court regions California Central (cac) and California Eastern (cae), My query in the request will look like the example mentioned below. \n\n\tExample: courtRegionIdArray=cac&courtRegionIdArray=cae"
      },
      "caseFiledStartDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or after which the target case was filed. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00)."
      },
      "caseFiledEndDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or before which the target case was filed. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00)."
      },
      "caseTerminatedStartDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or after which the target case was marked as terminated within PACER. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00)."
      },
      "caseTerminatedEndDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or before which the target case was marked as terminated within PACER. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00)."
      },
      "caseDischargedStartDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or after which the target case was marked as discharged within PACER. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00). \n\n\tNote: This parameter is applicable since we only perform this search for Bankruptcy Court type."
      },
      "caseDischargedEndDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or before which the target case was marked as discharged within PACER. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00). \n\n\tNote: This parameter is applicable since we only perform this search for Bankruptcy Court type."
      },
      "caseDismissedStartDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or after which the target case was marked as dismissed within PACER. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00). \n\n\tNote: This parameter is applicable since we only perform this search for Bankruptcy Court type."
      },
      "caseDismissedEndDate": {
        "format": "date-time",
        "maxLength": 25,
        "minLength": 25,
        "nullable": true,
        "type": "string",
        "description": "The date on which or before which the target case was marked as dismissed within PACER. The date format must be YYYY-MM-DDTHH:MM:SS+ZZ:zz, (e.g., 2017-12-20T12:54:24+00:00)."
      },
      "sortParameterQuery": {
        "default": "sort=caseYear,DESC",
        "maxLength": 100,
        "minLength": 5,
        "nullable": true,
        "type": "string",
        "description": "How search results from PACER are to be sorted. Please see Appendix C for valid sort-related settings. \n\n\tScenario: When mulitple sort paramters needs to be requested. \n\n\tImagine for a given case number 12-1234 I would like to sort the results in the Ascending order of courtId and caseId, My query in the request will look like the example mentioned below. \n\n\tExample: sortParameterQuery=courtId,ASC&caseId,ASC"
      },
      "caseStatus": {
        "enum": [
          "open",
          "closed"
        ],
        "maxLength": 100,
        "minLength": 3,
        "nullable": true,
        "type": "string",
        "description": "Whether the target case is marked as 'open' or 'closed' within PACER."
      },
      "pageNumber": {
        "type": "integer",
        "description": "The page number of the search results to be retrieved."
      }
    },
    "required": [
      "pacerUserId",
      "pacerClientCode"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://enterpriseapi.unicourt.com//pacerCaseLocator/caseSearch/bankruptcyCourts{?pacerUserId,pacerClientCode,caseNumber,pacerCaseId,caseTitle,caseOffice,caseSequenceNumber,caseYear,caseTypeArray,federalBankruptcyChapterArray,courtRegionIdArray,caseFiledStartDate,caseFiledEndDate,caseTerminatedStartDate,caseTerminatedEndDate,caseDischargedStartDate,caseDischargedEndDate,caseDismissedStartDate,caseDismissedEndDate,sortParameterQuery,caseStatus,pageNumber}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**nextPageAPI**: Link to next page of the PCL Search Results.",
            "**object**: Name of the object (default: PCLCase)",
            [
              "**pacerPageInfo**",
              {
                "$ul": [
                  "**first**: Indicates if the current page is the first page.",
                  "**last**: Indicates if the current page is the last page.",
                  "**number**: Current Page number.",
                  "**numberOfElements**: Number of records returned.",
                  "**object**: Name of the object (default: PACERSearchPageInfo)",
                  "**size**: Number of results obtained in a page..",
                  "**totalElements**: Total number of records available",
                  "**totalPages**: Total pages of data available."
                ]
              }
            ],
            [
              "**pacerReceipt**",
              {
                "$ul": [
                  "**billablePages**: No of pages that was billed for the given PACER search.",
                  "**clientCode**: client code added if any was set.",
                  "**csoId**: PACER Account ID.",
                  "**description**: Description of the search made.",
                  "**firmId**: Firm ID.",
                  "**loginId**: ID which is used for PACER login.",
                  "**object**: Name of the object (default: PACERSearchReceipt)",
                  "**reportId**: Report ID for the search made.",
                  "**search**: Details of the search made for this request.",
                  "**searchFee**: PACER Search Fee.",
                  "**transactionDate**: Date when the transaction was made at the pacer court site."
                ]
              }
            ],
            "**pacerSearchResultsArray**",
            "**pageNumber**: Page number for which results where obtained.",
            "**totalCount**: Total number of records available for this Search.",
            "**totalPages**: Total number of pages to obtain all the objects the current PCL Search."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
