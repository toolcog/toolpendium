{
  "name": "getNormAttorneysAssociatedWithNormJudge",
  "description": "Returns a list of attorneys associated with a judge.\n## Terms and Connectors\n| Connector | Schema   | Description  | Example |\n| ------| ------| ------|------|\n| **AND** ||Find analytics containing all connected terms. The word AND does not have to be capitalized.|**courtId:\"CORTV4vCEaKrhystBz\" AND courtLocationId:\"COLO6b82CkRqS846hx\"**|\n| **IN()** || Allows you to specify multiple values, for a limit of up to 10.| **courtLocationId IN (\"COLODj4BBVTho3pKpz\",\"COLOPUfJRhw5yPxgRi\")**|\n| **courtId** | Multiple Ids Allowed  |Find Analytics for a particular Court Object. | **courtId:\"CORTV4vCEaKrhystBz\"** |\n| **courtSystemId** | Multiple Ids Allowed  |Find Analytics for a particular Court System Object. | **courtSystemId:\"COSYACHBdMewtaG5DY\"** |\n| **courtTypeId** | Multiple Ids Allowed  |Find Analytics for a particular Court Type Object. | **courtTypeId:\"COTPm8jjc2PAydpFhq\"** |\n| **courtLocationId** | Multiple Ids Allowed  |Find Analytics for a particular Court Location Object. | **courtLocationId:\"COLO6b82CkRqS846hx\"** |\n| **caseTypeId** | Multiple Ids Allowed  |Find Analytics for a particular Case Type Object. | **caseTypeId:\"CTYPATMYyaJekdgj2c\"** |\n| **caseTypeGroupId** | Multiple Ids Allowed  |Find Analytics for a particular Case Type Group Object. | **caseTypeGroupId:\"CTYG8gZ6hPRKhhYi4Y\"** |\n| **areaOfLawId** | Multiple Ids Allowed  |Find Analytics for a particular Area Of Law Object. | **areaOfLawId:\"AOFL2UxEWfVmTPMyqf\"** |\n| **caseClassId** | Multiple Ids Allowed  |Find Analytics for a particular Case Class Category Object. | **caseClassId:\"CSCLNjbKTN7Yfo2wdb\"** |\n| **caseFiledDate** | Single Allowed |Find Analytics within a particular date range. | **caseFiledDate:[2018-05-08T00:00:00+00:00TO2019-05-08T00:00:00+00:00]** |\n| **JurisdictionGeo** | Multiple Ids Allowed  |Find Analytics within a particular Jurisdiction Geo. | **(JurisdictionGeo:(state:\"California\"))** |\n| **confidenceScore** | Single Allowed |Find Analytics for a given ConfidenceScore  | **confidenceScore:[0.5 TO \\*]** |\n| **bestMatch** | Single Allowed |True if the normEntity has the highest Confidence Score of all possible normEntities | **bestMatch:true** |\n<br>\n## Example Query\nQuery to get all attorneys associated with judge with norm id NJUDT7jCZyFNeLGpRq of all cases with case type id CTYPATMYyaJekdgj2c and case filed date between Jan 1st, 2017 to Nov 30th,2021<br>\nq=caseTypeId:\"CTYPATMYyaJekdgj2c\" AND caseFiledDate:[2017-01-01T00:00:00+00:00TO2021-11-30T00:00:00+00:00]\n<br><br>\n",
  "parameters": {
    "type": "object",
    "properties": {
      "q": {
        "maxLength": 2048,
        "nullable": false,
        "type": "string",
        "description": "The URL encoded query you are searching for. The query can be as simple as a keyword, but supports many additional options and filters. All options are documented above."
      },
      "pageNumber": {
        "minimum": 1,
        "type": "integer",
        "description": "Page number.\n- minimum: 1\n"
      },
      "normJudgeId": {
        "maxLength": 18,
        "minLength": 18,
        "nullable": false,
        "type": "string",
        "description": "Norm  ID of the Judge.\n  - minimum: 18\n  - maximum: 18\n"
      }
    },
    "required": [
      "pageNumber",
      "normJudgeId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://enterpriseapi.unicourt.com//normJudge/{normJudgeId}/associatedNormAttorneys{?q,pageNumber}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "AssociatedNormAttorneyResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**associatedNormAttorneyArray**",
            "**nextPageAPI**: Next page of results if applicable.",
            "**previousPageAPI**: Previous page of results if applicable.",
            "**totalCount**: Total no. of results for this criteria.",
            "**totalPages**: Total no. of pages."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
