{
  "name": "getCourtLocations",
  "description": "Retrieve the specified court location or court locations.\n\n## Logical Operators\n| Connector | Description  | Example |\n| ------| ------|------|\n| **AND** |Find data containing all connected terms.|**google AND facebook**|\n| **OR**  |Find data containing any connected term.| **order OR decision**|\n| **NOT** |Exclude data.| **google NOT apple**.|\n| **“[phrase]”** |Find an exact phrase.| **\"Google Inc”** |\n| **( … )** |Parenthesis may be used to group sets of terms of connectors.| **google (facebook OR apple)**.|\n\n### All Filter Query parameters supported for this API can be found in below schema section. Schema --> CourtLocationQueryObject\n",
  "parameters": {
    "type": "object",
    "properties": {
      "q": {
        "maxLength": 2000,
        "minLength": 3,
        "nullable": false,
        "type": "string",
        "description": "The keyword expression that sets forth the criteria concerning the court location or court locations to target. Keyword expressions should be constructed according to the rules shown above.</a>\n"
      },
      "pageNumber": {
        "example": 1,
        "maxLength": 255,
        "maximum": 100,
        "minLength": 1,
        "minimum": 1,
        "nullable": false,
        "type": "integer",
        "description": "The page number of the results to be retrieved.\n- minimum: 1\n- maximum: 100\n"
      },
      "sort": {
        "default": "name",
        "enum": [
          "name"
        ],
        "example": "name",
        "maxLength": 4,
        "minLength": 4,
        "nullable": false,
        "type": "string",
        "description": "The field according to which search results are to be sorted."
      },
      "order": {
        "default": "asc",
        "enum": [
          "asc",
          "desc"
        ],
        "example": "asc",
        "maxLength": 4,
        "minLength": 3,
        "nullable": false,
        "type": "string",
        "description": "Whether search results are to be shown in ascending or descending order."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://enterpriseapi.unicourt.com//masterData/courtLocation{?q,pageNumber,sort,order}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "CourtLocationResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**courtLocationArray**",
            "**nextPageAPI**: Link to next page.",
            "**object** (default: CourtLocationResponse)",
            "**pageNumber**: Page number for which results where obtained.",
            "**previousPageAPI**: Link to previous page.",
            "**totalCount**: Total number of matches found.",
            "**totalPages**: Total number of pages to obtain all the objects."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Exception"
        },
        "Exception object contains specific error code and its message related to the API request validation error or error occurred during API request processing.",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: Indicates the type of error occured.",
            "**details**: Describes what went wrong.",
            "**message**: Indicates the error message that describes the error code.",
            "**object** (default: Exception)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
