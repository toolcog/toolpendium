{
  "name": "Query",
  "description": "The `Query` operation searches a namespace, using a query vector. It retrieves the ids of the most similar items in a namespace, along with their similarity scores.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/QueryRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "QueryRequest": {
        "properties": {
          "filter": {
            "$ref": "#/$defs/VectorFilter"
          },
          "id": {
            "$ref": "#/$defs/VectorId"
          },
          "includeMetadata": {
            "default": false,
            "type": "boolean"
          },
          "includeValues": {
            "default": false,
            "type": "boolean"
          },
          "namespace": {
            "$ref": "#/$defs/NamespaceName"
          },
          "sparseVector": {
            "$ref": "#/$defs/SparseVectorData"
          },
          "topK": {
            "default": 100,
            "description": "The number of results to return for each query.",
            "format": "int64",
            "maximum": 10000,
            "minimum": 0,
            "type": "integer"
          },
          "vector": {
            "$ref": "#/$defs/VectorData"
          }
        },
        "required": [
          "topK"
        ],
        "type": "object"
      },
      "VectorFilter": {
        "additionalProperties": true,
        "description": "If this parameter is present, the operation only affects vectors that satisfy the filter. See https://www.pinecone.io/docs/metadata-filtering/.",
        "example": {
          "hello": [
            "alpha",
            "bravo"
          ]
        },
        "type": "object"
      },
      "VectorId": {
        "description": "The unique ID of a vector",
        "example": "vector-0",
        "format": "VectorId",
        "type": "string"
      },
      "NamespaceName": {
        "description": "An index namespace name",
        "example": "namespace-0",
        "format": "NamespaceName",
        "type": "string"
      },
      "SparseVectorData": {
        "description": "Vector sparse data. Represented as a list of indices and a list of corresponded values, which must be the same length.",
        "properties": {
          "indices": {
            "description": "The indices of the sparse data.",
            "example": [
              1
            ],
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "values": {
            "description": "The corresponding values of the sparse data, which must be the same length as the indices.",
            "example": [
              2
            ],
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          }
        },
        "required": [
          "indices",
          "values"
        ],
        "type": "object"
      },
      "VectorData": {
        "description": "Vector dense data. This should be the same length as the dimension of the index being queried.",
        "example": [
          1,
          2,
          3
        ],
        "items": {
          "format": "float",
          "type": "number"
        },
        "type": "array"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://example-abcd1234.svc.us-east1-gcp.pinecone.io/query"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**matches**",
            "**namespace**: An index namespace name"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
