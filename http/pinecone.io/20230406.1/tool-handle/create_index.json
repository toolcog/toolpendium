{
  "name": "create_index",
  "description": "This operation creates a Pinecone index. You can use it to specify the measure of similarity, the dimension of vectors to be stored in the index, the numbers of replicas to use, and more.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/IndexDefinition"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "IndexDefinition": {
        "properties": {
          "dimension": {
            "$ref": "#/$defs/VectorDimensionality"
          },
          "metadata_config": {
            "$ref": "#/$defs/IndexMetadataConfig"
          },
          "metric": {
            "$ref": "#/$defs/IndexMetric"
          },
          "name": {
            "$ref": "#/$defs/IndexName"
          },
          "pod_type": {
            "$ref": "#/$defs/PodType"
          },
          "pods": {
            "default": 1,
            "description": "The number of pods for the index to use,including replicas.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "replicas": {
            "default": 1,
            "description": "The number of replicas. Replicas duplicate your index. They provide higher availability and throughput.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "source_collection": {
            "$ref": "#/$defs/CollectionName"
          }
        },
        "required": [
          "name",
          "dimension"
        ],
        "type": "object"
      },
      "VectorDimensionality": {
        "description": "The number of dimensions in the vector representation",
        "format": "int32",
        "maximum": 20000,
        "minimum": 1,
        "type": "integer"
      },
      "IndexMetadataConfig": {
        "description": "Configuration for the behavior of Pinecone's internal metadata index. By default, all metadata is indexed; when metadata_config is present, only specified metadata fields are indexed.",
        "properties": {
          "indexed": {
            "example": [
              "hello"
            ],
            "items": {
              "type": "string"
            },
            "minLength": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "IndexMetric": {
        "description": "The vector similarity metric of the index",
        "enum": [
          "euclidean",
          "cosine",
          "dotproduct"
        ],
        "type": "string"
      },
      "IndexName": {
        "description": "The unique name of an index.",
        "example": "example",
        "format": "IndexName",
        "maxLength": 45,
        "minLength": 1,
        "nullable": false,
        "type": "string"
      },
      "PodType": {
        "description": "The pod type",
        "enum": [
          "s1.x1",
          "s1.x2",
          "s1.x4",
          "s1.x8",
          "p1.x1",
          "p1.x2",
          "p1.x4",
          "p1.x8",
          "p2.x1",
          "p2.x2",
          "p2.x4",
          "p2.x8"
        ],
        "type": "string"
      },
      "CollectionName": {
        "description": "The unique name of a collection.",
        "example": "example",
        "format": "CollectionName",
        "nullable": false,
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://controller.us-east1-gcp.pinecone.io/databases"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "400": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "409": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "500": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
