{
  "name": "app_api_endpoints_TrappedRadiation_calculate_flux_mean",
  "description": "at given coordinates and date-time.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "model": {
        "enum": [
          "AE9",
          "AP9",
          "SPME",
          "SPMH",
          "SPMHE",
          "SPMO"
        ],
        "example": "AE9",
        "type": "string",
        "description": "<br>Which model to use: <br><br> - Energetic electrons (AE9) <br> - Energetic protons (AP9)  <br> - Space plasma model for electrons (SPME) <br> - for hydrogen (SPMH) <br> - for helium (SPMHE) <br> - for oxygen (SPMO) \n"
      },
      "coord_sys": {
        "enum": [
          "GDZ",
          "GEO",
          "GEI"
        ],
        "example": "GEI",
        "type": "string",
        "description": "<br>Coordinate system to use:  <br><br> - Geodetic/WGS84 (GDZ) <br> - Geocentric Cartesian (GEO) <br> - Geocentric Earth Inertial (GEI) <br> See \"Bhavnani, K. H., & Vancour, R. P. (1991).  Coordinate systems for space and geophysical applications\"  for coord system definitions.\n"
      },
      "coord_units": {
        "enum": [
          "KM",
          "RE"
        ],
        "example": "KM",
        "type": "string",
        "description": "<br>Coordinate units to use: km (KM) or Earth Radii (RE)\n"
      },
      "coord1": {
        "example": 3216.6,
        "type": "number",
        "description": "<br>First coordinate value to specify position. <br><br> Ordering for GEI, GEO coords:X, Y, Z<br> Ordering for GDZ coords: Alt, Lat, Long<br>  Valid ranges for latitude: -90, 90<br>  Valid ranges for longitude: 0, 360<br> \n"
      },
      "coord2": {
        "example": 35426,
        "type": "number",
        "description": "<br>Second coordinate value."
      },
      "coord3": {
        "example": 603.4,
        "type": "number",
        "description": "<br>Third coordinate value."
      },
      "year": {
        "example": 2017,
        "type": "integer",
        "description": "<br>"
      },
      "month": {
        "example": 1,
        "type": "integer",
        "description": "<br>"
      },
      "day": {
        "example": 1,
        "type": "integer",
        "description": "<br>"
      },
      "hour": {
        "example": "0",
        "type": "integer",
        "description": "<br>"
      },
      "minute": {
        "example": "0",
        "type": "integer",
        "description": "<br>"
      },
      "second": {
        "example": "0",
        "type": "integer",
        "description": "<br>"
      }
    },
    "required": [
      "model",
      "coord_sys",
      "coord_units",
      "coord1",
      "coord2",
      "coord3",
      "year",
      "month",
      "day",
      "hour",
      "minute",
      "second"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/trapped/flux_mean{?model,coord_sys,coord_units,coord1,coord2,coord3,year,month,day,hour,minute,second}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**energies**: Particle energies at which omnidirectional flux values are calculated, and their units.",
              {
                "$ul": [
                  "**data**",
                  "**units**"
                ]
              }
            ],
            [
              "**flux**: Corresponding omnidirectional flux values, and their units.",
              {
                "$ul": [
                  "**data**",
                  "**units**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
