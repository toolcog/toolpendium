{
  "name": "patchGlobalConfig",
  "description": "Update the global configuration with a diff",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/Patch"
      }
    },
    "$defs": {
      "Patch": {
        "description": "A set of changes described in JSON Patch format: http://jsonpatch.com/ (RFC 6902)",
        "items": {
          "properties": {
            "op": {
              "enum": [
                "add",
                "replace",
                "remove",
                "copy",
                "test"
              ],
              "type": "string"
            },
            "path": {
              "example": "a string value",
              "type": "string"
            },
            "value": {}
          },
          "required": [
            "op",
            "path"
          ],
          "type": "object"
        },
        "type": "array"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "http://otoroshi-api.oto.tools//api/globalconfig"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The global config object of Otoroshi, used to customize settings of the current Otoroshi instance",
        "**Key properties:**",
        {
          "$ul": [
            "**alertsEmails**: Email addresses that will receive all Otoroshi alert events",
            "**alertsWebhooks**: Webhook that will receive all Otoroshi alert events",
            "**analyticsWebhooks**: Webhook that will receive all internal Otoroshi events",
            "**apiReadOnly**: If enabled, Admin API won't be able to write/update/delete entities",
            "**autoLinkToDefaultGroup**: If not defined, every new service descriptor will be added to the default group",
            [
              "**backofficeAuth0Config**: Configuration for Auth0 domain",
              {
                "$ul": [
                  "**callbackUrl**: Auth0 callback URL",
                  "**clientId**: Auth0 client id",
                  "**clientSecret**: Auth0 client secret",
                  "**domain**: Auth0 domain"
                ]
              }
            ],
            [
              "**cleverSettings**: Configuration for CleverCloud client",
              {
                "$ul": [
                  "**consumerKey**: CleverCloud consumer key",
                  "**consumerSecret**: CleverCloud consumer token",
                  "**orgaId**: CleverCloud organization id",
                  "**secret**: CleverCloud oauth secret",
                  "**token**: CleverCloud oauth token"
                ]
              }
            ],
            [
              "**elasticReadsConfig**: The configuration for elastic access",
              {
                "$ul": [
                  "**clusterUri**: URL of the elastic cluster",
                  "**headers**: Additionnal http headers",
                  "**index**: Index for events. Default is otoroshi-events",
                  "**password**: Optional password",
                  "**type**: Type of events. Default is event",
                  "**user**: Optional user"
                ]
              }
            ],
            "**elasticWritesConfigs**: Configs. for Elastic writes",
            "**endlessIpAddresses**: IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
            [
              "**ipFiltering**: The filtering configuration block for a service of globally.",
              {
                "$ul": [
                  "**blacklist**: Blacklisted IP addresses",
                  "**whitelist**: Whitelisted IP addresses"
                ]
              }
            ],
            "**limitConcurrentRequests**: If enabled, Otoroshi will reject new request if too much at the same time",
            "**lines**: Possibles lines for Otoroshi",
            [
              "**mailerSettings**: Configuration for mailgun api client",
              {
                "$ul": [
                  "**apiKey**: Mailgun mailer api key",
                  "**apiKeyPrivate**: Mailjet mailer private api key",
                  "**apiKeyPublic**: Mailjet mailer public api key",
                  "**domain**: Mailgun mailer domain",
                  "**eu**: Mailgun mailer, use EU tenant api",
                  "**header**: Generic mailer headers",
                  "**type**: Type of the mailer: console, generic, mailgun, mailjet",
                  "**url**: Generic mailer url"
                ]
              }
            ],
            "**maxConcurrentRequests**: The number of authorized request processed at the same time",
            "**maxHttp10ResponseSize**: The max size in bytes of an HTTP 1.0 response",
            "**maxLogsSize**: Number of events kept locally",
            "**middleFingers**: Use middle finger emoji as a response character for endless HTTP responses",
            "**perIpThrottlingQuota**: Authorized number of calls per second globally per IP address, measured on 10 seconds",
            [
              "**privateAppsAuth0Config**: Configuration for Auth0 domain",
              {
                "$ul": [
                  "**callbackUrl**: Auth0 callback URL",
                  "**clientId**: Auth0 client id",
                  "**clientSecret**: Auth0 client secret",
                  "**domain**: Auth0 domain"
                ]
              }
            ],
            "**streamEntityOnly**: HTTP will be streamed only. Doesn't work with old browsers",
            "**throttlingQuota**: Authorized number of calls per second globally, measured on 10 seconds",
            "**u2fLoginOnly**: If enabled, login to backoffice through Auth0 will be disabled",
            "**useCircuitBreakers**: If enabled, services will be authorized to use circuit breakers"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
