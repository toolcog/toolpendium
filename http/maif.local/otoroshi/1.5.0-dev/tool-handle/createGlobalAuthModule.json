{
  "name": "createGlobalAuthModule",
  "description": "Create one global auth. module config",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "oneOf": [
          {
            "$ref": "#/$defs/LdapAuthModuleConfig"
          },
          {
            "$ref": "#/$defs/InMemoryAuthModuleConfig"
          },
          {
            "$ref": "#/$defs/GenericOauth2ModuleConfig"
          }
        ]
      }
    },
    "$defs": {
      "LdapAuthModuleConfig": {
        "description": "Settings to authenticate users using a generic OAuth2 provider",
        "properties": {
          "adminPassword": {
            "description": "The admin password",
            "example": "a string value",
            "type": "string"
          },
          "adminUsername": {
            "description": "The admin username",
            "example": "a string value",
            "type": "string"
          },
          "desc": {
            "description": "Description of the config",
            "example": "a string value",
            "type": "string"
          },
          "emailField": {
            "description": "Field name to get email from user profile",
            "example": "a string value",
            "type": "string"
          },
          "groupFilter": {
            "description": "Filter for groups",
            "example": "a string value",
            "type": "string"
          },
          "id": {
            "description": "Unique id of the config",
            "example": "a string value",
            "type": "string"
          },
          "name": {
            "description": "Name of the config",
            "example": "a string value",
            "type": "string"
          },
          "nameField": {
            "description": "Field name to get name from user profile",
            "example": "a string value",
            "type": "string"
          },
          "otoroshiDataField": {
            "description": "Field name to get otoroshi metadata from. You can specify sub fields using | as separator",
            "example": "a string value",
            "type": "string"
          },
          "searchBase": {
            "description": "LDAP search base",
            "example": "a string value",
            "type": "string"
          },
          "searchFilter": {
            "description": "Filter for users",
            "example": "a string value",
            "type": "string"
          },
          "serverUrl": {
            "description": "URL of the ldap server",
            "example": "a string value",
            "type": "string"
          },
          "sessionMaxAge": {
            "description": "Max age of the session",
            "example": 123123,
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "Type of settings. value is ldap",
            "example": "a string value",
            "type": "string"
          },
          "userBase": {
            "description": "LDAP user base DN",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "desc",
          "sessionMaxAge",
          "serverUrl",
          "searchBase",
          "userBase",
          "groupFilter",
          "searchFilter",
          "adminUsername",
          "adminPassword",
          "nameField",
          "emailField",
          "metadataField"
        ],
        "type": "object"
      },
      "InMemoryAuthModuleConfig": {
        "description": "Settings to authenticate users using the in memory user store",
        "properties": {
          "desc": {
            "description": "Description of the config",
            "example": "a string value",
            "type": "string"
          },
          "id": {
            "description": "Unique id of the config",
            "example": "a string value",
            "type": "string"
          },
          "name": {
            "description": "Name of the config",
            "example": "a string value",
            "type": "string"
          },
          "sessionMaxAge": {
            "description": "Max age of the session",
            "example": "a string value",
            "type": "string"
          },
          "type": {
            "description": "Type of settings. value is basic",
            "example": "a string value",
            "type": "string"
          },
          "users": {
            "description": "List of users",
            "items": {
              "$ref": "#/$defs/InMemoryUser"
            },
            "type": "array"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "desc",
          "users",
          "sessionMaxAge"
        ],
        "type": "object"
      },
      "InMemoryUser": {
        "description": "A user",
        "properties": {
          "email": {
            "description": "Email of the user",
            "example": "a string value",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata of the user",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "name": {
            "description": "Name of the user",
            "example": "a string value",
            "type": "string"
          },
          "password": {
            "description": "Password of the user (BCrypt hash)",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "name",
          "password",
          "email",
          "metadata"
        ],
        "type": "object"
      },
      "GenericOauth2ModuleConfig": {
        "description": "Settings to authenticate users using a generic OAuth2 provider",
        "properties": {
          "accessTokenField": {
            "description": "Field name to get access token",
            "example": "a string value",
            "type": "string"
          },
          "authorizeUrl": {
            "description": "OAuth authorize URL",
            "example": "a string value",
            "type": "string"
          },
          "callbackUrl": {
            "description": "Otoroshi callback URL",
            "example": "a string value",
            "type": "string"
          },
          "claims": {
            "description": "The claims of the token",
            "example": "a string value",
            "type": "string"
          },
          "clientId": {
            "description": "OAuth Client id",
            "example": "a string value",
            "type": "string"
          },
          "clientSecret": {
            "description": "OAuth Client secret",
            "example": "a string value",
            "type": "string"
          },
          "desc": {
            "description": "Description of the config",
            "example": "a string value",
            "type": "string"
          },
          "emailField": {
            "description": "Field name to get email from user profile",
            "example": "a string value",
            "type": "string"
          },
          "id": {
            "description": "Unique id of the config",
            "example": "a string value",
            "type": "string"
          },
          "jwtVerifier": {
            "description": "Algo. settings to verify JWT token",
            "oneOf": [
              {
                "$ref": "#/$defs/HSAlgoSettings"
              },
              {
                "$ref": "#/$defs/RSAlgoSettings"
              },
              {
                "$ref": "#/$defs/ESAlgoSettings"
              },
              {
                "$ref": "#/$defs/JWKSAlgoSettings"
              }
            ]
          },
          "loginUrl": {
            "description": "OAuth login URL",
            "example": "a string value",
            "type": "string"
          },
          "logoutUrl": {
            "description": "OAuth logout URL",
            "example": "a string value",
            "type": "string"
          },
          "name": {
            "description": "Name of the config",
            "example": "a string value",
            "type": "string"
          },
          "nameField": {
            "description": "Field name to get name from user profile",
            "example": "a string value",
            "type": "string"
          },
          "oidConfig": {
            "description": "URL of the OIDC config. file",
            "example": "a string value",
            "type": "string"
          },
          "otoroshiDataField": {
            "description": "Field name to get otoroshi metadata from. You can specify sub fields using | as separator",
            "example": "a string value",
            "type": "string"
          },
          "readProfileFromToken": {
            "description": "The user profile will be read from the JWT token in id_token",
            "example": true,
            "type": "boolean"
          },
          "scope": {
            "description": "The scope of the token",
            "example": "a string value",
            "type": "string"
          },
          "sessionMaxAge": {
            "description": "Max age of the session",
            "example": 123123,
            "format": "int32",
            "type": "integer"
          },
          "tokenUrl": {
            "description": "OAuth token URL",
            "example": "a string value",
            "type": "string"
          },
          "type": {
            "description": "Type of settings. value is oauth2",
            "example": "a string value",
            "type": "string"
          },
          "useCookies": {
            "description": "Use for redirection to actual service",
            "example": true,
            "type": "boolean"
          },
          "useJson": {
            "description": "Use JSON or URL Form Encoded as payload with the OAuth provider",
            "example": true,
            "type": "boolean"
          },
          "userInfoUrl": {
            "description": "OAuth userinfo to get user profile",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "name",
          "desc",
          "sessionMaxAge",
          "clientId",
          "clientSecret",
          "authorizeUrl",
          "tokenUrl",
          "userInfoUrl",
          "loginUrl",
          "logoutUrl",
          "callbackUrl",
          "accessTokenField",
          "nameField",
          "emailField",
          "otoroshiDataField"
        ],
        "type": "object"
      },
      "HSAlgoSettings": {
        "description": "Settings for an HMAC + SHA signing algorithm",
        "properties": {
          "secret": {
            "description": "The secret value for the HMAC function",
            "example": "a string value",
            "type": "string"
          },
          "size": {
            "description": "Size for SHA function. can be 256, 384 or 512",
            "example": 123123,
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "String with value HSAlgoSettings",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "size",
          "secret"
        ],
        "type": "object"
      },
      "RSAlgoSettings": {
        "description": "Settings for an HMAC + SHA signing algorithm",
        "properties": {
          "privateKey": {
            "description": "The private key for the RSA function",
            "example": "a string value",
            "type": "string"
          },
          "publicKey": {
            "description": "The public key for the RSA function",
            "example": "a string value",
            "type": "string"
          },
          "size": {
            "description": "Size for SHA function. can be 256, 384 or 512",
            "example": 123123,
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "String with value RSAlgoSettings",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "size",
          "publicKey"
        ],
        "type": "object"
      },
      "ESAlgoSettings": {
        "description": "Settings for an EC + SHA signing algorithm",
        "properties": {
          "privateKey": {
            "description": "The private key for the RSA function",
            "example": "a string value",
            "type": "string"
          },
          "publicKey": {
            "description": "The public key for the RSA function",
            "example": "a string value",
            "type": "string"
          },
          "size": {
            "description": "Size for SHA function. can be 256, 384 or 512",
            "example": 123123,
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "description": "String with value ESAlgoSettings",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "size",
          "publicKey"
        ],
        "type": "object"
      },
      "JWKSAlgoSettings": {
        "description": "Settings for a JWK set",
        "properties": {
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The headers for the http call",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "kty": {
            "description": "The type of key: RSA or EC",
            "example": "a string value",
            "type": "string"
          },
          "timeout": {
            "description": "The timeout of the http call",
            "example": 123,
            "format": "int64",
            "type": "integer"
          },
          "ttl": {
            "description": "The ttl of the keyset",
            "example": 123,
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "description": "String with value JWKSAlgoSettings",
            "example": "a string value",
            "type": "string"
          },
          "url": {
            "description": "The url for the http call",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "type",
          "size",
          "publicKey"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://otoroshi-api.oto.tools//api/auths"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
