{
  "name": "putGlobalConfig",
  "description": "Update the global configuration",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/GlobalConfig"
      }
    },
    "$defs": {
      "GlobalConfig": {
        "description": "The global config object of Otoroshi, used to customize settings of the current Otoroshi instance",
        "properties": {
          "alertsEmails": {
            "description": "Email addresses that will receive all Otoroshi alert events",
            "items": {
              "example": "admin@otoroshi.io",
              "format": "email",
              "type": "string"
            },
            "type": "array"
          },
          "alertsWebhooks": {
            "description": "Webhook that will receive all Otoroshi alert events",
            "items": {
              "$ref": "#/$defs/Webhook"
            },
            "type": "array"
          },
          "analyticsWebhooks": {
            "description": "Webhook that will receive all internal Otoroshi events",
            "items": {
              "$ref": "#/$defs/Webhook"
            },
            "type": "array"
          },
          "apiReadOnly": {
            "description": "If enabled, Admin API won't be able to write/update/delete entities",
            "example": true,
            "type": "boolean"
          },
          "autoLinkToDefaultGroup": {
            "description": "If not defined, every new service descriptor will be added to the default group",
            "example": true,
            "type": "boolean"
          },
          "backofficeAuth0Config": {
            "$ref": "#/$defs/Auth0Config"
          },
          "cleverSettings": {
            "$ref": "#/$defs/CleverSettings"
          },
          "elasticReadsConfig": {
            "$ref": "#/$defs/ElasticConfig"
          },
          "elasticWritesConfigs": {
            "description": "Configs. for Elastic writes",
            "items": {
              "$ref": "#/$defs/ElasticConfig"
            },
            "type": "array"
          },
          "endlessIpAddresses": {
            "description": "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
            "items": {
              "example": "192.192.192.192",
              "format": "ipv4",
              "type": "string"
            },
            "type": "array"
          },
          "ipFiltering": {
            "$ref": "#/$defs/IpFiltering"
          },
          "limitConcurrentRequests": {
            "description": "If enabled, Otoroshi will reject new request if too much at the same time",
            "example": true,
            "type": "boolean"
          },
          "lines": {
            "description": "Possibles lines for Otoroshi",
            "items": {
              "example": "a string value",
              "type": "string"
            },
            "type": "array"
          },
          "mailerSettings": {
            "$ref": "#/$defs/MailerSettings"
          },
          "maxConcurrentRequests": {
            "description": "The number of authorized request processed at the same time",
            "example": 123,
            "format": "int64",
            "type": "integer"
          },
          "maxHttp10ResponseSize": {
            "description": "The max size in bytes of an HTTP 1.0 response",
            "example": 123,
            "format": "int64",
            "type": "integer"
          },
          "maxLogsSize": {
            "description": "Number of events kept locally",
            "example": 123123,
            "format": "int32",
            "type": "integer"
          },
          "middleFingers": {
            "description": "Use middle finger emoji as a response character for endless HTTP responses",
            "example": true,
            "type": "boolean"
          },
          "perIpThrottlingQuota": {
            "description": "Authorized number of calls per second globally per IP address, measured on 10 seconds",
            "example": 123,
            "format": "int64",
            "type": "integer"
          },
          "privateAppsAuth0Config": {
            "$ref": "#/$defs/Auth0Config"
          },
          "streamEntityOnly": {
            "description": "HTTP will be streamed only. Doesn't work with old browsers",
            "example": true,
            "type": "boolean"
          },
          "throttlingQuota": {
            "description": "Authorized number of calls per second globally, measured on 10 seconds",
            "example": 123,
            "format": "int64",
            "type": "integer"
          },
          "u2fLoginOnly": {
            "description": "If enabled, login to backoffice through Auth0 will be disabled",
            "example": true,
            "type": "boolean"
          },
          "useCircuitBreakers": {
            "description": "If enabled, services will be authorized to use circuit breakers",
            "example": true,
            "type": "boolean"
          }
        },
        "required": [
          "streamEntityOnly",
          "autoLinkToDefaultGroup",
          "limitConcurrentRequests",
          "maxConcurrentRequests",
          "useCircuitBreakers",
          "apiReadOnly",
          "u2fLoginOnly",
          "ipFiltering",
          "throttlingQuota",
          "perIpThrottlingQuota",
          "analyticsWebhooks",
          "alertsWebhooks",
          "alertsEmails",
          "endlessIpAddresses"
        ],
        "type": "object"
      },
      "Webhook": {
        "description": "A callback URL where events are posted",
        "properties": {
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Headers to authorize the call or whatever",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "url": {
            "description": "The URL where events are posted",
            "example": "http://www.google.com",
            "format": "uri",
            "type": "string"
          }
        },
        "required": [
          "url",
          "headers"
        ],
        "type": "object"
      },
      "Auth0Config": {
        "description": "Configuration for Auth0 domain",
        "properties": {
          "callbackUrl": {
            "description": "Auth0 callback URL",
            "example": "a string value",
            "type": "string"
          },
          "clientId": {
            "description": "Auth0 client id",
            "example": "a string value",
            "type": "string"
          },
          "clientSecret": {
            "description": "Auth0 client secret",
            "example": "a string value",
            "type": "string"
          },
          "domain": {
            "description": "Auth0 domain",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "clientSecret",
          "domain",
          "callbackUrl"
        ],
        "type": "object"
      },
      "CleverSettings": {
        "description": "Configuration for CleverCloud client",
        "properties": {
          "consumerKey": {
            "description": "CleverCloud consumer key",
            "example": "a string value",
            "type": "string"
          },
          "consumerSecret": {
            "description": "CleverCloud consumer token",
            "example": "a string value",
            "type": "string"
          },
          "orgaId": {
            "description": "CleverCloud organization id",
            "example": "a string value",
            "type": "string"
          },
          "secret": {
            "description": "CleverCloud oauth secret",
            "example": "a string value",
            "type": "string"
          },
          "token": {
            "description": "CleverCloud oauth token",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "consumerKey",
          "consumerSecret",
          "token",
          "secret",
          "orgaId"
        ],
        "type": "object"
      },
      "ElasticConfig": {
        "description": "The configuration for elastic access",
        "properties": {
          "clusterUri": {
            "description": "URL of the elastic cluster",
            "example": "a string value",
            "type": "string"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additionnal http headers",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "index": {
            "description": "Index for events. Default is otoroshi-events",
            "example": "a string value",
            "type": "string"
          },
          "password": {
            "description": "Optional password",
            "example": "a string value",
            "type": "string"
          },
          "type": {
            "description": "Type of events. Default is event",
            "example": "a string value",
            "type": "string"
          },
          "user": {
            "description": "Optional user",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "clusterUri",
          "index",
          "type",
          "user",
          "password",
          "headers"
        ],
        "type": "object"
      },
      "IpFiltering": {
        "description": "The filtering configuration block for a service of globally.",
        "properties": {
          "blacklist": {
            "description": "Blacklisted IP addresses",
            "items": {
              "example": "192.192.192.192",
              "format": "ipv4",
              "type": "string"
            },
            "type": "array"
          },
          "whitelist": {
            "description": "Whitelisted IP addresses",
            "items": {
              "example": "192.192.192.192",
              "format": "ipv4",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "whitelist",
          "blacklist"
        ],
        "type": "object"
      },
      "MailerSettings": {
        "description": "Configuration for mailgun api client",
        "properties": {
          "apiKey": {
            "description": "Mailgun mailer api key",
            "example": "a string value",
            "type": "string"
          },
          "apiKeyPrivate": {
            "description": "Mailjet mailer private api key",
            "example": "a string value",
            "type": "string"
          },
          "apiKeyPublic": {
            "description": "Mailjet mailer public api key",
            "example": "a string value",
            "type": "string"
          },
          "domain": {
            "description": "Mailgun mailer domain",
            "example": "a string value",
            "type": "string"
          },
          "eu": {
            "description": "Mailgun mailer, use EU tenant api",
            "example": true,
            "type": "boolean"
          },
          "header": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Generic mailer headers",
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "type": {
            "description": "Type of the mailer: console, generic, mailgun, mailjet",
            "example": "a string value",
            "type": "string"
          },
          "url": {
            "description": "Generic mailer url",
            "example": "a string value",
            "type": "string"
          }
        },
        "required": [
          "apiKey",
          "domain"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://otoroshi-api.oto.tools//api/globalconfig"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The global config object of Otoroshi, used to customize settings of the current Otoroshi instance",
        "**Key properties:**",
        {
          "$ul": [
            "**alertsEmails**: Email addresses that will receive all Otoroshi alert events",
            "**alertsWebhooks**: Webhook that will receive all Otoroshi alert events",
            "**analyticsWebhooks**: Webhook that will receive all internal Otoroshi events",
            "**apiReadOnly**: If enabled, Admin API won't be able to write/update/delete entities",
            "**autoLinkToDefaultGroup**: If not defined, every new service descriptor will be added to the default group",
            [
              "**backofficeAuth0Config**: Configuration for Auth0 domain",
              {
                "$ul": [
                  "**callbackUrl**: Auth0 callback URL",
                  "**clientId**: Auth0 client id",
                  "**clientSecret**: Auth0 client secret",
                  "**domain**: Auth0 domain"
                ]
              }
            ],
            [
              "**cleverSettings**: Configuration for CleverCloud client",
              {
                "$ul": [
                  "**consumerKey**: CleverCloud consumer key",
                  "**consumerSecret**: CleverCloud consumer token",
                  "**orgaId**: CleverCloud organization id",
                  "**secret**: CleverCloud oauth secret",
                  "**token**: CleverCloud oauth token"
                ]
              }
            ],
            [
              "**elasticReadsConfig**: The configuration for elastic access",
              {
                "$ul": [
                  "**clusterUri**: URL of the elastic cluster",
                  "**headers**: Additionnal http headers",
                  "**index**: Index for events. Default is otoroshi-events",
                  "**password**: Optional password",
                  "**type**: Type of events. Default is event",
                  "**user**: Optional user"
                ]
              }
            ],
            "**elasticWritesConfigs**: Configs. for Elastic writes",
            "**endlessIpAddresses**: IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
            [
              "**ipFiltering**: The filtering configuration block for a service of globally.",
              {
                "$ul": [
                  "**blacklist**: Blacklisted IP addresses",
                  "**whitelist**: Whitelisted IP addresses"
                ]
              }
            ],
            "**limitConcurrentRequests**: If enabled, Otoroshi will reject new request if too much at the same time",
            "**lines**: Possibles lines for Otoroshi",
            [
              "**mailerSettings**: Configuration for mailgun api client",
              {
                "$ul": [
                  "**apiKey**: Mailgun mailer api key",
                  "**apiKeyPrivate**: Mailjet mailer private api key",
                  "**apiKeyPublic**: Mailjet mailer public api key",
                  "**domain**: Mailgun mailer domain",
                  "**eu**: Mailgun mailer, use EU tenant api",
                  "**header**: Generic mailer headers",
                  "**type**: Type of the mailer: console, generic, mailgun, mailjet",
                  "**url**: Generic mailer url"
                ]
              }
            ],
            "**maxConcurrentRequests**: The number of authorized request processed at the same time",
            "**maxHttp10ResponseSize**: The max size in bytes of an HTTP 1.0 response",
            "**maxLogsSize**: Number of events kept locally",
            "**middleFingers**: Use middle finger emoji as a response character for endless HTTP responses",
            "**perIpThrottlingQuota**: Authorized number of calls per second globally per IP address, measured on 10 seconds",
            [
              "**privateAppsAuth0Config**: Configuration for Auth0 domain",
              {
                "$ul": [
                  "**callbackUrl**: Auth0 callback URL",
                  "**clientId**: Auth0 client id",
                  "**clientSecret**: Auth0 client secret",
                  "**domain**: Auth0 domain"
                ]
              }
            ],
            "**streamEntityOnly**: HTTP will be streamed only. Doesn't work with old browsers",
            "**throttlingQuota**: Authorized number of calls per second globally, measured on 10 seconds",
            "**u2fLoginOnly**: If enabled, login to backoffice through Auth0 will be disabled",
            "**useCircuitBreakers**: If enabled, services will be authorized to use circuit breakers"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
