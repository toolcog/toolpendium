{
  "name": "appDGET",
  "description": "Reads the content of the AppD of on-boarded individual application package resources.",
  "parameters": {
    "type": "object",
    "properties": {
      "filter": {
        "type": "string",
        "description": "Attribute-based filtering parameters according to ETSI GS MEC 009"
      },
      "all_fields": {
        "type": "string",
        "description": "Include all complex attributes in the response."
      },
      "fields": {
        "type": "string",
        "description": "Complex attributes of AppPkgInfo to be included into the response"
      },
      "exclude_fields": {
        "type": "string",
        "description": "Complex attributes of AppPkgInfo to be excluded from the response."
      },
      "exclude_default": {
        "type": "string",
        "description": "Indicates to exclude the following complex attributes of AppPkgInfo from the response."
      },
      "appDId": {
        "type": "string",
        "description": "Identifier of an application descriptor"
      }
    },
    "required": [
      "appDId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://etsi.local/onboarded_app_packages/{appDId}/appd{?filter,all_fields,fields,exclude_fields,exclude_default}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**appDId**: Identifier of this MEC application descriptor. This attribute shall be globally unique. See noteÂ 1.",
            "**appDNSRule**: Describes DNS rules the MEC application requires.",
            "**appDVersion**: Identifies the version of the application descriptor.",
            "**appDescription**: Human readable description of the MEC application.",
            "**appExtCpd**: Describes external interface(s) exposed by this MEC application.",
            "**appFeatureOptional**: Describes features a MEC application may use if available.",
            "**appFeatureRequired**: Describes features a MEC application requires to run.",
            "**appInfoName**: Human readable name for the MEC application.",
            [
              "**appLatency**",
              {
                "$ul": [
                  "**maxLatency**: The value of the maximum latency in nano seconds tolerated by the MEC application. See note."
                ]
              }
            ],
            "**appName**: Name to identify the MEC application.",
            "**appProvider**: Provider of the application and of the AppD.",
            "**appServiceOptional**: Describes services a MEC application may use if available.",
            "**appServiceProduced**: Describes services a MEC application is able to produce to the platform or other MEC applications. Only relevant for service-producing apps.",
            "**appServiceRequired**: Describes services a MEC application requires to run.",
            "**appSoftVersion**: Identifies the version of software of the MEC application.",
            "**appTrafficRule**: Describes traffic rules the MEC application requires.",
            "**changeAppInstanceStateOpConfig**: NFV",
            "**mecVersion**: Identifies version(s) of MEC system compatible with the MEC application described in this version of the AppD.",
            "**swImageDescriptor**: Ref NFV",
            "**terminateAppInstanceOpConfig**: NFV",
            "**transportDependencies**: Transports, if any, that this application requires to be provided by the platform. These transports will be used by the application to deliver services provided by this application. Only relevant for service-producing apps. See note 2.",
            "**virtualComputeDescriptor**: Ref NFV",
            "**virtualStorageDescriptor**: Defines descriptors of virtual storage resources to be used by the MEC application."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem",
            "**instance**: A URI reference that identifies the specific occurrence of the problem",
            "**status**: The HTTP status code for this occurrence of the problem",
            "**title**: A short, human-readable summary of the problem type",
            "**type**: A URI reference according to IETF RFC 3986 that identifies the problem type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem",
            "**instance**: A URI reference that identifies the specific occurrence of the problem",
            "**status**: The HTTP status code for this occurrence of the problem",
            "**title**: A short, human-readable summary of the problem type",
            "**type**: A URI reference according to IETF RFC 3986 that identifies the problem type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem",
            "**instance**: A URI reference that identifies the specific occurrence of the problem",
            "**status**: The HTTP status code for this occurrence of the problem",
            "**title**: A short, human-readable summary of the problem type",
            "**type**: A URI reference according to IETF RFC 3986 that identifies the problem type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem",
            "**instance**: A URI reference that identifies the specific occurrence of the problem",
            "**status**: The HTTP status code for this occurrence of the problem",
            "**title**: A short, human-readable summary of the problem type",
            "**type**: A URI reference according to IETF RFC 3986 that identifies the problem type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "406": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem",
            "**instance**: A URI reference that identifies the specific occurrence of the problem",
            "**status**: The HTTP status code for this occurrence of the problem",
            "**title**: A short, human-readable summary of the problem type",
            "**type**: A URI reference according to IETF RFC 3986 that identifies the problem type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem",
            "**instance**: A URI reference that identifies the specific occurrence of the problem",
            "**status**: The HTTP status code for this occurrence of the problem",
            "**title**: A short, human-readable summary of the problem type",
            "**type**: A URI reference according to IETF RFC 3986 that identifies the problem type"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
