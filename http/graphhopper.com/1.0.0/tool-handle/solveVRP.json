{
  "name": "solveVRP",
  "description": "\nTo get started with the Route Optimization API, please read the [introduction](#tag/Route-Optimization-API).\n\nTo solve a new vehicle routing problem, make a HTTP POST to this URL\n\n```\nhttps://graphhopper.com/api/1/vrp?key=<your_key>\n```\n\nIt returns the solution to this problem in the JSON response.\n\nPlease note that this URL is very well suited to solve minor problems.\nLarger vehicle routing problems, which take longer than 10 seconds to solve, cannot be solved.\nTo solve them, please use the [batch mode URL](#operation/asyncVRP) instead.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/components/schemas/Request",
        "description": "The request that contains the vehicle routing problem to be solved."
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://graphhopper.com/api/1/vrp"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**copyrights**",
            "**processing_time**: Processing time in ms. If job is still waiting in queue, processing_time is 0",
            [
              "**solution**: Only available if status field indicates `finished`.",
              {
                "$ul": [
                  "**completion_time**: Overall completion time in seconds, i.e. the sum of each routes/drivers operation time.",
                  "**costs**",
                  "**distance**: Overall distance travelled in meter, i.e. the sum of each route's transport distance",
                  "**max_operation_time**: Operation time of longest route in seconds.",
                  "**no_unassigned**: Number of jobs that could not be assigned to final solution.",
                  "**no_vehicles**: Number of employed vehicles.",
                  "**preparation_time**: Overall preparation time in seconds.",
                  "**routes**: An array of routes",
                  "**service_duration**: Overall service time in seconds.",
                  "**time**: Use `transport_time` instead.",
                  "**transport_time**: Overall time travelled in seconds, i.e. the sum of each route's transport time.",
                  [
                    "**unassigned**",
                    {
                      "$ul": [
                        "**breaks**: An array of ids of unassigned breaks",
                        "**details**: An array of details, i.e. reason for unassigned services or shipments",
                        "**services**: An array of ids of unassigned services",
                        "**shipments**: An array of ids of unassigned shipments"
                      ]
                    }
                  ],
                  "**waiting_time**: Overall waiting time in seconds."
                ]
              }
            ],
            "**status**: Indicates the current status of the job",
            "**waiting_time_in_queue**: Waiting time in ms"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**hints**: Optional error information.",
            "**message**: Short error message",
            "**status**: status (default: finished)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code** (default: 500)",
            "**message**: Details"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
