{
  "name": "apps_get-repo-installation",
  "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.0/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string"
      },
      "repo": {
        "type": "string"
      }
    },
    "required": [
      "owner",
      "repo"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://HOSTNAME/api/v3/repos/{owner}/{repo}/installation"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Installation"
        },
        "Installation",
        "**Key properties:**",
        {
          "$ul": [
            "**access_tokens_url**",
            "**account**",
            "**app_id**",
            "**app_slug**",
            "**contact_email**",
            "**created_at**",
            "**events**",
            "**has_multiple_single_files**",
            "**html_url**",
            "**id**: The ID of the installation.",
            [
              "**permissions**: The permissions granted to the user-to-server access token.",
              {
                "$ul": [
                  "**actions**: The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                  "**administration**: The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                  "**checks**: The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                  "**content_references**: The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                  "**contents**: The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                  "**deployments**: The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                  "**environments**: The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                  "**issues**: The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                  "**members**: The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                  "**metadata**: The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                  "**organization_administration**: The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                  "**organization_hooks**: The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                  "**organization_packages**: The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                  "**organization_plan**: The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                  "**organization_projects**: The level of permission to grant the access token to manage organization projects and projects beta (where available). Can be one of: `read`, `write`, or `admin`.",
                  "**organization_secrets**: The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                  "**organization_self_hosted_runners**: The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                  "**organization_user_blocking**: The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                  "**packages**: The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                  "**pages**: The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                  "**pull_requests**: The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                  "**repository_hooks**: The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                  "**repository_projects**: The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                  "**secret_scanning_alerts**: The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                  "**secrets**: The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                  "**security_events**: The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                  "**single_file**: The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                  "**statuses**: The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                  "**team_discussions**: The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                  "**vulnerability_alerts**: The level of permission to grant the access token to manage Dependabot alerts. Can be one of: `read` or `write`.",
                  "**workflows**: The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`."
                ]
              }
            ],
            "**repositories_url**",
            "**repository_selection**: Describe whether all repositories have been selected or there's a selection involved",
            "**single_file_name**",
            "**single_file_paths**",
            "**suspended_at**",
            [
              "**suspended_by**: Simple User",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**target_id**: The ID of the user or organization this token is being scoped to.",
            "**target_type**",
            "**updated_at**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "301": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
