{
  "name": "pulls_create-review-comment",
  "description": "\nCreates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://docs.github.com/enterprise-server@2.22/rest/reference/issues#create-an-issue-comment).\" We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.\n\nYou can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required.\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.22/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string"
      },
      "repo": {
        "type": "string"
      },
      "pull_number": {
        "type": "integer"
      },
      "body": {
        "properties": {
          "body": {
            "description": "The text of the review comment.",
            "type": "string"
          },
          "commit_id": {
            "description": "The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`.",
            "type": "string"
          },
          "in_reply_to": {
            "example": 2,
            "type": "integer"
          },
          "line": {
            "description": "The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to.",
            "type": "integer"
          },
          "path": {
            "description": "The relative path to the file that necessitates a comment.",
            "type": "string"
          },
          "position": {
            "description": "The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. For help finding the position value, read the note above.",
            "type": "integer"
          },
          "side": {
            "description": "In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions that appear in red. Use `RIGHT` for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see \"[Diff view options](https://help.github.com/en/articles/about-comparing-branches-in-pull-requests#diff-view-options)\" in the GitHub Help documentation.",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string"
          },
          "start_line": {
            "description": "**Required when using multi-line comments**. The `start_line` is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see \"[Commenting on a pull request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)\" in the GitHub Help documentation.",
            "type": "integer"
          },
          "start_side": {
            "description": "**Required when using multi-line comments**. The `start_side` is the starting side of the diff that the comment applies to. Can be `LEFT` or `RIGHT`. To learn more about multi-line comments, see \"[Commenting on a pull request](https://help.github.com/en/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)\" in the GitHub Help documentation. See `side` in this table for additional context.",
            "enum": [
              "LEFT",
              "RIGHT",
              "side"
            ],
            "type": "string"
          }
        },
        "required": [
          "body"
        ],
        "type": "object"
      }
    },
    "required": [
      "owner",
      "repo",
      "pull_number",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://HOSTNAME/api/v3/repos/{owner}/{repo}/pulls/{pull_number}/comments"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Pull Request Review Comment"
        },
        "Pull Request Review Comments are comments on a portion of the Pull Request's diff.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**_links**",
              {
                "$ul": [
                  [
                    "**html**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ],
                  [
                    "**pull_request**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ],
                  [
                    "**self**",
                    {
                      "$ul": [
                        "**href**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**author_association**: How the author is associated with the repository.",
            "**body**: The text of the comment.",
            "**body_html**",
            "**body_text**",
            "**commit_id**: The SHA of the commit to which the comment applies.",
            "**created_at**",
            "**diff_hunk**: The diff of the line that the comment refers to.",
            "**html_url**: HTML URL for the pull request review comment.",
            "**id**: The ID of the pull request review comment.",
            "**in_reply_to_id**: The comment ID to reply to.",
            "**line**: The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "**node_id**: The node ID of the pull request review comment.",
            "**original_commit_id**: The SHA of the original commit to which the comment applies.",
            "**original_line**: The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "**original_position**: The index of the original line in the diff to which the comment applies.",
            "**original_start_line**: The first line of the range for a multi-line comment.",
            "**path**: The relative path of the file to which the comment applies.",
            "**position**: The line index in the diff to which the comment applies.",
            "**pull_request_review_id**: The ID of the pull request review to which the comment belongs.",
            "**pull_request_url**: URL for the pull request that the review comment belongs to.",
            [
              "**reactions**",
              {
                "$ul": [
                  "**+1**",
                  "**-1**",
                  "**confused**",
                  "**eyes**",
                  "**heart**",
                  "**hooray**",
                  "**laugh**",
                  "**rocket**",
                  "**total_count**",
                  "**url**"
                ]
              }
            ],
            "**side**: The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment (default: RIGHT)",
            "**start_line**: The first line of the range for a multi-line comment.",
            "**start_side**: The side of the first line of the range for a multi-line comment. (default: RIGHT)",
            "**updated_at**",
            "**url**: URL for the pull request review comment",
            [
              "**user**: Simple User",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Validation Error"
        },
        "Validation Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**errors**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
