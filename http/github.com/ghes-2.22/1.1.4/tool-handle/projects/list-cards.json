{
  "name": "projects_list-cards",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "column_id": {
        "type": "integer",
        "description": "column_id parameter"
      },
      "archived_state": {
        "default": "not_archived",
        "enum": [
          "all",
          "archived",
          "not_archived"
        ],
        "type": "string",
        "description": "Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`."
      },
      "per_page": {
        "default": 30,
        "type": "integer",
        "description": "Results per page (max 100)"
      },
      "page": {
        "default": 1,
        "type": "integer",
        "description": "Page number of the results to fetch."
      }
    },
    "required": [
      "column_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://HOSTNAME/api/v3/projects/columns/{column_id}/cards{?archived_state,per_page,page}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Project Card list"
        },
        "Project cards represent a scope of work.",
        "**Key properties:**",
        {
          "$ul": [
            "**archived**: Whether or not the card is archived",
            "**column_name**",
            "**column_url**",
            "**content_url**",
            "**created_at**",
            [
              "**creator**: Simple User",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**id**: The project card's ID",
            "**node_id**",
            "**note**",
            "**project_id**",
            "**project_url**",
            "**updated_at**",
            "**url**"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
