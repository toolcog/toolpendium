{
  "name": "teams_list-for-authenticated-user",
  "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/).",
  "parameters": {
    "type": "object",
    "properties": {
      "per_page": {
        "default": 30,
        "type": "integer",
        "description": "Results per page (max 100)"
      },
      "page": {
        "default": 1,
        "type": "integer",
        "description": "Page number of the results to fetch."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://HOSTNAME/api/v3/user/teams{?per_page,page}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Full Team list"
        },
        "Groups of organization members that gives permissions on specified repositories.",
        "**Key properties:**",
        {
          "$ul": [
            "**created_at**",
            "**description**",
            "**html_url**",
            "**id**: Unique identifier of the team",
            "**ldap_dn**: Distinguished Name (DN) that team maps to within LDAP environment",
            "**members_count**",
            "**members_url**",
            "**name**: Name of the team",
            "**node_id**",
            [
              "**organization**: Organization Full",
              {
                "$ul": [
                  "**avatar_url**",
                  "**billing_email**",
                  "**blog**",
                  "**collaborators**",
                  "**company**",
                  "**created_at**",
                  "**default_repository_permission**",
                  "**description**",
                  "**disk_usage**",
                  "**email**",
                  "**events_url**",
                  "**followers**",
                  "**following**",
                  "**has_organization_projects**",
                  "**has_repository_projects**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**",
                  "**is_verified**",
                  "**issues_url**",
                  "**location**",
                  "**login**",
                  "**members_allowed_repository_creation_type**",
                  "**members_can_create_internal_repositories**",
                  "**members_can_create_pages**",
                  "**members_can_create_private_pages**",
                  "**members_can_create_private_repositories**",
                  "**members_can_create_public_pages**",
                  "**members_can_create_public_repositories**",
                  "**members_can_create_repositories**",
                  "**members_url**",
                  "**name**",
                  "**node_id**",
                  "**owned_private_repos**",
                  [
                    "**plan**",
                    {
                      "$ul": [
                        "**filled_seats**",
                        "**name**",
                        "**private_repos**",
                        "**seats**",
                        "**space**"
                      ]
                    }
                  ],
                  "**private_gists**",
                  "**public_gists**",
                  "**public_members_url**",
                  "**public_repos**",
                  "**repos_url**",
                  "**total_private_repos**",
                  "**twitter_username**",
                  "**two_factor_requirement_enabled**",
                  "**type**",
                  "**updated_at**",
                  "**url**"
                ]
              }
            ],
            [
              "**parent**: Groups of organization members that gives permissions on specified repositories.",
              {
                "$ul": [
                  "**description**: Description of the team",
                  "**html_url**",
                  "**id**: Unique identifier of the team",
                  "**ldap_dn**: Distinguished Name (DN) that team maps to within LDAP environment",
                  "**members_url**",
                  "**name**: Name of the team",
                  "**node_id**",
                  "**permission**: Permission that the team will have for its repositories",
                  "**privacy**: The level of privacy this team should have",
                  "**repositories_url**",
                  "**slug**",
                  "**url**: URL for the team"
                ]
              }
            ],
            "**permission**: Permission that the team will have for its repositories",
            "**privacy**: The level of privacy this team should have",
            "**repos_count**",
            "**repositories_url**",
            "**slug**",
            "**updated_at**",
            "**url**: URL for the team"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
