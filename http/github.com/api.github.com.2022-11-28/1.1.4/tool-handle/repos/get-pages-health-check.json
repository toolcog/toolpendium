{
  "name": "repos_get-pages-health-check",
  "description": "Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.\n\nThe first request to this endpoint returns a `202 Accepted` status and starts an asynchronous background task to get the results for the domain. After the background task completes, subsequent requests to this endpoint return a `200 OK` status with the health check results in the response.\n\nTo use this endpoint, you must be a repository administrator, maintainer, or have the 'manage GitHub Pages settings' permission. A token with the `repo` scope or Pages write permission is required. GitHub Apps must have the `administrative:write` and `pages:write` permissions.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "repo": {
        "type": "string",
        "description": "The name of the repository. The name is not case sensitive."
      }
    },
    "required": [
      "owner",
      "repo"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://github.com//repos/{owner}/{repo}/pages/health"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Pages Health Check Status"
        },
        "Pages Health Check Status",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**alt_domain**",
              {
                "$ul": [
                  "**caa_error**",
                  "**dns_resolves**",
                  "**enforces_https**",
                  "**has_cname_record**",
                  "**has_mx_records_present**",
                  "**host**",
                  "**https_error**",
                  "**is_a_record**",
                  "**is_apex_domain**",
                  "**is_cloudflare_ip**",
                  "**is_cname_to_fastly**",
                  "**is_cname_to_github_user_domain**",
                  "**is_cname_to_pages_dot_github_dot_com**",
                  "**is_fastly_ip**",
                  "**is_https_eligible**",
                  "**is_non_github_pages_ip_present**",
                  "**is_old_ip_address**",
                  "**is_pages_domain**",
                  "**is_pointed_to_github_pages_ip**",
                  "**is_proxied**",
                  "**is_served_by_pages**",
                  "**is_valid**",
                  "**is_valid_domain**",
                  "**nameservers**",
                  "**reason**",
                  "**responds_to_https**",
                  "**should_be_a_record**",
                  "**uri**"
                ]
              }
            ],
            [
              "**domain**",
              {
                "$ul": [
                  "**caa_error**",
                  "**dns_resolves**",
                  "**enforces_https**",
                  "**has_cname_record**",
                  "**has_mx_records_present**",
                  "**host**",
                  "**https_error**",
                  "**is_a_record**",
                  "**is_apex_domain**",
                  "**is_cloudflare_ip**",
                  "**is_cname_to_fastly**",
                  "**is_cname_to_github_user_domain**",
                  "**is_cname_to_pages_dot_github_dot_com**",
                  "**is_fastly_ip**",
                  "**is_https_eligible**",
                  "**is_non_github_pages_ip_present**",
                  "**is_old_ip_address**",
                  "**is_pages_domain**",
                  "**is_pointed_to_github_pages_ip**",
                  "**is_proxied**",
                  "**is_served_by_pages**",
                  "**is_valid**",
                  "**is_valid_domain**",
                  "**nameservers**",
                  "**reason**",
                  "**responds_to_https**",
                  "**should_be_a_record**",
                  "**uri**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Empty Object"
        },
        "An object without any properties.",
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
