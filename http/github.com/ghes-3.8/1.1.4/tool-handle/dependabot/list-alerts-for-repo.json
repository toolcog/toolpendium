{
  "name": "dependabot_list-alerts-for-repo",
  "description": "You must use an access token with the `security_events` scope to use this endpoint with private repositories.\nYou can also use tokens with the `public_repo` scope for public repositories only.\nGitHub Apps must have **Dependabot alerts** read permission to use this endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "repo": {
        "type": "string",
        "description": "The name of the repository. The name is not case sensitive."
      },
      "state": {
        "type": "string",
        "description": "A comma-separated list of states. If specified, only alerts with these states will be returned.\n\nCan be: `dismissed`, `fixed`, `open`"
      },
      "severity": {
        "type": "string",
        "description": "A comma-separated list of severities. If specified, only alerts with these severities will be returned.\n\nCan be: `low`, `medium`, `high`, `critical`"
      },
      "ecosystem": {
        "type": "string",
        "description": "A comma-separated list of ecosystems. If specified, only alerts for these ecosystems will be returned.\n\nCan be: `composer`, `go`, `maven`, `npm`, `nuget`, `pip`, `pub`, `rubygems`, `rust`"
      },
      "package": {
        "type": "string",
        "description": "A comma-separated list of package names. If specified, only alerts for these packages will be returned."
      },
      "manifest": {
        "type": "string",
        "description": "A comma-separated list of full manifest paths. If specified, only alerts for these manifests will be returned."
      },
      "scope": {
        "enum": [
          "development",
          "runtime"
        ],
        "type": "string",
        "description": "The scope of the vulnerable dependency. If specified, only alerts with this scope will be returned."
      },
      "sort": {
        "default": "created",
        "enum": [
          "created",
          "updated"
        ],
        "type": "string",
        "description": "The property by which to sort the results.\n`created` means when the alert was created.\n`updated` means when the alert's state last changed."
      },
      "direction": {
        "default": "desc",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "The direction to sort the results by."
      },
      "page": {
        "default": 1,
        "type": "integer",
        "description": "**Deprecated**. Page number of the results to fetch. Use cursor-based pagination with `before` or `after` instead."
      },
      "per_page": {
        "default": 30,
        "type": "integer",
        "description": "The number of results per page (max 100)."
      },
      "before": {
        "type": "string",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results before this cursor."
      },
      "after": {
        "type": "string",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results after this cursor."
      },
      "first": {
        "default": 30,
        "maximum": 100,
        "minimum": 1,
        "type": "integer",
        "description": "**Deprecated**. The number of results per page (max 100), starting from the first matching result.\nThis parameter must not be used in combination with `last`.\nInstead, use `per_page` in combination with `after` to fetch the first page of results."
      },
      "last": {
        "maximum": 100,
        "minimum": 1,
        "type": "integer",
        "description": "**Deprecated**. The number of results per page (max 100), starting from the last matching result.\nThis parameter must not be used in combination with `first`.\nInstead, use `per_page` in combination with `before` to fetch the last page of results."
      }
    },
    "required": [
      "owner",
      "repo"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://github.com//repos/{owner}/{repo}/dependabot/alerts{?state,severity,ecosystem,package,manifest,scope,sort,direction,page,per_page,before,after,first,last}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "A Dependabot alert.",
        "**Key properties:**",
        {
          "$ul": [
            "**created_at**: The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            [
              "**dependency**: Details for the vulnerable dependency.",
              {
                "$ul": [
                  "**manifest_path**: The full path to the dependency manifest file, relative to the root of the repository.",
                  [
                    "**package**: Details for the vulnerable package.",
                    {
                      "$ul": [
                        "**ecosystem**: The package's language or package management ecosystem.",
                        "**name**: The unique package name within its ecosystem."
                      ]
                    }
                  ],
                  "**scope**: The execution scope of the vulnerable dependency."
                ]
              }
            ],
            "**dismissed_at**: The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            [
              "**dismissed_by**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**dismissed_comment**: An optional comment associated with the alert's dismissal.",
            "**dismissed_reason**: The reason that the alert was dismissed.",
            "**fixed_at**: The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "**html_url**: The GitHub URL of the alert resource.",
            "**number**: The security alert number.",
            [
              "**security_advisory**: Details for the GitHub Security Advisory.",
              {
                "$ul": [
                  "**cve_id**: The unique CVE ID assigned to the advisory.",
                  [
                    "**cvss**: Details for the advisory pertaining to the Common Vulnerability Scoring System.",
                    {
                      "$ul": [
                        "**score**: The overall CVSS score of the advisory.",
                        "**vector_string**: The full CVSS vector string for the advisory."
                      ]
                    }
                  ],
                  "**cwes**: Details for the advisory pertaining to Common Weakness Enumeration.",
                  "**description**: A long-form Markdown-supported description of the advisory.",
                  "**ghsa_id**: The unique GitHub Security Advisory ID assigned to the advisory.",
                  "**identifiers**: Values that identify this advisory among security information sources.",
                  "**published_at**: The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "**references**: Links to additional advisory information.",
                  "**severity**: The severity of the advisory.",
                  "**summary**: A short, plain text summary of the advisory.",
                  "**updated_at**: The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "**vulnerabilities**: Vulnerable version range information for the advisory.",
                  "**withdrawn_at**: The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."
                ]
              }
            ],
            [
              "**security_vulnerability**: Details pertaining to one vulnerable version range for the advisory.",
              {
                "$ul": [
                  [
                    "**first_patched_version**: Details pertaining to the package version that patches this vulnerability.",
                    {
                      "$ul": [
                        "**identifier**: The package version that patches this vulnerability."
                      ]
                    }
                  ],
                  [
                    "**package**: Details for the vulnerable package.",
                    {
                      "$ul": [
                        "**ecosystem**: The package's language or package management ecosystem.",
                        "**name**: The unique package name within its ecosystem."
                      ]
                    }
                  ],
                  "**severity**: The severity of the vulnerability.",
                  "**vulnerable_version_range**: Conditions that identify vulnerable versions of this vulnerability's package."
                ]
              }
            ],
            "**state**: The state of the Dependabot alert.",
            "**updated_at**: The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "**url**: The REST API URL of the alert resource."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Validation Error Simple"
        },
        "Validation Error Simple",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**errors**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
