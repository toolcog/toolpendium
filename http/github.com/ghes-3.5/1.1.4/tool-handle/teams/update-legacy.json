{
  "name": "teams_update-legacy",
  "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://docs.github.com/enterprise-server@3.5/rest/reference/teams#update-a-team) endpoint.\n\nTo edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`.",
  "parameters": {
    "type": "object",
    "properties": {
      "team_id": {
        "type": "integer",
        "description": "The unique identifier of the team."
      },
      "body": {
        "properties": {
          "description": {
            "description": "The description of the team.",
            "type": "string"
          },
          "name": {
            "description": "The name of the team.",
            "type": "string"
          },
          "parent_team_id": {
            "description": "The ID of a team to set as the parent team.",
            "nullable": true,
            "type": "integer"
          },
          "permission": {
            "default": "pull",
            "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified.",
            "enum": [
              "pull",
              "push",
              "admin"
            ],
            "type": "string"
          },
          "privacy": {
            "description": "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization.",
            "enum": [
              "secret",
              "closed"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      }
    },
    "required": [
      "team_id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://github.com//teams/{team_id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Full Team"
        },
        "Groups of organization members that gives permissions on specified repositories.",
        "**Key properties:**",
        {
          "$ul": [
            "**created_at**",
            "**description**",
            "**html_url**",
            "**id**: Unique identifier of the team",
            "**ldap_dn**: Distinguished Name (DN) that team maps to within LDAP environment",
            "**members_count**",
            "**members_url**",
            "**name**: Name of the team",
            "**node_id**",
            [
              "**organization**: Team Organization",
              {
                "$ul": [
                  "**avatar_url**",
                  "**billing_email**",
                  "**blog**",
                  "**collaborators**",
                  "**company**",
                  "**created_at**",
                  "**default_repository_permission**",
                  "**description**",
                  "**disk_usage**",
                  "**email**",
                  "**events_url**",
                  "**followers**",
                  "**following**",
                  "**has_organization_projects**",
                  "**has_repository_projects**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**",
                  "**is_verified**",
                  "**issues_url**",
                  "**location**",
                  "**login**",
                  "**members_allowed_repository_creation_type**",
                  "**members_can_create_internal_repositories**",
                  "**members_can_create_pages**",
                  "**members_can_create_private_pages**",
                  "**members_can_create_private_repositories**",
                  "**members_can_create_public_pages**",
                  "**members_can_create_public_repositories**",
                  "**members_can_create_repositories**",
                  "**members_can_fork_private_repositories**",
                  "**members_url**",
                  "**name**",
                  "**node_id**",
                  "**owned_private_repos**",
                  [
                    "**plan**",
                    {
                      "$ul": [
                        "**filled_seats**",
                        "**name**",
                        "**private_repos**",
                        "**seats**",
                        "**space**"
                      ]
                    }
                  ],
                  "**private_gists**",
                  "**public_gists**",
                  "**public_members_url**",
                  "**public_repos**",
                  "**repos_url**",
                  "**total_private_repos**",
                  "**twitter_username**",
                  "**two_factor_requirement_enabled**",
                  "**type**",
                  "**updated_at**",
                  "**url**"
                ]
              }
            ],
            [
              "**parent**: Groups of organization members that gives permissions on specified repositories.",
              {
                "$ul": [
                  "**description**: Description of the team",
                  "**html_url**",
                  "**id**: Unique identifier of the team",
                  "**ldap_dn**: Distinguished Name (DN) that team maps to within LDAP environment",
                  "**members_url**",
                  "**name**: Name of the team",
                  "**node_id**",
                  "**permission**: Permission that the team will have for its repositories",
                  "**privacy**: The level of privacy this team should have",
                  "**repositories_url**",
                  "**slug**",
                  "**url**: URL for the team"
                ]
              }
            ],
            "**permission**: Permission that the team will have for its repositories",
            "**privacy**: The level of privacy this team should have",
            "**repos_count**",
            "**repositories_url**",
            "**slug**",
            "**updated_at**",
            "**url**: URL for the team"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Full Team"
        },
        "Groups of organization members that gives permissions on specified repositories.",
        "**Key properties:**",
        {
          "$ul": [
            "**created_at**",
            "**description**",
            "**html_url**",
            "**id**: Unique identifier of the team",
            "**ldap_dn**: Distinguished Name (DN) that team maps to within LDAP environment",
            "**members_count**",
            "**members_url**",
            "**name**: Name of the team",
            "**node_id**",
            [
              "**organization**: Team Organization",
              {
                "$ul": [
                  "**avatar_url**",
                  "**billing_email**",
                  "**blog**",
                  "**collaborators**",
                  "**company**",
                  "**created_at**",
                  "**default_repository_permission**",
                  "**description**",
                  "**disk_usage**",
                  "**email**",
                  "**events_url**",
                  "**followers**",
                  "**following**",
                  "**has_organization_projects**",
                  "**has_repository_projects**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**",
                  "**is_verified**",
                  "**issues_url**",
                  "**location**",
                  "**login**",
                  "**members_allowed_repository_creation_type**",
                  "**members_can_create_internal_repositories**",
                  "**members_can_create_pages**",
                  "**members_can_create_private_pages**",
                  "**members_can_create_private_repositories**",
                  "**members_can_create_public_pages**",
                  "**members_can_create_public_repositories**",
                  "**members_can_create_repositories**",
                  "**members_can_fork_private_repositories**",
                  "**members_url**",
                  "**name**",
                  "**node_id**",
                  "**owned_private_repos**",
                  [
                    "**plan**",
                    {
                      "$ul": [
                        "**filled_seats**",
                        "**name**",
                        "**private_repos**",
                        "**seats**",
                        "**space**"
                      ]
                    }
                  ],
                  "**private_gists**",
                  "**public_gists**",
                  "**public_members_url**",
                  "**public_repos**",
                  "**repos_url**",
                  "**total_private_repos**",
                  "**twitter_username**",
                  "**two_factor_requirement_enabled**",
                  "**type**",
                  "**updated_at**",
                  "**url**"
                ]
              }
            ],
            [
              "**parent**: Groups of organization members that gives permissions on specified repositories.",
              {
                "$ul": [
                  "**description**: Description of the team",
                  "**html_url**",
                  "**id**: Unique identifier of the team",
                  "**ldap_dn**: Distinguished Name (DN) that team maps to within LDAP environment",
                  "**members_url**",
                  "**name**: Name of the team",
                  "**node_id**",
                  "**permission**: Permission that the team will have for its repositories",
                  "**privacy**: The level of privacy this team should have",
                  "**repositories_url**",
                  "**slug**",
                  "**url**: URL for the team"
                ]
              }
            ],
            "**permission**: Permission that the team will have for its repositories",
            "**privacy**: The level of privacy this team should have",
            "**repos_count**",
            "**repositories_url**",
            "**slug**",
            "**updated_at**",
            "**url**: URL for the team"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Validation Error"
        },
        "Validation Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**errors**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
