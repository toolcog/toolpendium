{
  "name": "repos_create-in-org",
  "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository",
  "parameters": {
    "type": "object",
    "properties": {
      "org": {
        "type": "string"
      },
      "body": {
        "properties": {
          "allow_merge_commit": {
            "default": true,
            "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
            "type": "boolean"
          },
          "allow_rebase_merge": {
            "default": true,
            "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
            "type": "boolean"
          },
          "allow_squash_merge": {
            "default": true,
            "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
            "type": "boolean"
          },
          "auto_init": {
            "default": false,
            "description": "Pass `true` to create an initial commit with empty README.",
            "type": "boolean"
          },
          "delete_branch_on_merge": {
            "default": false,
            "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
            "type": "boolean"
          },
          "description": {
            "description": "A short description of the repository.",
            "type": "string"
          },
          "gitignore_template": {
            "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\".",
            "type": "string"
          },
          "has_issues": {
            "default": true,
            "description": "Either `true` to enable issues for this repository or `false` to disable them.",
            "type": "boolean"
          },
          "has_projects": {
            "default": true,
            "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
            "type": "boolean"
          },
          "has_wiki": {
            "default": true,
            "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
            "type": "boolean"
          },
          "homepage": {
            "description": "A URL with more information about the repository.",
            "type": "string"
          },
          "is_template": {
            "default": false,
            "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
            "type": "boolean"
          },
          "license_template": {
            "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\".",
            "type": "string"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string"
          },
          "private": {
            "default": false,
            "description": "Whether the repository is private.",
            "type": "boolean"
          },
          "team_id": {
            "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.",
            "type": "integer"
          },
          "visibility": {
            "description": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see \"[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)\" in the GitHub Help documentation.  \nThe `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header.",
            "enum": [
              "public",
              "private",
              "visibility",
              "internal"
            ],
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      }
    },
    "required": [
      "org",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://HOSTNAME/api/v3/orgs/{org}/repos"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Repository"
        },
        "A git repository",
        "**Key properties:**",
        {
          "$ul": [
            "**allow_forking**: Whether to allow forking this repo",
            "**allow_merge_commit**: Whether to allow merge commits for pull requests. (default: true)",
            "**allow_rebase_merge**: Whether to allow rebase merges for pull requests. (default: true)",
            "**allow_squash_merge**: Whether to allow squash merges for pull requests. (default: true)",
            "**anonymous_access_enabled**",
            "**archive_url**",
            "**archived**: Whether the repository is archived. (default: false)",
            "**assignees_url**",
            "**blobs_url**",
            "**branches_url**",
            "**clone_url**",
            "**collaborators_url**",
            "**comments_url**",
            "**commits_url**",
            "**compare_url**",
            "**contents_url**",
            "**contributors_url**",
            "**created_at**",
            "**default_branch**: The default branch of the repository.",
            "**deployments_url**",
            "**description**",
            "**disabled**: Returns whether or not this repository disabled.",
            "**downloads_url**",
            "**events_url**",
            "**fork**",
            "**forks**",
            "**forks_count**",
            "**forks_url**",
            "**full_name**",
            "**git_commits_url**",
            "**git_refs_url**",
            "**git_tags_url**",
            "**git_url**",
            "**has_downloads**: Whether downloads are enabled. (default: true)",
            "**has_issues**: Whether issues are enabled. (default: true)",
            "**has_pages**",
            "**has_projects**: Whether projects are enabled. (default: true)",
            "**has_wiki**: Whether the wiki is enabled. (default: true)",
            "**homepage**",
            "**hooks_url**",
            "**html_url**",
            "**id**: Unique identifier of the repository",
            "**is_template**: Whether this repository acts as a template that can be used to generate new repositories. (default: false)",
            "**issue_comment_url**",
            "**issue_events_url**",
            "**issues_url**",
            "**keys_url**",
            "**labels_url**",
            "**language**",
            "**languages_url**",
            [
              "**license**: License Simple",
              {
                "$ul": [
                  "**html_url**",
                  "**key**",
                  "**name**",
                  "**node_id**",
                  "**spdx_id**",
                  "**url**"
                ]
              }
            ],
            "**master_branch**",
            "**merges_url**",
            "**milestones_url**",
            "**mirror_url**",
            "**name**: The name of the repository.",
            "**network_count**",
            "**node_id**",
            "**notifications_url**",
            "**open_issues**",
            "**open_issues_count**",
            [
              "**organization**: Simple User",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            [
              "**owner**: Simple User",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            [
              "**permissions**",
              {
                "$ul": [
                  "**admin**",
                  "**maintain**",
                  "**pull**",
                  "**push**",
                  "**triage**"
                ]
              }
            ],
            "**private**: Whether the repository is private or public. (default: false)",
            "**pulls_url**",
            "**pushed_at**",
            "**releases_url**",
            "**size**",
            "**ssh_url**",
            "**stargazers_count**",
            "**stargazers_url**",
            "**starred_at**",
            "**statuses_url**",
            "**subscribers_count**",
            "**subscribers_url**",
            "**subscription_url**",
            "**svn_url**",
            "**tags_url**",
            "**teams_url**",
            [
              "**template_repository**",
              {
                "$ul": [
                  "**allow_merge_commit**",
                  "**allow_rebase_merge**",
                  "**allow_squash_merge**",
                  "**anonymous_access_enabled**",
                  "**archive_url**",
                  "**archived**",
                  "**assignees_url**",
                  "**blobs_url**",
                  "**branches_url**",
                  "**clone_url**",
                  "**collaborators_url**",
                  "**comments_url**",
                  "**commits_url**",
                  "**compare_url**",
                  "**contents_url**",
                  "**contributors_url**",
                  "**created_at**",
                  "**default_branch**",
                  "**deployments_url**",
                  "**description**",
                  "**disabled**",
                  "**downloads_url**",
                  "**events_url**",
                  "**fork**",
                  "**forks_count**",
                  "**forks_url**",
                  "**full_name**",
                  "**git_commits_url**",
                  "**git_refs_url**",
                  "**git_tags_url**",
                  "**git_url**",
                  "**has_downloads**",
                  "**has_issues**",
                  "**has_pages**",
                  "**has_projects**",
                  "**has_wiki**",
                  "**homepage**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**",
                  "**is_template**",
                  "**issue_comment_url**",
                  "**issue_events_url**",
                  "**issues_url**",
                  "**keys_url**",
                  "**labels_url**",
                  "**language**",
                  "**languages_url**",
                  "**merges_url**",
                  "**milestones_url**",
                  "**mirror_url**",
                  "**name**",
                  "**network_count**",
                  "**node_id**",
                  "**notifications_url**",
                  "**open_issues_count**",
                  [
                    "**owner**",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  [
                    "**permissions**",
                    {
                      "$ul": [
                        "**admin**",
                        "**maintain**",
                        "**pull**",
                        "**push**",
                        "**triage**"
                      ]
                    }
                  ],
                  "**private**",
                  "**pulls_url**",
                  "**pushed_at**",
                  "**releases_url**",
                  "**size**",
                  "**ssh_url**",
                  "**stargazers_count**",
                  "**stargazers_url**",
                  "**statuses_url**",
                  "**subscribers_count**",
                  "**subscribers_url**",
                  "**subscription_url**",
                  "**svn_url**",
                  "**tags_url**",
                  "**teams_url**",
                  "**topics**",
                  "**trees_url**",
                  "**updated_at**",
                  "**url**",
                  "**visibility**",
                  "**watchers_count**"
                ]
              }
            ],
            "**topics**",
            "**trees_url**",
            "**updated_at**",
            "**url**",
            "**visibility**: The repository visibility: public, private, or internal. (default: public)",
            "**watchers**",
            "**watchers_count**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Validation Error"
        },
        "Validation Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**errors**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
