{
  "name": "codespaces_create-with-repo-for-authenticated-user",
  "description": "Creates a codespace owned by the authenticated user in the specified repository.\n\nYou must authenticate using an access token with the `codespace` scope to use this endpoint.\n\nGitHub Apps must have write access to the `codespaces` repository permission to use this endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "repo": {
        "type": "string",
        "description": "The name of the repository. The name is not case sensitive."
      },
      "body": {
        "nullable": true,
        "properties": {
          "client_ip": {
            "description": "IP for location auto-detection when proxying a request",
            "type": "string"
          },
          "devcontainer_path": {
            "description": "Path to devcontainer.json config to use for this codespace",
            "type": "string"
          },
          "display_name": {
            "description": "Display name for this codespace",
            "type": "string"
          },
          "idle_timeout_minutes": {
            "description": "Time in minutes before codespace stops from inactivity",
            "type": "integer"
          },
          "location": {
            "description": "Location for this codespace. Assigned by IP if not provided",
            "type": "string"
          },
          "machine": {
            "description": "Machine type to use for this codespace",
            "type": "string"
          },
          "multi_repo_permissions_opt_out": {
            "description": "Whether to authorize requested permissions from devcontainer.json",
            "type": "boolean"
          },
          "ref": {
            "description": "Git ref (typically a branch name) for this codespace",
            "type": "string"
          },
          "retention_period_minutes": {
            "description": "Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).",
            "type": "integer"
          },
          "working_directory": {
            "description": "Working directory for this codespace",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "owner",
      "repo",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://github.com//repos/{owner}/{repo}/codespaces"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Codespace"
        },
        "A codespace.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**billable_owner**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**created_at**",
            "**devcontainer_path**: Path to devcontainer.json from repo root used to create Codespace.",
            "**display_name**: Display name for this codespace.",
            "**environment_id**: UUID identifying this codespace's environment.",
            [
              "**git_status**: Details about the codespace's git repository.",
              {
                "$ul": [
                  "**ahead**: The number of commits the local repository is ahead of the remote.",
                  "**behind**: The number of commits the local repository is behind the remote.",
                  "**has_uncommitted_changes**: Whether the local repository has uncommitted changes.",
                  "**has_unpushed_changes**: Whether the local repository has unpushed changes.",
                  "**ref**: The current branch (or SHA if in detached HEAD state) of the local repository."
                ]
              }
            ],
            "**id**",
            "**idle_timeout_minutes**: The number of minutes of inactivity after which this codespace will be automatically stopped.",
            "**idle_timeout_notice**: Text to show user when codespace idle timeout minutes has been overriden by an organization policy",
            "**last_known_stop_notice**: The text to display to a user when a codespace has been stopped for a potentially actionable reason.",
            "**last_used_at**: Last known time this codespace was started.",
            "**location**: The Azure region where this codespace is located.",
            [
              "**machine**: A description of the machine powering a codespace.",
              {
                "$ul": [
                  "**cpus**: How many cores are available to the codespace.",
                  "**display_name**: The display name of the machine includes cores, memory, and storage.",
                  "**memory_in_bytes**: How much memory is available to the codespace.",
                  "**name**: The name of the machine.",
                  "**operating_system**: The operating system of the machine.",
                  "**prebuild_availability**: Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.",
                  "**storage_in_bytes**: How much storage is available to the codespace."
                ]
              }
            ],
            "**machines_url**: API URL to access available alternate machine types for this codespace.",
            "**name**: Automatically generated name of this codespace.",
            [
              "**owner**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**pending_operation**: Whether or not a codespace has a pending async operation. This would mean that the codespace is temporarily unavailable. The only thing that you can do with a codespace in this state is delete it.",
            "**pending_operation_disabled_reason**: Text to show user when codespace is disabled by a pending operation",
            "**prebuild**: Whether the codespace was created from a prebuild.",
            "**publish_url**: API URL to publish this codespace to a new repository.",
            "**pulls_url**: API URL for the Pull Request associated with this codespace, if any.",
            "**recent_folders**",
            [
              "**repository**: Minimal Repository",
              {
                "$ul": [
                  "**allow_forking**",
                  "**archive_url**",
                  "**archived**",
                  "**assignees_url**",
                  "**blobs_url**",
                  "**branches_url**",
                  "**clone_url**",
                  [
                    "**code_of_conduct**: Code Of Conduct",
                    {
                      "$ul": [
                        "**body**",
                        "**html_url**",
                        "**key**",
                        "**name**",
                        "**url**"
                      ]
                    }
                  ],
                  "**collaborators_url**",
                  "**comments_url**",
                  "**commits_url**",
                  "**compare_url**",
                  "**contents_url**",
                  "**contributors_url**",
                  "**created_at**",
                  "**default_branch**",
                  "**delete_branch_on_merge**",
                  "**deployments_url**",
                  "**description**",
                  "**disabled**",
                  "**downloads_url**",
                  "**events_url**",
                  "**fork**",
                  "**forks**",
                  "**forks_count**",
                  "**forks_url**",
                  "**full_name**",
                  "**git_commits_url**",
                  "**git_refs_url**",
                  "**git_tags_url**",
                  "**git_url**",
                  "**has_discussions**",
                  "**has_downloads**",
                  "**has_issues**",
                  "**has_pages**",
                  "**has_projects**",
                  "**has_wiki**",
                  "**homepage**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**",
                  "**is_template**",
                  "**issue_comment_url**",
                  "**issue_events_url**",
                  "**issues_url**",
                  "**keys_url**",
                  "**labels_url**",
                  "**language**",
                  "**languages_url**",
                  [
                    "**license**",
                    {
                      "$ul": [
                        "**key**",
                        "**name**",
                        "**node_id**",
                        "**spdx_id**",
                        "**url**"
                      ]
                    }
                  ],
                  "**merges_url**",
                  "**milestones_url**",
                  "**mirror_url**",
                  "**name**",
                  "**network_count**",
                  "**node_id**",
                  "**notifications_url**",
                  "**open_issues**",
                  "**open_issues_count**",
                  [
                    "**owner**: A GitHub user.",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  [
                    "**permissions**",
                    {
                      "$ul": [
                        "**admin**",
                        "**maintain**",
                        "**pull**",
                        "**push**",
                        "**triage**"
                      ]
                    }
                  ],
                  "**private**",
                  "**pulls_url**",
                  "**pushed_at**",
                  "**releases_url**",
                  "**role_name**",
                  [
                    "**security_and_analysis**",
                    {
                      "$ul": [
                        [
                          "**advanced_security**",
                          {
                            "$ul": [
                              "**status**"
                            ]
                          }
                        ],
                        [
                          "**secret_scanning**",
                          {
                            "$ul": [
                              "**status**"
                            ]
                          }
                        ],
                        [
                          "**secret_scanning_push_protection**",
                          {
                            "$ul": [
                              "**status**"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**size**: The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                  "**ssh_url**",
                  "**stargazers_count**",
                  "**stargazers_url**",
                  "**statuses_url**",
                  "**subscribers_count**",
                  "**subscribers_url**",
                  "**subscription_url**",
                  "**svn_url**",
                  "**tags_url**",
                  "**teams_url**",
                  "**temp_clone_token**",
                  "**topics**",
                  "**trees_url**",
                  "**updated_at**",
                  "**url**",
                  "**visibility**",
                  "**watchers**",
                  "**watchers_count**",
                  "**web_commit_signoff_required**"
                ]
              }
            ],
            "**retention_expires_at**: When a codespace will be auto-deleted based on the \"retention_period_minutes\" and \"last_used_at\"",
            "**retention_period_minutes**: Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).",
            [
              "**runtime_constraints**",
              {
                "$ul": [
                  "**allowed_port_privacy_settings**: The privacy settings a user can select from when forwarding a port."
                ]
              }
            ],
            "**start_url**: API URL to start this codespace.",
            "**state**: State of this codespace.",
            "**stop_url**: API URL to stop this codespace.",
            "**updated_at**",
            "**url**: API URL for this codespace.",
            "**web_url**: URL to access this codespace on the web."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "202": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Codespace"
        },
        "A codespace.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**billable_owner**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**created_at**",
            "**devcontainer_path**: Path to devcontainer.json from repo root used to create Codespace.",
            "**display_name**: Display name for this codespace.",
            "**environment_id**: UUID identifying this codespace's environment.",
            [
              "**git_status**: Details about the codespace's git repository.",
              {
                "$ul": [
                  "**ahead**: The number of commits the local repository is ahead of the remote.",
                  "**behind**: The number of commits the local repository is behind the remote.",
                  "**has_uncommitted_changes**: Whether the local repository has uncommitted changes.",
                  "**has_unpushed_changes**: Whether the local repository has unpushed changes.",
                  "**ref**: The current branch (or SHA if in detached HEAD state) of the local repository."
                ]
              }
            ],
            "**id**",
            "**idle_timeout_minutes**: The number of minutes of inactivity after which this codespace will be automatically stopped.",
            "**idle_timeout_notice**: Text to show user when codespace idle timeout minutes has been overriden by an organization policy",
            "**last_known_stop_notice**: The text to display to a user when a codespace has been stopped for a potentially actionable reason.",
            "**last_used_at**: Last known time this codespace was started.",
            "**location**: The Azure region where this codespace is located.",
            [
              "**machine**: A description of the machine powering a codespace.",
              {
                "$ul": [
                  "**cpus**: How many cores are available to the codespace.",
                  "**display_name**: The display name of the machine includes cores, memory, and storage.",
                  "**memory_in_bytes**: How much memory is available to the codespace.",
                  "**name**: The name of the machine.",
                  "**operating_system**: The operating system of the machine.",
                  "**prebuild_availability**: Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.",
                  "**storage_in_bytes**: How much storage is available to the codespace."
                ]
              }
            ],
            "**machines_url**: API URL to access available alternate machine types for this codespace.",
            "**name**: Automatically generated name of this codespace.",
            [
              "**owner**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**pending_operation**: Whether or not a codespace has a pending async operation. This would mean that the codespace is temporarily unavailable. The only thing that you can do with a codespace in this state is delete it.",
            "**pending_operation_disabled_reason**: Text to show user when codespace is disabled by a pending operation",
            "**prebuild**: Whether the codespace was created from a prebuild.",
            "**publish_url**: API URL to publish this codespace to a new repository.",
            "**pulls_url**: API URL for the Pull Request associated with this codespace, if any.",
            "**recent_folders**",
            [
              "**repository**: Minimal Repository",
              {
                "$ul": [
                  "**allow_forking**",
                  "**archive_url**",
                  "**archived**",
                  "**assignees_url**",
                  "**blobs_url**",
                  "**branches_url**",
                  "**clone_url**",
                  [
                    "**code_of_conduct**: Code Of Conduct",
                    {
                      "$ul": [
                        "**body**",
                        "**html_url**",
                        "**key**",
                        "**name**",
                        "**url**"
                      ]
                    }
                  ],
                  "**collaborators_url**",
                  "**comments_url**",
                  "**commits_url**",
                  "**compare_url**",
                  "**contents_url**",
                  "**contributors_url**",
                  "**created_at**",
                  "**default_branch**",
                  "**delete_branch_on_merge**",
                  "**deployments_url**",
                  "**description**",
                  "**disabled**",
                  "**downloads_url**",
                  "**events_url**",
                  "**fork**",
                  "**forks**",
                  "**forks_count**",
                  "**forks_url**",
                  "**full_name**",
                  "**git_commits_url**",
                  "**git_refs_url**",
                  "**git_tags_url**",
                  "**git_url**",
                  "**has_discussions**",
                  "**has_downloads**",
                  "**has_issues**",
                  "**has_pages**",
                  "**has_projects**",
                  "**has_wiki**",
                  "**homepage**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**",
                  "**is_template**",
                  "**issue_comment_url**",
                  "**issue_events_url**",
                  "**issues_url**",
                  "**keys_url**",
                  "**labels_url**",
                  "**language**",
                  "**languages_url**",
                  [
                    "**license**",
                    {
                      "$ul": [
                        "**key**",
                        "**name**",
                        "**node_id**",
                        "**spdx_id**",
                        "**url**"
                      ]
                    }
                  ],
                  "**merges_url**",
                  "**milestones_url**",
                  "**mirror_url**",
                  "**name**",
                  "**network_count**",
                  "**node_id**",
                  "**notifications_url**",
                  "**open_issues**",
                  "**open_issues_count**",
                  [
                    "**owner**: A GitHub user.",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  [
                    "**permissions**",
                    {
                      "$ul": [
                        "**admin**",
                        "**maintain**",
                        "**pull**",
                        "**push**",
                        "**triage**"
                      ]
                    }
                  ],
                  "**private**",
                  "**pulls_url**",
                  "**pushed_at**",
                  "**releases_url**",
                  "**role_name**",
                  [
                    "**security_and_analysis**",
                    {
                      "$ul": [
                        [
                          "**advanced_security**",
                          {
                            "$ul": [
                              "**status**"
                            ]
                          }
                        ],
                        [
                          "**secret_scanning**",
                          {
                            "$ul": [
                              "**status**"
                            ]
                          }
                        ],
                        [
                          "**secret_scanning_push_protection**",
                          {
                            "$ul": [
                              "**status**"
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  "**size**: The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                  "**ssh_url**",
                  "**stargazers_count**",
                  "**stargazers_url**",
                  "**statuses_url**",
                  "**subscribers_count**",
                  "**subscribers_url**",
                  "**subscription_url**",
                  "**svn_url**",
                  "**tags_url**",
                  "**teams_url**",
                  "**temp_clone_token**",
                  "**topics**",
                  "**trees_url**",
                  "**updated_at**",
                  "**url**",
                  "**visibility**",
                  "**watchers**",
                  "**watchers_count**",
                  "**web_commit_signoff_required**"
                ]
              }
            ],
            "**retention_expires_at**: When a codespace will be auto-deleted based on the \"retention_period_minutes\" and \"last_used_at\"",
            "**retention_period_minutes**: Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).",
            [
              "**runtime_constraints**",
              {
                "$ul": [
                  "**allowed_port_privacy_settings**: The privacy settings a user can select from when forwarding a port."
                ]
              }
            ],
            "**start_url**: API URL to start this codespace.",
            "**state**: State of this codespace.",
            "**stop_url**: API URL to stop this codespace.",
            "**updated_at**",
            "**url**: API URL for this codespace.",
            "**web_url**: URL to access this codespace on the web."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "503": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            "**documentation_url**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
