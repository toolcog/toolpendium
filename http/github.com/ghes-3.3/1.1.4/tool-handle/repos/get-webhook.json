{
  "name": "repos_get-webhook",
  "description": "Returns a webhook configured in a repository. To get only the webhook `config` properties, see \"[Get a webhook configuration for a repository](/rest/reference/repos#get-a-webhook-configuration-for-a-repository).\"",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "repo": {
        "type": "string",
        "description": "The name of the repository. The name is not case sensitive."
      },
      "hook_id": {
        "type": "integer",
        "description": "The unique identifier of the hook."
      }
    },
    "required": [
      "owner",
      "repo",
      "hook_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://github.com//repos/{owner}/{repo}/hooks/{hook_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Webhook"
        },
        "Webhooks for repositories.",
        "**Key properties:**",
        {
          "$ul": [
            "**active**: Determines whether the hook is actually triggered on pushes.",
            [
              "**config**",
              {
                "$ul": [
                  "**content_type**: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                  "**digest**",
                  "**email**",
                  "**insecure_ssl**",
                  "**password**",
                  "**room**",
                  "**secret**: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.3/webhooks/event-payloads/#delivery-headers).",
                  "**subdomain**",
                  "**token**",
                  "**url**: The URL to which the payloads will be delivered."
                ]
              }
            ],
            "**created_at**",
            "**deliveries_url**",
            "**events**: Determines what events the hook is triggered for. Default: ['push'].",
            "**id**: Unique identifier of the webhook.",
            [
              "**last_response**",
              {
                "$ul": [
                  "**code**",
                  "**message**",
                  "**status**"
                ]
              }
            ],
            "**name**: The name of a valid service, use 'web' for a webhook.",
            "**ping_url**",
            "**test_url**",
            "**type**",
            "**updated_at**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
