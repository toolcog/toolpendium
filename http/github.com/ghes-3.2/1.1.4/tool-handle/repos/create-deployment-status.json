{
  "name": "repos_create-deployment-status",
  "description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "repo": {
        "type": "string",
        "description": "The name of the repository. The name is not case sensitive."
      },
      "deployment_id": {
        "type": "integer",
        "description": "deployment_id parameter"
      },
      "body": {
        "properties": {
          "auto_inactive": {
            "description": "Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true` \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type.",
            "type": "boolean"
          },
          "description": {
            "default": "",
            "description": "A short description of the status. The maximum description length is 140 characters.",
            "type": "string"
          },
          "environment": {
            "description": "Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`.",
            "enum": [
              "production",
              "staging",
              "qa"
            ],
            "type": "string"
          },
          "environment_url": {
            "default": "",
            "description": "Sets the URL for accessing your environment. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type.",
            "type": "string"
          },
          "log_url": {
            "default": "",
            "description": "The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `\"\"`  \n**Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type.",
            "type": "string"
          },
          "state": {
            "description": "The state of the status. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@3.2/rest/overview/api-previews#enhanced-deployments) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.",
            "enum": [
              "error",
              "failure",
              "inactive",
              "in_progress",
              "queued",
              "pending",
              "success"
            ],
            "type": "string"
          },
          "target_url": {
            "default": "",
            "description": "The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.",
            "type": "string"
          }
        },
        "required": [
          "state"
        ],
        "type": "object"
      }
    },
    "required": [
      "owner",
      "repo",
      "deployment_id",
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://github.com//repos/{owner}/{repo}/deployments/{deployment_id}/statuses"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Deployment Status"
        },
        "The status of a deployment.",
        "**Key properties:**",
        {
          "$ul": [
            "**created_at**",
            [
              "**creator**: Simple User",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**deployment_url**",
            "**description**: A short description of the status. (default: )",
            "**environment**: The environment of the deployment that the status is for. (default: )",
            "**environment_url**: The URL for accessing your environment. (default: )",
            "**id**",
            "**log_url**: The URL to associate with this status. (default: )",
            "**node_id**",
            [
              "**performed_via_github_app**: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
              {
                "$ul": [
                  "**client_id**",
                  "**client_secret**",
                  "**created_at**",
                  "**description**",
                  "**events**: The list of events for the GitHub app",
                  "**external_url**",
                  "**html_url**",
                  "**id**: Unique identifier of the GitHub app",
                  "**installations_count**: The number of installations associated with the GitHub app",
                  "**name**: The name of the GitHub app",
                  "**node_id**",
                  [
                    "**owner**: Simple User",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  "**pem**",
                  [
                    "**permissions**: The set of permissions for the GitHub app",
                    {
                      "$ul": [
                        "**checks**",
                        "**contents**",
                        "**deployments**",
                        "**issues**",
                        "**metadata**"
                      ]
                    }
                  ],
                  "**slug**: The slug name of the GitHub app",
                  "**updated_at**",
                  "**webhook_secret**"
                ]
              }
            ],
            "**repository_url**",
            "**state**: The state of the status.",
            "**target_url**: Deprecated: the URL to associate with this status. (default: )",
            "**updated_at**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Validation Error"
        },
        "Validation Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**errors**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
