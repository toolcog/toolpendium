{
  "name": "issues_list",
  "description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@3.7/rest/reference/pulls#list-pull-requests)\" endpoint.",
  "parameters": {
    "type": "object",
    "properties": {
      "filter": {
        "default": "assigned",
        "enum": [
          "assigned",
          "created",
          "mentioned",
          "subscribed",
          "repos",
          "all"
        ],
        "type": "string",
        "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation."
      },
      "state": {
        "default": "open",
        "enum": [
          "open",
          "closed",
          "all"
        ],
        "type": "string",
        "description": "Indicates the state of the issues to return."
      },
      "labels": {
        "type": "string",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`"
      },
      "sort": {
        "default": "created",
        "enum": [
          "created",
          "updated",
          "comments"
        ],
        "type": "string",
        "description": "What to sort results by."
      },
      "direction": {
        "default": "desc",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string",
        "description": "The direction to sort the results by."
      },
      "since": {
        "format": "date-time",
        "type": "string",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
      },
      "collab": {
        "type": "boolean"
      },
      "orgs": {
        "type": "boolean"
      },
      "owned": {
        "type": "boolean"
      },
      "pulls": {
        "type": "boolean"
      },
      "per_page": {
        "default": 30,
        "type": "integer",
        "description": "The number of results per page (max 100)."
      },
      "page": {
        "default": 1,
        "type": "integer",
        "description": "Page number of the results to fetch."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://github.com//issues{?filter,state,labels,sort,direction,since,collab,orgs,owned,pulls,per_page,page}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Issue list"
        },
        "Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.",
        "**Key properties:**",
        {
          "$ul": [
            "**active_lock_reason**",
            [
              "**assignee**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**assignees**",
            "**author_association**: How the author is associated with the repository.",
            "**body**: Contents of the issue",
            "**body_html**",
            "**body_text**",
            "**closed_at**",
            [
              "**closed_by**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ],
            "**comments**",
            "**comments_url**",
            "**created_at**",
            "**draft**",
            "**events_url**",
            "**html_url**",
            "**id**",
            "**labels**: Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
            "**labels_url**",
            "**locked**",
            [
              "**milestone**: A collection of related issues and pull requests.",
              {
                "$ul": [
                  "**closed_at**",
                  "**closed_issues**",
                  "**created_at**",
                  [
                    "**creator**: A GitHub user.",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  "**description**",
                  "**due_on**",
                  "**html_url**",
                  "**id**",
                  "**labels_url**",
                  "**node_id**",
                  "**number**: The number of the milestone.",
                  "**open_issues**",
                  "**state**: The state of the milestone. (default: open)",
                  "**title**: The title of the milestone.",
                  "**updated_at**",
                  "**url**"
                ]
              }
            ],
            "**node_id**",
            "**number**: Number uniquely identifying the issue within its repository",
            [
              "**performed_via_github_app**: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
              {
                "$ul": [
                  "**client_id**",
                  "**client_secret**",
                  "**created_at**",
                  "**description**",
                  "**events**: The list of events for the GitHub app",
                  "**external_url**",
                  "**html_url**",
                  "**id**: Unique identifier of the GitHub app",
                  "**installations_count**: The number of installations associated with the GitHub app",
                  "**name**: The name of the GitHub app",
                  "**node_id**",
                  [
                    "**owner**: A GitHub user.",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  "**pem**",
                  [
                    "**permissions**: The set of permissions for the GitHub app",
                    {
                      "$ul": [
                        "**checks**",
                        "**contents**",
                        "**deployments**",
                        "**issues**",
                        "**metadata**"
                      ]
                    }
                  ],
                  "**slug**: The slug name of the GitHub app",
                  "**updated_at**",
                  "**webhook_secret**"
                ]
              }
            ],
            [
              "**pull_request**",
              {
                "$ul": [
                  "**diff_url**",
                  "**html_url**",
                  "**merged_at**",
                  "**patch_url**",
                  "**url**"
                ]
              }
            ],
            [
              "**reactions**",
              {
                "$ul": [
                  "**+1**",
                  "**-1**",
                  "**confused**",
                  "**eyes**",
                  "**heart**",
                  "**hooray**",
                  "**laugh**",
                  "**rocket**",
                  "**total_count**",
                  "**url**"
                ]
              }
            ],
            [
              "**repository**: A repository on GitHub.",
              {
                "$ul": [
                  "**allow_auto_merge**: Whether to allow Auto-merge to be used on pull requests. (default: false)",
                  "**allow_forking**: Whether to allow forking this repo",
                  "**allow_merge_commit**: Whether to allow merge commits for pull requests. (default: true)",
                  "**allow_rebase_merge**: Whether to allow rebase merges for pull requests. (default: true)",
                  "**allow_squash_merge**: Whether to allow squash merges for pull requests. (default: true)",
                  "**allow_update_branch**: Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging. (default: false)",
                  "**anonymous_access_enabled**: Whether anonymous git access is enabled for this repository",
                  "**archive_url**",
                  "**archived**: Whether the repository is archived. (default: false)",
                  "**assignees_url**",
                  "**blobs_url**",
                  "**branches_url**",
                  "**clone_url**",
                  "**collaborators_url**",
                  "**comments_url**",
                  "**commits_url**",
                  "**compare_url**",
                  "**contents_url**",
                  "**contributors_url**",
                  "**created_at**",
                  "**default_branch**: The default branch of the repository.",
                  "**delete_branch_on_merge**: Whether to delete head branches when pull requests are merged (default: false)",
                  "**deployments_url**",
                  "**description**",
                  "**disabled**: Returns whether or not this repository disabled.",
                  "**downloads_url**",
                  "**events_url**",
                  "**fork**",
                  "**forks**",
                  "**forks_count**",
                  "**forks_url**",
                  "**full_name**",
                  "**git_commits_url**",
                  "**git_refs_url**",
                  "**git_tags_url**",
                  "**git_url**",
                  "**has_discussions**: Whether discussions are enabled. (default: false)",
                  "**has_downloads**: Whether downloads are enabled. (default: true)",
                  "**has_issues**: Whether issues are enabled. (default: true)",
                  "**has_pages**",
                  "**has_projects**: Whether projects are enabled. (default: true)",
                  "**has_wiki**: Whether the wiki is enabled. (default: true)",
                  "**homepage**",
                  "**hooks_url**",
                  "**html_url**",
                  "**id**: Unique identifier of the repository",
                  "**is_template**: Whether this repository acts as a template that can be used to generate new repositories. (default: false)",
                  "**issue_comment_url**",
                  "**issue_events_url**",
                  "**issues_url**",
                  "**keys_url**",
                  "**labels_url**",
                  "**language**",
                  "**languages_url**",
                  [
                    "**license**: License Simple",
                    {
                      "$ul": [
                        "**html_url**",
                        "**key**",
                        "**name**",
                        "**node_id**",
                        "**spdx_id**",
                        "**url**"
                      ]
                    }
                  ],
                  "**master_branch**",
                  "**merge_commit_message**: The default value for a merge commit message.",
                  "**merge_commit_title**: The default value for a merge commit title.",
                  "**merges_url**",
                  "**milestones_url**",
                  "**mirror_url**",
                  "**name**: The name of the repository.",
                  "**network_count**",
                  "**node_id**",
                  "**notifications_url**",
                  "**open_issues**",
                  "**open_issues_count**",
                  [
                    "**organization**: A GitHub user.",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  [
                    "**owner**: A GitHub user.",
                    {
                      "$ul": [
                        "**avatar_url**",
                        "**email**",
                        "**events_url**",
                        "**followers_url**",
                        "**following_url**",
                        "**gists_url**",
                        "**gravatar_id**",
                        "**html_url**",
                        "**id**",
                        "**login**",
                        "**name**",
                        "**node_id**",
                        "**organizations_url**",
                        "**received_events_url**",
                        "**repos_url**",
                        "**site_admin**",
                        "**starred_at**",
                        "**starred_url**",
                        "**subscriptions_url**",
                        "**type**",
                        "**url**"
                      ]
                    }
                  ],
                  [
                    "**permissions**",
                    {
                      "$ul": [
                        "**admin**",
                        "**maintain**",
                        "**pull**",
                        "**push**",
                        "**triage**"
                      ]
                    }
                  ],
                  "**private**: Whether the repository is private or public. (default: false)",
                  "**pulls_url**",
                  "**pushed_at**",
                  "**releases_url**",
                  "**size**: The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                  "**squash_merge_commit_message**: The default value for a squash merge commit message:",
                  "**squash_merge_commit_title**: The default value for a squash merge commit title:",
                  "**ssh_url**",
                  "**stargazers_count**",
                  "**stargazers_url**",
                  "**starred_at**",
                  "**statuses_url**",
                  "**subscribers_count**",
                  "**subscribers_url**",
                  "**subscription_url**",
                  "**svn_url**",
                  "**tags_url**",
                  "**teams_url**",
                  "**temp_clone_token**",
                  [
                    "**template_repository**",
                    {
                      "$ul": [
                        "**allow_auto_merge**",
                        "**allow_merge_commit**",
                        "**allow_rebase_merge**",
                        "**allow_squash_merge**",
                        "**allow_update_branch**",
                        "**archive_url**",
                        "**archived**",
                        "**assignees_url**",
                        "**blobs_url**",
                        "**branches_url**",
                        "**clone_url**",
                        "**collaborators_url**",
                        "**comments_url**",
                        "**commits_url**",
                        "**compare_url**",
                        "**contents_url**",
                        "**contributors_url**",
                        "**created_at**",
                        "**default_branch**",
                        "**delete_branch_on_merge**",
                        "**deployments_url**",
                        "**description**",
                        "**disabled**",
                        "**downloads_url**",
                        "**events_url**",
                        "**fork**",
                        "**forks_count**",
                        "**forks_url**",
                        "**full_name**",
                        "**git_commits_url**",
                        "**git_refs_url**",
                        "**git_tags_url**",
                        "**git_url**",
                        "**has_downloads**",
                        "**has_issues**",
                        "**has_pages**",
                        "**has_projects**",
                        "**has_wiki**",
                        "**homepage**",
                        "**hooks_url**",
                        "**html_url**",
                        "**id**",
                        "**is_template**",
                        "**issue_comment_url**",
                        "**issue_events_url**",
                        "**issues_url**",
                        "**keys_url**",
                        "**labels_url**",
                        "**language**",
                        "**languages_url**",
                        "**merge_commit_message**: The default value for a merge commit message.",
                        "**merge_commit_title**: The default value for a merge commit title.",
                        "**merges_url**",
                        "**milestones_url**",
                        "**mirror_url**",
                        "**name**",
                        "**network_count**",
                        "**node_id**",
                        "**notifications_url**",
                        "**open_issues_count**",
                        [
                          "**owner**",
                          {
                            "$ul": [
                              "**avatar_url**",
                              "**events_url**",
                              "**followers_url**",
                              "**following_url**",
                              "**gists_url**",
                              "**gravatar_id**",
                              "**html_url**",
                              "**id**",
                              "**login**",
                              "**node_id**",
                              "**organizations_url**",
                              "**received_events_url**",
                              "**repos_url**",
                              "**site_admin**",
                              "**starred_url**",
                              "**subscriptions_url**",
                              "**type**",
                              "**url**"
                            ]
                          }
                        ],
                        [
                          "**permissions**",
                          {
                            "$ul": [
                              "**admin**",
                              "**maintain**",
                              "**pull**",
                              "**push**",
                              "**triage**"
                            ]
                          }
                        ],
                        "**private**",
                        "**pulls_url**",
                        "**pushed_at**",
                        "**releases_url**",
                        "**size**",
                        "**squash_merge_commit_message**: The default value for a squash merge commit message:",
                        "**squash_merge_commit_title**: The default value for a squash merge commit title:",
                        "**ssh_url**",
                        "**stargazers_count**",
                        "**stargazers_url**",
                        "**statuses_url**",
                        "**subscribers_count**",
                        "**subscribers_url**",
                        "**subscription_url**",
                        "**svn_url**",
                        "**tags_url**",
                        "**teams_url**",
                        "**temp_clone_token**",
                        "**topics**",
                        "**trees_url**",
                        "**updated_at**",
                        "**url**",
                        "**use_squash_pr_title_as_default**",
                        "**visibility**",
                        "**watchers_count**"
                      ]
                    }
                  ],
                  "**topics**",
                  "**trees_url**",
                  "**updated_at**",
                  "**url**",
                  "**use_squash_pr_title_as_default**: Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead. (default: false)",
                  "**visibility**: The repository visibility: public, private, or internal. (default: public)",
                  "**watchers**",
                  "**watchers_count**",
                  "**web_commit_signoff_required**: Whether to require contributors to sign off on web-based commits (default: false)"
                ]
              }
            ],
            "**repository_url**",
            "**state**: State of the issue; either 'open' or 'closed'",
            "**state_reason**: The reason for the current state",
            "**timeline_url**",
            "**title**: Title of the issue",
            "**updated_at**",
            "**url**: URL for the issue",
            [
              "**user**: A GitHub user.",
              {
                "$ul": [
                  "**avatar_url**",
                  "**email**",
                  "**events_url**",
                  "**followers_url**",
                  "**following_url**",
                  "**gists_url**",
                  "**gravatar_id**",
                  "**html_url**",
                  "**id**",
                  "**login**",
                  "**name**",
                  "**node_id**",
                  "**organizations_url**",
                  "**received_events_url**",
                  "**repos_url**",
                  "**site_admin**",
                  "**starred_at**",
                  "**starred_url**",
                  "**subscriptions_url**",
                  "**type**",
                  "**url**"
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.title"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Basic Error"
        },
        "Basic Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**message**",
            "**status**",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Validation Error"
        },
        "Validation Error",
        "**Key properties:**",
        {
          "$ul": [
            "**documentation_url**",
            "**errors**",
            "**message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
