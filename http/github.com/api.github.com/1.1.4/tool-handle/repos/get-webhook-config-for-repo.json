{
  "name": "repos_get-webhook-config-for-repo",
  "description": "Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use \"[Get a repository webhook](/rest/reference/orgs#get-a-repository-webhook).\"\n\nAccess tokens must have the `read:repo_hook` or `repo` scope, and GitHub Apps must have the `repository_hooks:read` permission.",
  "parameters": {
    "type": "object",
    "properties": {
      "owner": {
        "type": "string",
        "description": "The account owner of the repository. The name is not case sensitive."
      },
      "repo": {
        "type": "string",
        "description": "The name of the repository. The name is not case sensitive."
      },
      "hook_id": {
        "type": "integer",
        "description": "The unique identifier of the hook."
      }
    },
    "required": [
      "owner",
      "repo",
      "hook_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/config"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Webhook Configuration"
        },
        "Configuration object of the webhook",
        "**Key properties:**",
        {
          "$ul": [
            "**content_type**: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
            "**insecure_ssl**",
            "**secret**: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
            "**url**: The URL to which the payloads will be delivered."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
