{
  "name": "Users_Get",
  "description": "No Documentation Found.",
  "parameters": {
    "type": "object",
    "properties": {
      "username": {
        "type": "string",
        "description": "Optional. Search by username. Supports beginning and ending wildcards (*)."
      },
      "email": {
        "type": "string",
        "description": "Optional. Search by email. Supports beginning and ending wildcards (*)."
      },
      "name": {
        "type": "string",
        "description": "Optional. Search by name. Supports beginning and ending wildcards (*)."
      },
      "hasRole": {
        "type": "string",
        "description": "Optional. Return only users having the provided role name."
      },
      "limit": {
        "format": "int32",
        "type": "integer",
        "description": "Optional. The page limit. The default page limit is 10."
      },
      "offset": {
        "format": "int32",
        "type": "integer",
        "description": "Optional. The page offset. The default page offset is 0."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://secure.agco-ats.com/api/v2/Users{?username,email,name,hasRole,limit,offset}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "A response containing a page of results and metadata concerning the results",
        "**Key properties:**",
        {
          "$ul": [
            "**Entities**",
            [
              "**Metadata**: Metadata for the paged response",
              {
                "$ul": [
                  "**Limit**: The number of entities this paged response is limited to.",
                  "**Offset**: The number of entities prior to this page of items.",
                  "**TotalCount**: The total number of entities matching the request."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
