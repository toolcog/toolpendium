{
  "name": "findTexts",
  "description": "Searches for texts sent or received by user. Use \"campaignId=0\" parameter to query for all texts sent through the POST /texts API. See [call states and results](https://developers.callfire.com/results-responses-errors.html)",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "items": {
          "format": "int64",
          "type": "integer"
        },
        "type": "array",
        "description": "List of Text ids to search for, if ids specified other query params ignored"
      },
      "campaignId": {
        "format": "int64",
        "type": "integer",
        "description": "An id of a campaign, queries for texts inside a particular campaign. Specify null to list texts of all campaigns or 0 for a default campaign"
      },
      "batchId": {
        "format": "int64",
        "type": "integer",
        "description": "An Id of a contact batch, queries for texts which are used in the particular contact batch"
      },
      "fromNumber": {
        "type": "string",
        "description": "A phone number in E.164 format (11-digit). Example: 12132000384, 67076"
      },
      "toNumber": {
        "type": "string",
        "description": "A phone number in E.164 format (11-digit). Example: 12132000384, 67076"
      },
      "label": {
        "type": "string",
        "description": "A label of a text message"
      },
      "states": {
        "type": "string",
        "description": "Expected text statuses in comma separated string, available values: READY, SELECTED, CALLBACK, FINISHED, DISABLED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT. See [call states and results](https://developers.callfire.com/results-responses-errors.html)"
      },
      "results": {
        "type": "string",
        "description": "Expected text results in comma separated string, available values: SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED. See [call states and results](https://developers.callfire.com/results-responses-errors.html)"
      },
      "inbound": {
        "type": "boolean",
        "description": "Specify true for inbound or false for outbounds. Do not specify this parameter if you need to get both inbound and outbound texts listed in response"
      },
      "intervalBegin": {
        "format": "int64",
        "type": "integer",
        "description": "Start of the find time interval, formatted in unix time milliseconds. Example: 1473781817000"
      },
      "intervalEnd": {
        "format": "int64",
        "type": "integer",
        "description": "End of the find time interval, formatted in unix time milliseconds. Example: 1473781817000"
      },
      "limit": {
        "default": 10,
        "format": "int32",
        "type": "integer",
        "description": "To set the maximum number of records to return in a paged list response. The default is 100"
      },
      "offset": {
        "default": 0,
        "format": "int32",
        "type": "integer",
        "description": "Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API."
      },
      "fields": {
        "type": "string",
        "description": "Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.callfire.com/v2/texts{?id,campaignId,batchId,fromNumber,toNumber,label,states,results,inbound,intervalBegin,intervalEnd,limit,offset,fields}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents a page with results returned by query operation. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.",
        "**Key properties:**",
        {
          "$ul": [
            "**items**",
            "**limit**: A maximum number of returned items. If items.size() < limit assume no more items",
            "**offset**: An offset from a start of paging source",
            "**totalCount**: Total count of available results. -1 if unknown"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error response containing error info",
        "**Key properties:**",
        {
          "$ul": [
            "**developerMessage**: ~",
            "**helpLink**: ~",
            "**httpStatusCode**: ~",
            "**internalCode**: ~",
            "**message**: ~"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error response containing error info",
        "**Key properties:**",
        {
          "$ul": [
            "**developerMessage**: ~",
            "**helpLink**: ~",
            "**httpStatusCode**: ~",
            "**internalCode**: ~",
            "**message**: ~"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error response containing error info",
        "**Key properties:**",
        {
          "$ul": [
            "**developerMessage**: ~",
            "**helpLink**: ~",
            "**httpStatusCode**: ~",
            "**internalCode**: ~",
            "**message**: ~"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error response containing error info",
        "**Key properties:**",
        {
          "$ul": [
            "**developerMessage**: ~",
            "**helpLink**: ~",
            "**httpStatusCode**: ~",
            "**internalCode**: ~",
            "**message**: ~"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Error response containing error info",
        "**Key properties:**",
        {
          "$ul": [
            "**developerMessage**: ~",
            "**helpLink**: ~",
            "**httpStatusCode**: ~",
            "**internalCode**: ~",
            "**message**: ~"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
