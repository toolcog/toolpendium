{
  "name": "registerUser",
  "description": "Signup has to be enabled and signup approval is not required",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/RegisterUser"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "RegisterUser": {
        "properties": {
          "channel": {
            "description": "channel base information used to create the first channel of the user",
            "properties": {
              "displayName": {
                "type": "string"
              },
              "name": {
                "$ref": "#/$defs/usernameChannel"
              }
            },
            "type": "object"
          },
          "displayName": {
            "description": "editable name of the user, displayed in its representations",
            "maxLength": 120,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "description": "email of the user, used for login or service communications",
            "format": "email",
            "type": "string"
          },
          "password": {
            "$ref": "#/$defs/password"
          },
          "username": {
            "allOf": [
              {
                "$ref": "#/$defs/username"
              }
            ],
            "description": "immutable name of the user, used to find or mention its actor"
          }
        },
        "required": [
          "username",
          "password",
          "email"
        ]
      },
      "usernameChannel": {
        "description": "immutable name of the channel, used to interact with its actor",
        "example": "framasoft_videos",
        "maxLength": 50,
        "minLength": 1,
        "pattern": "/^[a-zA-Z0-9\\\\-_.:]+$/",
        "type": "string"
      },
      "password": {
        "format": "password",
        "maxLength": 255,
        "minLength": 6,
        "type": "string"
      },
      "username": {
        "description": "immutable name of the user, used to find or mention its actor",
        "example": "chocobozzz",
        "maxLength": 50,
        "minLength": 1,
        "pattern": "/^[a-z0-9._]+$/",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://peertube2.cpy.re/api/v1/users/register"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
