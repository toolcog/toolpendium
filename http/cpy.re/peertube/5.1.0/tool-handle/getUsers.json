{
  "name": "getUsers",
  "description": "List users",
  "parameters": {
    "type": "object",
    "properties": {
      "search": {
        "type": "string",
        "description": "Plain text search that will match with user usernames or emails"
      },
      "blocked": {
        "type": "boolean",
        "description": "Filter results down to (un)banned users"
      },
      "start": {
        "minimum": 0,
        "type": "integer",
        "description": "Offset used to paginate results"
      },
      "count": {
        "default": 15,
        "maximum": 100,
        "minimum": 1,
        "type": "integer",
        "description": "Number of items to return"
      },
      "sort": {
        "enum": [
          "-id",
          "-username",
          "-createdAt"
        ],
        "type": "string",
        "description": "Sort users by criteria"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://peertube2.cpy.re/api/v1/users{?search,blocked,start,count,sort}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**account**",
              {
                "$ul": [
                  "**createdAt**",
                  "**followersCount**: number of followers of this actor, as seen by this instance",
                  "**followingCount**: number of actors subscribed to by this actor, as seen by this instance",
                  "**host**: server on which the actor is resident",
                  "**hostRedundancyAllowed**: whether this actor's host allows redundancy of its videos",
                  "**id**",
                  "**name**: immutable name of the actor, used to find or mention it",
                  "**updatedAt**",
                  "**url**",
                  "**description**: text or bio displayed on the account's profile",
                  "**displayName**: editable name of the account, displayed in its representations",
                  "**userId**: object id for the user tied to this account"
                ]
              }
            ],
            "**autoPlayNextVideo**: Automatically start playing the upcoming video after the currently playing video",
            "**autoPlayNextVideoPlaylist**: Automatically start playing the video on the playlist after the currently playing video",
            "**autoPlayVideo**: Automatically start playing the video on the watch page",
            "**blocked**",
            "**blockedReason**",
            "**createdAt**",
            "**email**: The user email",
            "**emailVerified**: Has the user confirmed their email address?",
            "**id**",
            "**lastLoginDate**",
            "**noAccountSetupWarningModal**",
            "**noInstanceConfigWarningModal**",
            "**noWelcomeModal**",
            "**nsfwPolicy**",
            "**p2pEnabled**: Enable P2P in the player",
            "**pluginAuth**: Auth plugin to use to authenticate the user",
            [
              "**role**",
              {
                "$ul": [
                  "**id**: The user role (Admin = `0`, Moderator = `1`, User = `2`)",
                  "**label**"
                ]
              }
            ],
            "**theme**: Theme enabled by this user",
            "**username**: immutable name of the user, used to find or mention its actor",
            "**videoChannels**",
            "**videoQuota**: The user video quota in bytes",
            "**videoQuotaDaily**: The user daily video quota in bytes"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
