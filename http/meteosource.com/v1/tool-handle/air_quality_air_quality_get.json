{
  "name": "air_quality_air_quality_get",
  "description": "## Air quality forecast for a single location\n\n### Location specification\nThe location of the weather data is the only parameter that is required and must be specified. There are two ways to do this:\n1. Specify the GPS coordinates of the location using the parameters `lat` and `lon`.\n2. **OR** specify the name of the place using the parameter `place_id`. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).\n\n### Notes\n* **For a detailed description of variables, please consult ⚠️ <a href=\"https://www.meteosource.com/documentation#description_aq\" target=\"_blank\">description of variables</a> ⚠️ in Documentation or `Schema` of the response (link next to Example value in the Responses section below).**\n* Do **not** make any assumptions about the number and ordering of the variables. New variables and sections may be introduced in the future. Always check the data are present before you try to use them.\n* The response contains an `Expires` header, which defines the point at which the API response will not change for the same request. We highly recommend using this to avoid unnecessary requests and **increase the performance of your app**.\n* Meteosource API supports HTTP compression. To enable it, simply add an `Accept-Encoding: gzip` header to your request.\n* When daylight saving time starts, one hourly record will be missing (typically `2:00:00 AM`). When daylight saving time ends, the hourly forecast will contain two records with duplicate times (typically `2:00:00 AM`).",
  "parameters": {
    "type": "object",
    "properties": {
      "place_id": {
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).",
        "title": "Place Id",
        "type": "string"
      },
      "lat": {
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
        "title": "Lat",
        "type": "string"
      },
      "lon": {
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
        "title": "Lon",
        "type": "string"
      },
      "timezone": {
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\nAlternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
        "title": "Timezone",
        "type": "string"
      },
      "key": {
        "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
        "title": "Key",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/premium/air_quality{?place_id,lat,lon,timezone,key}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "AirQuality_PointData"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**data**",
            "**elevation**: Elevation above sea level in metres (for units 'metric', 'uk', 'ca') or feet (for units 'us')",
            "**lat**: Latitude of the point, always in the format <float><N/S>, for example ``23.5S``",
            "**lon**: Longitude of the point, always in the format <float><E/W>, for example ``23.5W``",
            "**timezone**: Name of the timezone in format like 'Europe/London'. Available only when the place is specified through place ID."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "HTTPValidationError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
