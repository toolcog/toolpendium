{
  "name": "find_places_find_places_get",
  "description": "## Search for places\n\nYou can use this endpoint to obtain `place_id` of the location you want, to be used in `point` endpoint.\nThe response also contains detailed information about the location, such as coordinates, timezone and the country the place belongs to.\n\nUnlike the `/find_place_prefix` endpoint, complete words are required here. You can search for cities,\nmountains, lakes, countries, ZIP codes, etc. The response can contain multiple places, sorted by relevance.\nYou can then identify the one you want by coordinates, country, or the administrative area.",
  "parameters": {
    "type": "object",
    "properties": {
      "text": {
        "description": "Place name or ZIP code",
        "title": "Text",
        "type": "string"
      },
      "language": {
        "allOf": [
          {
            "$ref": "#/$defs/Language"
          }
        ],
        "default": "en",
        "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n"
      },
      "key": {
        "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
        "title": "Key",
        "type": "string"
      }
    },
    "required": [
      "text"
    ],
    "$defs": {
      "Language": {
        "description": "An enumeration.",
        "enum": [
          "cs",
          "en",
          "de",
          "es",
          "fr",
          "pl",
          "pt"
        ],
        "title": "Language",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "/api/v1/premium/find_places{?text,language,key}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Response Find Places Find Places Get"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**adm_area1**: first-level administrative area (a US state, for example) (default: England)",
            "**adm_area2**: second-level administrative area (a US county, for example) (default: Greater London)",
            "**country**: name of the country (default: United Kingdom)",
            "**lat**: Latitude of the point, always in the format \\<float><N/S>, for example ``23.5S`` (default: 23.2N)",
            "**lon**: Longitude of the point, always in format \\<float><E/W>, for example ``23.5W`` (default: 15.3E)",
            "**name**: name of the place (default: London)",
            "**place_id**: unique identifier of the place, which can be used in /point and /map endpoints (default: london)",
            "**timezone**: Timezone of the point in tzinfo format. (default: Europe/London)",
            "**type**: The character of the place. May be one of the following values: (default: settlement)"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "402": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "HTTPValidationError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "429": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeneralRequestError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
