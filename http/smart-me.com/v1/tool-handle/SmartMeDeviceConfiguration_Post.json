{
  "name": "SmartMeDeviceConfiguration_Post",
  "description": "Sets the configuration of a smart-me device. The device needs to be online.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/SmartMeDeviceConfigurationContainer"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "SmartMeDeviceConfigurationContainer": {
        "description": "API Container class for the meter configuration",
        "properties": {
          "DeviceEncryptionKey": {
            "description": "The encryption key used to decrypt messages received from an external meter (used only for the smart-me modules)",
            "type": "string"
          },
          "DevicePinCode": {
            "description": "PIN code to enter on a external meter (e.g. for the FNN meters)",
            "type": "string"
          },
          "DnsUpdateState": {
            "description": "Configuration of the dynamic DNS service. More information: http://wiki.smart-me.com/index.php/Dynamisches_DNS",
            "enum": [
              "NoUpdate",
              "DnsUpdatePublicIp",
              "DnsUpdateInternalIp"
            ],
            "type": "string"
          },
          "EnableModbusTcp": {
            "description": "Enables or disables Modbus TCP (if the meter supports it).",
            "type": "boolean"
          },
          "Id": {
            "description": "The ID of the device",
            "type": "string"
          },
          "InputConfiguration": {
            "description": "The configuration for the intput outputs",
            "items": {
              "$ref": "#/$defs/InputConfigurationContainer"
            },
            "type": "array"
          },
          "OutputConfiguration": {
            "description": "The configuration for the external outputs",
            "items": {
              "$ref": "#/$defs/OutputConfigurationContainer"
            },
            "type": "array"
          },
          "ShowReactiveEnergy": {
            "description": "Shows the reactive energy values (if the meter supports it).",
            "type": "boolean"
          },
          "SwitchConfiguration": {
            "description": "The configuration for the phase switches",
            "items": {
              "$ref": "#/$defs/SwitchConfigurationContainer"
            },
            "type": "array"
          },
          "UploadInterval": {
            "description": "Number of seconds the device will upload the data. For smaller values maybe a professional license is needed.",
            "enum": [
              "UploadInterval_1s",
              "UploadInterval_5s",
              "UploadInterval_10s",
              "UploadInterval_30s",
              "UploadInterval_60s",
              "UploadInterval_5min",
              "UploadInterval_15min",
              "UploadInterval_30min",
              "UploadInterval_60min",
              "UploadInterval_6h",
              "UploadInterval_12h",
              "UploadInterval_24h"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "InputConfigurationContainer": {
        "description": "Configuration for the input of a meter (digital inputs)",
        "properties": {
          "Name": {
            "description": "The Name of the Input",
            "type": "string"
          },
          "Number": {
            "description": "The number of the Input. (1 for Input 1)",
            "format": "int32",
            "type": "integer"
          },
          "OffText": {
            "description": "The visualization text for an OFF action",
            "type": "string"
          },
          "OnText": {
            "description": "The visualization text for an ON action",
            "type": "string"
          },
          "Type": {
            "description": "The Type of the output",
            "enum": [
              "TariffInput",
              "DigitalInput"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "OutputConfigurationContainer": {
        "description": "Configuration for the outputs of a meter (analog/digital outputs)",
        "properties": {
          "DigitalOutputNoConnectionAction": {
            "description": "The Action when the device has lost the connection",
            "enum": [
              "Nothing",
              "TurnOff",
              "TurnOn",
              "SetPwmValue"
            ],
            "type": "string"
          },
          "Name": {
            "description": "The Name of the Output",
            "type": "string"
          },
          "Number": {
            "description": "The number of the Output. (1 for Output 1, 2 for Output 2)",
            "format": "int32",
            "type": "integer"
          },
          "S0PulseValue": {
            "description": "The S0 Pulse Value",
            "enum": [
              "PulseValue1000Kwh",
              "PulseValue10000Kwh"
            ],
            "type": "string"
          },
          "Type": {
            "description": "The Type of the output",
            "enum": [
              "ImpulseOutputActiveEnergy",
              "ImpulseOutputActiveEnergyImport",
              "ImpulseOutputActiveEnergyExport",
              "ImpulseOutputReactiveEnergy",
              "DigitalOutput",
              "AnalogPwmSignalOutput",
              "Disabled"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SwitchConfigurationContainer": {
        "description": "The configuration for a phase switch",
        "properties": {
          "CanSwitchOff": {
            "description": "Flag if the switch can be turned off or is always on.",
            "type": "boolean"
          },
          "Number": {
            "description": "The number of the phase. (e.g. 1 for Phase L1)",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://smart-me.com:443/api/SmartMeDeviceConfiguration"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {}
}
