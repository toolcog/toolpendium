{
  "name": "VirtualBillingMeters_Get",
  "description": "Beta: Gets all Meters available to activate as a Virtual Meter.",
  "parameters": {
    "type": "object"
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://smart-me.com:443/api/VirtualBillingMeters"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Container Class for the Web API",
        "**Key properties:**",
        {
          "$ul": [
            "**ActivePower**: The Actvie Power or current flow rate",
            "**ActivePowerL1**: The Actvie Power Phase L1",
            "**ActivePowerL2**: The Actvie Power Phase L2",
            "**ActivePowerL3**: The Actvie Power Phase L3",
            "**ActivePowerUnit**: The Unit of the Active Power Value",
            "**ActiveTariff**: The Number of the Active Tariff",
            "**AdditionalMeterSerialNumber**: An additional Meter serial number. e.g. the number of a meter a smart-me device is connected to.",
            "**AnalogOutput1**: The analog output number 1 (PWM signal) (0 - 32183)",
            "**AnalogOutput2**: The analog output number 2 (PWM signal) (0 - 32183)",
            "**ChargingStationState**: The state of a pico charging station. (Only available for pico charging stations)",
            "**CounterReading**: The Meter Counter Reading (Total Energy used)",
            "**CounterReadingExport**: The Meter Counter Reading only export",
            "**CounterReadingImport**: The Meter Counter Reading only import",
            "**CounterReadingT1**: The Meter Counter Reading Tariff 1",
            "**CounterReadingT2**: The Meter Counter Reading Tariff 2",
            "**CounterReadingT3**: The Meter Counter Reading Tariff 3",
            "**CounterReadingT4**: The Meter Counter Reading Tariff 4",
            "**CounterReadingUnit**: The Unit of the Counter Reading",
            "**Current**: The Current (in A)",
            "**CurrentL1**: The Current Phase L1 (in A)",
            "**CurrentL2**: The Current Phase L2 (in A)",
            "**CurrentL3**: The Current Phase L3 (in A)",
            "**DeviceEnergyType**: The Energy Type of this device",
            "**DigitalInput1**: The digital input number 1",
            "**DigitalInput2**: The digital input number 2",
            "**DigitalOutput1**: The digital output number 1",
            "**DigitalOutput2**: The digital output number 2",
            "**FamilyType**: The Family Type of the device.",
            "**FlowRate**: The current flow rate (e.g. m3/h)",
            "**Id**: The ID of the device",
            "**MeterSubType**: The sub meter type (e.g. warmwater or coldwater)",
            "**Name**: The Name of the Device",
            "**PowerFactor**: The Power Factor (cos phi). Range: 0 - 1",
            "**PowerFactorL1**: The Power Factor (cos phi) Phase L1. Range: 0 - 1",
            "**PowerFactorL2**: The Power Factor (cos phi) Phase L2. Range: 0 - 1",
            "**PowerFactorL3**: The Power Factor (cos phi) Phase L3. Range: 0 - 1",
            "**Serial**: The Serial number",
            "**SwitchOn**: Flag if the Switch is on on this device.",
            "**SwitchPhaseL1On**: Flag if the Phase L1 is on on this device.",
            "**SwitchPhaseL2On**: Flag if the Phase L2 is on on this device.",
            "**SwitchPhaseL3On**: Flag if the Phase L3 is on on this device.",
            "**Temperature**: The Temperature (in degree celsius)",
            "**ValueDate**: Time of last successful connection the the smart-me Cloud.",
            "**Voltage**: The Voltage (in V)",
            "**VoltageL1**: The Voltage Phase L1 (in V)",
            "**VoltageL2**: The Voltage Phase L2 (in V)",
            "**VoltageL3**: The Voltage Phase L3 (in V)"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
