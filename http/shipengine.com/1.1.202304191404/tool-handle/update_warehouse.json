{
  "name": "update_warehouse",
  "description": "Update Warehouse object information",
  "parameters": {
    "type": "object",
    "properties": {
      "warehouse_id": {
        "$ref": "#/components/schemas/se_id",
        "description": "Warehouse ID"
      },
      "body": {
        "$ref": "#/$defs/update_warehouse_request_body"
      }
    },
    "required": [
      "warehouse_id",
      "body"
    ],
    "$defs": {
      "update_warehouse_request_body": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/$defs/warehouse"
          }
        ],
        "description": "An update warehouse request body",
        "required": [
          "name",
          "origin_address"
        ],
        "title": "update_warehouse_request_body",
        "type": "object"
      },
      "warehouse": {
        "additionalProperties": false,
        "description": "A warehouse",
        "properties": {
          "created_at": {
            "description": "Timestamp that indicates when the warehouse was created",
            "example": "2019-06-25T18:12:35.583Z",
            "format": "date-time",
            "minLength": 1,
            "readOnly": true,
            "type": "string"
          },
          "is_default": {
            "default": false,
            "description": "Designates which single warehouse is the default on the account",
            "nullable": true,
            "type": "boolean"
          },
          "name": {
            "description": "Name of the warehouse",
            "example": "Zero Cool HQ",
            "minLength": 1,
            "type": "string"
          },
          "origin_address": {
            "allOf": [
              {
                "$ref": "#/$defs/address"
              }
            ],
            "description": "The origin address of the warehouse"
          },
          "return_address": {
            "allOf": [
              {
                "$ref": "#/$defs/address"
              }
            ],
            "description": "The return address associated with the warehouse"
          },
          "warehouse_id": {
            "allOf": [
              {
                "$ref": "#/$defs/se_id"
              }
            ],
            "description": "A string that uniquely identifies the warehouse",
            "readOnly": true
          }
        },
        "title": "warehouse",
        "type": "object"
      },
      "address": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/$defs/partial_address"
          }
        ],
        "description": "Any residential or business mailing address, anywhere in the world.\n\n> **Note:** Either `name` or `company_name` must be set. Both may be specified, if relevant.\n",
        "required": [
          "name",
          "phone",
          "address_line1",
          "city_locality",
          "state_province",
          "postal_code",
          "country_code",
          "address_residential_indicator"
        ],
        "title": "address",
        "type": "object"
      },
      "partial_address": {
        "additionalProperties": false,
        "description": "A complete or partial mailing address.",
        "properties": {
          "address_line1": {
            "description": "The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.\n",
            "example": "1999 Bishop Grandin Blvd.",
            "minLength": 1,
            "type": "string"
          },
          "address_line2": {
            "description": "The second line of the street address.  For some addresses, this line may not be needed.\n",
            "example": "Unit 408",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_line3": {
            "description": "The third line of the street address.  For some addresses, this line may not be needed.\n",
            "example": "Building #7",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "address_residential_indicator": {
            "allOf": [
              {
                "$ref": "#/$defs/address_residential_indicator"
              }
            ],
            "default": "unknown",
            "description": "Indicates whether this is a residential address.",
            "example": "no"
          },
          "city_locality": {
            "description": "The name of the city or locality",
            "example": "Winnipeg",
            "minLength": 1,
            "type": "string"
          },
          "company_name": {
            "description": "If this is a business address, then the company name should be specified here.\n",
            "example": "The Home Depot",
            "minLength": 1,
            "nullable": true,
            "type": "string"
          },
          "country_code": {
            "allOf": [
              {
                "$ref": "#/$defs/country_code"
              }
            ],
            "description": "The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n"
          },
          "email": {
            "description": "Email for the address owner.\n",
            "example": "example@example.com",
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.\n",
            "example": "John Doe",
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "description": "The phone number of a contact person at this address.  The format of this phone number varies depending on the country.\n",
            "example": "+1 204-253-9411 ext. 123",
            "minLength": 1,
            "type": "string"
          },
          "postal_code": {
            "allOf": [
              {
                "$ref": "#/$defs/postal_code"
              }
            ]
          },
          "state_province": {
            "description": "The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.\n",
            "example": "Manitoba",
            "minLength": 1,
            "type": "string"
          }
        },
        "title": "partial_address",
        "type": "object"
      },
      "address_residential_indicator": {
        "description": "Indicates whether an address is residential.",
        "enum": [
          "unknown",
          "yes",
          "no"
        ],
        "title": "address_residential_indicator",
        "type": "string"
      },
      "country_code": {
        "description": "A two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)\n",
        "example": "CA",
        "maxLength": 2,
        "minLength": 2,
        "title": "country_code",
        "type": "string"
      },
      "postal_code": {
        "description": "postal code",
        "example": "78756-3717",
        "minLength": 1,
        "title": "postal_code",
        "type": "string"
      },
      "se_id": {
        "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.",
        "example": "se-28529731",
        "maxLength": 25,
        "minLength": 1,
        "pattern": "^se(-[a-z0-9]+)+$",
        "title": "se_id",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "https://api.shipengine.com/v1/warehouses/{warehouse_id}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "204": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
