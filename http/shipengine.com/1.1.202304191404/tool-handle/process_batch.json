{
  "name": "process_batch",
  "description": "Process Batch ID Labels",
  "parameters": {
    "type": "object",
    "properties": {
      "batch_id": {
        "$ref": "#/components/schemas/se_id",
        "description": "Batch ID"
      },
      "body": {
        "$ref": "#/$defs/process_batch_request_body"
      }
    },
    "required": [
      "batch_id",
      "body"
    ],
    "$defs": {
      "process_batch_request_body": {
        "additionalProperties": false,
        "description": "A process batch request body",
        "properties": {
          "display_scheme": {
            "allOf": [
              {
                "$ref": "#/$defs/display_scheme"
              }
            ],
            "default": "label",
            "description": "The display format that the label should be shown in."
          },
          "label_format": {
            "allOf": [
              {
                "$ref": "#/$defs/label_format"
              }
            ],
            "default": "pdf"
          },
          "label_layout": {
            "allOf": [
              {
                "$ref": "#/$defs/label_layout"
              }
            ],
            "default": "4x6",
            "type": "string"
          },
          "ship_date": {
            "allOf": [
              {
                "$ref": "#/$defs/date_time"
              }
            ],
            "description": "The Ship date the batch is being processed for"
          }
        },
        "title": "process_batch_request_body",
        "type": "object"
      },
      "display_scheme": {
        "description": "The display format that the label should be shown in.",
        "enum": [
          "label",
          "qr_code",
          "label_and_qr_code"
        ],
        "title": "display_scheme",
        "type": "string"
      },
      "label_format": {
        "description": "The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.\n\n|Label Format  | Supported Carriers\n|--------------|-----------------------------------\n|`pdf`         | All carriers\n|`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`\n|`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`\n",
        "enum": [
          "pdf",
          "png",
          "zpl"
        ],
        "title": "label_format",
        "type": "string"
      },
      "label_layout": {
        "description": "The available layouts (sizes) in which shipping labels can be downloaded.  The label format determines which sizes are supported.  `4x6` is supported for all label formats, whereas `letter` (8.5\" x 11\") is only supported for `pdf` format.\n",
        "enum": [
          "4x6",
          "letter"
        ],
        "title": "label_layout",
        "type": "string"
      },
      "date_time": {
        "description": "An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string that represents a date and time.\n",
        "example": "2018-09-23T15:00:00.000Z",
        "format": "date-time",
        "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]\\d{2}:\\d{2})$",
        "title": "date_time",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.shipengine.com/v1/batches/{batch_id}/process/labels"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "204": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
