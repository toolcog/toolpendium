{
  "name": "list_manifests",
  "description": "Similar to querying shipments, we allow you to query manifests since there will likely be a large number over a long period of time.",
  "parameters": {
    "type": "object",
    "properties": {
      "warehouse_id": {
        "$ref": "#/components/schemas/se_id",
        "description": "Warehouse ID"
      },
      "ship_date_start": {
        "format": "date-time",
        "type": "string",
        "description": "ship date start range"
      },
      "ship_date_end": {
        "format": "date-time",
        "type": "string",
        "description": "ship date end range"
      },
      "created_at_start": {
        "format": "date-time",
        "type": "string",
        "description": "Used to create a filter for when a resource was created (ex. A shipment that was created after a certain time)"
      },
      "created_at_end": {
        "format": "date-time",
        "type": "string",
        "description": "Used to create a filter for when a resource was created, (ex. A shipment that was created before a certain time)"
      },
      "carrier_id": {
        "$ref": "#/components/schemas/se_id",
        "description": "Carrier ID"
      },
      "page": {
        "default": 1,
        "format": "int32",
        "minimum": 1,
        "type": "integer",
        "description": "Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned.\n"
      },
      "page_size": {
        "default": 25,
        "format": "int32",
        "minimum": 1,
        "type": "integer",
        "description": "The number of results to return per response."
      },
      "label_ids": {
        "description": "Array of label ids",
        "items": {
          "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.",
          "example": "se-28529731",
          "maxLength": 25,
          "minLength": 1,
          "pattern": "^se(-[a-z0-9]+)+$",
          "title": "se_id",
          "type": "string"
        },
        "type": "array"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.shipengine.com/v1/manifests{?warehouse_id,ship_date_start,ship_date_end,created_at_start,created_at_end,carrier_id,page,page_size,label_ids}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "list_manifests_response_body"
        },
        "A list manifests response body",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**links**: Helpful links to other pages of results",
              {
                "$ul": [
                  [
                    "**first**: A link to a related resource, or an empty object if there is no resource to link to",
                    {
                      "$ul": [
                        "**href**: The URL of the linked resource, if any",
                        "**type**: The type of resource, or the type of relationship to the parent resource"
                      ]
                    }
                  ],
                  [
                    "**last**: A link to a related resource, or an empty object if there is no resource to link to",
                    {
                      "$ul": [
                        "**href**: The URL of the linked resource, if any",
                        "**type**: The type of resource, or the type of relationship to the parent resource"
                      ]
                    }
                  ],
                  [
                    "**next**: A link to a related resource, or an empty object if there is no resource to link to",
                    {
                      "$ul": [
                        "**href**: The URL of the linked resource, if any",
                        "**type**: The type of resource, or the type of relationship to the parent resource"
                      ]
                    }
                  ],
                  [
                    "**prev**: A link to a related resource, or an empty object if there is no resource to link to",
                    {
                      "$ul": [
                        "**href**: The URL of the linked resource, if any",
                        "**type**: The type of resource, or the type of relationship to the parent resource"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**manifests**: The list of available manifests (default: )",
            "**page**: Current page of the list manifests results",
            "**pages**: Total number of pages for list manifests results",
            "**total**: The total number of manifests returned"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
