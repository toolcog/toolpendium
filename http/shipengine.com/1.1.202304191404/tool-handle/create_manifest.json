{
  "name": "create_manifest",
  "description": "Each ShipEngine manifest is created for a specific warehouse, so you'll need to provide the warehouse_id\nrather than the ship_from address. You can create a warehouse for each location that you want to create manifests for.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/create_manifest_request_body"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "create_manifest_request_body": {
        "oneOf": [
          {
            "$ref": "#/$defs/create_manifest_by_object_request_body"
          },
          {
            "$ref": "#/$defs/create_manifest_label_ids_request_body"
          }
        ],
        "title": "create_manifest_request_body"
      },
      "create_manifest_by_object_request_body": {
        "additionalProperties": false,
        "description": "A create manifest request body",
        "properties": {
          "carrier_id": {
            "allOf": [
              {
                "$ref": "#/$defs/se_id"
              }
            ],
            "description": "A string that uniquely identifies the carrier"
          },
          "excluded_label_ids": {
            "description": "The list of label ids to exclude from the manifest",
            "items": {
              "allOf": [
                {
                  "$ref": "#/$defs/se_id"
                }
              ],
              "description": "Label Id that will be excluded from the manifest"
            },
            "type": "array"
          },
          "label_ids": {
            "description": "The list of label ids to include for the manifest",
            "items": {
              "allOf": [
                {
                  "$ref": "#/$defs/se_id"
                }
              ],
              "description": "Label Id that will be included for the manifest"
            },
            "type": "array"
          },
          "ship_date": {
            "description": "The ship date that the shipment will be sent out on",
            "example": "2018-09-23T15:00:00.000Z",
            "format": "date-time",
            "minLength": 1,
            "type": "string"
          },
          "warehouse_id": {
            "allOf": [
              {
                "$ref": "#/$defs/se_id"
              }
            ],
            "description": "A string that uniquely identifies the warehouse"
          }
        },
        "required": [
          "carrier_id",
          "warehouse_id",
          "ship_date"
        ],
        "title": "create_manifest_by_object_request_body",
        "type": "object"
      },
      "se_id": {
        "description": "A string that uniquely identifies a ShipEngine resource, such as a carrier, label, shipment, etc.",
        "example": "se-28529731",
        "maxLength": 25,
        "minLength": 1,
        "pattern": "^se(-[a-z0-9]+)+$",
        "title": "se_id",
        "type": "string"
      },
      "create_manifest_label_ids_request_body": {
        "additionalProperties": false,
        "description": "A create manifest request body",
        "properties": {
          "label_ids": {
            "description": "The list of label ids to include in the manifest",
            "items": {
              "allOf": [
                {
                  "$ref": "#/$defs/se_id"
                }
              ],
              "description": "Label Id that will be included in the manifest"
            },
            "type": "array"
          }
        },
        "required": [
          "label_ids"
        ],
        "title": "create_manifest_label_ids_request_body",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.shipengine.com/v1/manifests"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "manifests"
        },
        "An array of manifest resources",
        "**Key properties:**",
        {
          "$ul": [
            "**manifests**: Resulting Manifests",
            "**manifest_requests**: Resulting manifest requests with statuses",
            "**carrier_id**: A string that uniquely identifies the carrier",
            "**created_at**: The date-time that the manifest was created",
            "**form_id**: A string that uniquely identifies the form",
            "**label_ids**: An array of the label ids used in this manifest.",
            [
              "**manifest_download**: Object containing the href link to download the manifest file",
              {
                "$ul": [
                  "**href**: The URL of the linked resource, if any"
                ]
              }
            ],
            "**manifest_id**: A string that uniquely identifies the manifest",
            "**ship_date**: The date-time that the manifests shipments will be picked up",
            "**shipments**: The number of shipments that are included in this manifest",
            "**submission_id**: A string that uniquely identifies the submission",
            "**warehouse_id**: A string that uniquely identifies the warehouse",
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "error_response_body"
        },
        "An error response body",
        "**Key properties:**",
        {
          "$ul": [
            "**errors**: The errors associated with the failed API call",
            "**request_id**: A UUID that uniquely identifies the request id."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
