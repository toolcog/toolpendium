{
  "name": "Registry_GetApiVersion",
  "description": "GetApiVersion returns a specified version.",
  "parameters": {
    "type": "object",
    "properties": {
      "project": {
        "type": "string",
        "description": "The project id."
      },
      "location": {
        "type": "string",
        "description": "The location id."
      },
      "api": {
        "type": "string",
        "description": "The api id."
      },
      "version": {
        "type": "string",
        "description": "The version id."
      }
    },
    "required": [
      "project",
      "location",
      "api",
      "version"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://apigee.local/v1/projects/{project}/locations/{location}/apis/{api}/versions/{version}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An ApiVersion describes a particular version of an API. ApiVersions are what consumers actually use.",
        "**Key properties:**",
        {
          "$ul": [
            "**annotations**: Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
            "**createTime**: Output only. Creation timestamp.",
            "**description**: A detailed description.",
            "**displayName**: Human-meaningful name.",
            "**labels**: Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"apigeeregistry.googleapis.com/\" and cannot be changed.",
            "**name**: Resource name.",
            "**state**: A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g. \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\", \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\".",
            "**updateTime**: Output only. Last update timestamp."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
            "**details**: A list of messages that carry the error details.  There is a common set of message types for APIs to use.",
            "**message**: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
