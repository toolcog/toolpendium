{
  "name": "export",
  "description": "Get a ZIP archive or rules, directives, techniques and groups with optionally their dependencies",
  "parameters": {
    "type": "object",
    "properties": {
      "rules": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "IDs (optionally with revision, '+' need to be escaped as '%2B') of rules to include"
      },
      "directives": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "IDs (optionally with revision, '+' need to be escaped as '%2B') of directives to include"
      },
      "techniques": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "IDs, ie technique name/technique version (optionally with revision, '+' need to be escaped as '%2B') of techniques to include"
      },
      "groups": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "IDs (optionally with revision, '+' need to be escaped as '%2B') of groups to include"
      },
      "include": {
        "items": {
          "enum": [
            "all (default)",
            "none",
            "directives",
            "techniques",
            "groups"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Scope of dependencies to include in archive, where rule as directives and groups dependencies, directives have techniques dependencies, and techniques and groups don't have dependencies. 'none' means no dependencies will be include, 'all' means that the whole tree will,  'directives' and 'groups' means to include them specifically, 'techniques' means to include both directives and techniques."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://rudder.example.local/rudder/api/latest/archives/export{?rules,directives,techniques,groups,include}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
