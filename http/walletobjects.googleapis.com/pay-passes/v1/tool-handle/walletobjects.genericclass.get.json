{
  "name": "walletobjects_genericclass_get",
  "description": "Returns the generic class with the given class ID.",
  "parameters": {
    "type": "object",
    "properties": {
      "resourceId": {
        "type": "string",
        "description": "The unique identifier for a class. This ID must be unique across all classes from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      }
    },
    "required": [
      "resourceId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://walletobjects.googleapis.com//walletobjects/v1/genericClass/{resourceId}{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Generic Class",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**callbackOptions**",
              {
                "$ul": [
                  "**updateRequestUrl**: URL for the merchant endpoint that would be called to request updates. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables. Deprecated.",
                  "**url**: The HTTPS url configured by the merchant. The URL should be hosted on HTTPS and robots.txt should allow the URL path to be accessible by UserAgent:Google-Valuables."
                ]
              }
            ],
            [
              "**classTemplateInfo**",
              {
                "$ul": [
                  [
                    "**cardBarcodeSectionDetails**",
                    {
                      "$ul": [
                        [
                          "**firstBottomDetail**",
                          {
                            "$ul": [
                              [
                                "**fieldSelector**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**firstTopDetail**",
                          {
                            "$ul": [
                              [
                                "**fieldSelector**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ],
                        [
                          "**secondTopDetail**",
                          {
                            "$ul": [
                              [
                                "**fieldSelector**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ],
                  [
                    "**cardTemplateOverride**",
                    {
                      "$ul": [
                        "**cardRowTemplateInfos**: Template information for rows in the card view. At most three rows are allowed to be specified."
                      ]
                    }
                  ],
                  [
                    "**detailsTemplateOverride**",
                    {
                      "$ul": [
                        "**detailsItemInfos**: Information for the \"nth\" item displayed in the details list."
                      ]
                    }
                  ],
                  [
                    "**listTemplateOverride**",
                    {
                      "$ul": [
                        [
                          "**firstRowOption**",
                          {
                            "$ul": [
                              [
                                "**fieldOption**: Custom field selector to use with field overrides.",
                                {
                                  "$ul": [
                                    "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                                  ]
                                }
                              ],
                              "**transitOption**"
                            ]
                          }
                        ],
                        [
                          "**secondRowOption**: Custom field selector to use with field overrides.",
                          {
                            "$ul": [
                              "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                            ]
                          }
                        ],
                        [
                          "**thirdRowOption**: Custom field selector to use with field overrides.",
                          {
                            "$ul": [
                              "**fields**: If more than one reference is supplied, then the first one that references a non-empty field will be displayed."
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            "**enableSmartTap**: Available only to Smart Tap enabled partners. Contact support for additional guidance.",
            "**id**: Required. The unique identifier for the class. This ID must be unique across all from an issuer. This value needs to follow the format `issuerID.identifier` where `issuerID` is issued by Google and `identifier` is chosen by you. The unique identifier can only include alphanumeric characters, `.`, `_`, or `-`.",
            "**imageModulesData**: Image module data. If `imageModulesData` is also defined on the object, both will be displayed. Only one of the image from class and one from object level will be rendered when both set.",
            [
              "**linksModuleData**",
              {
                "$ul": [
                  "**uris**: The list of URIs."
                ]
              }
            ],
            "**multipleDevicesAndHoldersAllowedStatus**: Identifies whether multiple users and devices will save the same object referencing this class.",
            "**redemptionIssuers**: Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.",
            [
              "**securityAnimation**",
              {
                "$ul": [
                  "**animationType**: Type of animation."
                ]
              }
            ],
            "**textModulesData**: Text module data. If `textModulesData` is also defined on the object, both will be displayed. The maximum number of these fields displayed is 10 from class and 10 from object.",
            "**viewUnlockRequirement**: View Unlock Requirement options for the generic pass."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
