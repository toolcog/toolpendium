{
  "name": "extras_custom-fields_bulk_partial_update",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/WritableCustomField"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "WritableCustomField": {
        "properties": {
          "choices": {
            "description": "Comma-separated list of available choices (for selection fields)",
            "items": {
              "maxLength": 100,
              "minLength": 1,
              "title": "Choices",
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "content_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "created": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "title": "Created",
            "type": "string"
          },
          "data_type": {
            "readOnly": true,
            "title": "Data type",
            "type": "string"
          },
          "default": {
            "description": "Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. \"Foo\").",
            "nullable": true,
            "title": "Default",
            "type": "object"
          },
          "description": {
            "maxLength": 200,
            "title": "Description",
            "type": "string"
          },
          "display": {
            "readOnly": true,
            "title": "Display",
            "type": "string"
          },
          "filter_logic": {
            "description": "Loose matches any instance of a given string; exact matches the entire field.",
            "enum": [
              "disabled",
              "loose",
              "exact"
            ],
            "title": "Filter logic",
            "type": "string"
          },
          "group_name": {
            "description": "Custom fields within the same group will be displayed together",
            "maxLength": 50,
            "title": "Group name",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "label": {
            "description": "Name of the field as displayed to users (if not provided, the field's name will be used)",
            "maxLength": 50,
            "title": "Label",
            "type": "string"
          },
          "last_updated": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "title": "Last updated",
            "type": "string"
          },
          "name": {
            "description": "Internal field name",
            "maxLength": 50,
            "minLength": 1,
            "pattern": "^[a-z0-9_]+$",
            "title": "Name",
            "type": "string"
          },
          "object_type": {
            "title": "Object type",
            "type": "string"
          },
          "required": {
            "description": "If true, this field is required when creating new objects or editing an existing object.",
            "title": "Required",
            "type": "boolean"
          },
          "search_weight": {
            "description": "Weighting for search. Lower values are considered more important. Fields with a search weight of zero will be ignored.",
            "maximum": 32767,
            "minimum": 0,
            "title": "Search weight",
            "type": "integer"
          },
          "type": {
            "description": "The type of data this custom field holds",
            "enum": [
              "text",
              "longtext",
              "integer",
              "decimal",
              "boolean",
              "date",
              "url",
              "json",
              "select",
              "multiselect",
              "object",
              "multiobject"
            ],
            "title": "Type",
            "type": "string"
          },
          "ui_visibility": {
            "description": "Specifies the visibility of custom field in the UI",
            "enum": [
              "read-write",
              "read-only",
              "hidden"
            ],
            "title": "UI visibility",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "readOnly": true,
            "title": "Url",
            "type": "string"
          },
          "validation_maximum": {
            "description": "Maximum allowed value (for numeric fields)",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "title": "Maximum value",
            "type": "integer"
          },
          "validation_minimum": {
            "description": "Minimum allowed value (for numeric fields)",
            "maximum": 2147483647,
            "minimum": -2147483648,
            "nullable": true,
            "title": "Minimum value",
            "type": "integer"
          },
          "validation_regex": {
            "description": "Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters.",
            "maxLength": 500,
            "title": "Validation regex",
            "type": "string"
          },
          "weight": {
            "description": "Fields with higher weights appear lower in a form.",
            "maximum": 32767,
            "minimum": 0,
            "title": "Display weight",
            "type": "integer"
          }
        },
        "required": [
          "content_types",
          "name"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://demo.netbox.dev/api/extras/custom-fields/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**choices**: Comma-separated list of available choices (for selection fields)",
            "**content_types**",
            "**created**",
            "**data_type**",
            "**default**: Default value for the field (must be a JSON value). Encapsulate strings with double quotes (e.g. \"Foo\").",
            "**description**",
            "**display**",
            [
              "**filter_logic**",
              {
                "$ul": [
                  "**label**",
                  "**value**"
                ]
              }
            ],
            "**group_name**: Custom fields within the same group will be displayed together",
            "**id**",
            "**label**: Name of the field as displayed to users (if not provided, the field's name will be used)",
            "**last_updated**",
            "**name**: Internal field name",
            "**object_type**",
            "**required**: If true, this field is required when creating new objects or editing an existing object.",
            "**search_weight**: Weighting for search. Lower values are considered more important. Fields with a search weight of zero will be ignored.",
            [
              "**type**",
              {
                "$ul": [
                  "**label**",
                  "**value**"
                ]
              }
            ],
            [
              "**ui_visibility**",
              {
                "$ul": [
                  "**label**",
                  "**value**"
                ]
              }
            ],
            "**url**",
            "**validation_maximum**: Maximum allowed value (for numeric fields)",
            "**validation_minimum**: Minimum allowed value (for numeric fields)",
            "**validation_regex**: Regular expression to enforce on text field values. Use ^ and $ to force matching of entire string. For example, <code>^[A-Z]{3}$</code> will limit values to exactly three uppercase letters.",
            "**weight**: Fields with higher weights appear lower in a form."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
