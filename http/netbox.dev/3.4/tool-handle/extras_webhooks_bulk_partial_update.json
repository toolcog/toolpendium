{
  "name": "extras_webhooks_bulk_partial_update",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/Webhook"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "Webhook": {
        "properties": {
          "additional_headers": {
            "description": "User-supplied HTTP headers to be sent with the request in addition to the HTTP content type. Headers should be defined in the format <code>Name: Value</code>. Jinja2 template processing is supported with the same context as the request body (below).",
            "title": "Additional headers",
            "type": "string"
          },
          "body_template": {
            "description": "Jinja2 template for a custom request body. If blank, a JSON object representing the change will be included. Available context data includes: <code>event</code>, <code>model</code>, <code>timestamp</code>, <code>username</code>, <code>request_id</code>, and <code>data</code>.",
            "title": "Body template",
            "type": "string"
          },
          "ca_file_path": {
            "description": "The specific CA certificate file to use for SSL verification. Leave blank to use the system defaults.",
            "maxLength": 4096,
            "nullable": true,
            "title": "CA File Path",
            "type": "string"
          },
          "conditions": {
            "description": "A set of conditions which determine whether the webhook will be generated.",
            "nullable": true,
            "title": "Conditions",
            "type": "object"
          },
          "content_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "created": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "title": "Created",
            "type": "string"
          },
          "display": {
            "readOnly": true,
            "title": "Display",
            "type": "string"
          },
          "enabled": {
            "title": "Enabled",
            "type": "boolean"
          },
          "http_content_type": {
            "description": "The complete list of official content types is available <a href=\"https://www.iana.org/assignments/media-types/media-types.xhtml\">here</a>.",
            "maxLength": 100,
            "minLength": 1,
            "title": "HTTP content type",
            "type": "string"
          },
          "http_method": {
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "HTTP method",
            "type": "string"
          },
          "id": {
            "readOnly": true,
            "title": "ID",
            "type": "integer"
          },
          "last_updated": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "title": "Last updated",
            "type": "string"
          },
          "name": {
            "maxLength": 150,
            "minLength": 1,
            "title": "Name",
            "type": "string"
          },
          "payload_url": {
            "description": "This URL will be called using the HTTP method defined when the webhook is called. Jinja2 template processing is supported with the same context as the request body.",
            "maxLength": 500,
            "minLength": 1,
            "title": "URL",
            "type": "string"
          },
          "secret": {
            "description": "When provided, the request will include a 'X-Hook-Signature' header containing a HMAC hex digest of the payload body using the secret as the key. The secret is not transmitted in the request.",
            "maxLength": 255,
            "title": "Secret",
            "type": "string"
          },
          "ssl_verification": {
            "description": "Enable SSL certificate verification. Disable with caution!",
            "title": "SSL verification",
            "type": "boolean"
          },
          "type_create": {
            "description": "Call this webhook when a matching object is created.",
            "title": "Type create",
            "type": "boolean"
          },
          "type_delete": {
            "description": "Call this webhook when a matching object is deleted.",
            "title": "Type delete",
            "type": "boolean"
          },
          "type_update": {
            "description": "Call this webhook when a matching object is updated.",
            "title": "Type update",
            "type": "boolean"
          },
          "url": {
            "format": "uri",
            "readOnly": true,
            "title": "Url",
            "type": "string"
          }
        },
        "required": [
          "content_types",
          "name",
          "payload_url"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://demo.netbox.dev/api/extras/webhooks/"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**additional_headers**: User-supplied HTTP headers to be sent with the request in addition to the HTTP content type. Headers should be defined in the format <code>Name: Value</code>. Jinja2 template processing is supported with the same context as the request body (below).",
            "**body_template**: Jinja2 template for a custom request body. If blank, a JSON object representing the change will be included. Available context data includes: <code>event</code>, <code>model</code>, <code>timestamp</code>, <code>username</code>, <code>request_id</code>, and <code>data</code>.",
            "**ca_file_path**: The specific CA certificate file to use for SSL verification. Leave blank to use the system defaults.",
            "**conditions**: A set of conditions which determine whether the webhook will be generated.",
            "**content_types**",
            "**created**",
            "**display**",
            "**enabled**",
            "**http_content_type**: The complete list of official content types is available <a href=\"https://www.iana.org/assignments/media-types/media-types.xhtml\">here</a>.",
            "**http_method**",
            "**id**",
            "**last_updated**",
            "**name**",
            "**payload_url**: This URL will be called using the HTTP method defined when the webhook is called. Jinja2 template processing is supported with the same context as the request body.",
            "**secret**: When provided, the request will include a 'X-Hook-Signature' header containing a HMAC hex digest of the payload body using the secret as the key. The secret is not transmitted in the request.",
            "**ssl_verification**: Enable SSL certificate verification. Disable with caution!",
            "**type_create**: Call this webhook when a matching object is created.",
            "**type_delete**: Call this webhook when a matching object is deleted.",
            "**type_update**: Call this webhook when a matching object is updated.",
            "**url**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
