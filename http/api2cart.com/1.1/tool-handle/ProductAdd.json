{
  "name": "ProductAdd",
  "description": "Add new product to store.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/ProductAdd"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ProductAdd": {
        "properties": {
          "attribute_name": {
            "description": "Defines product’s attribute name separated with a comma in Magento",
            "type": "string"
          },
          "attribute_set_name": {
            "default": "Default",
            "description": "Defines product’s attribute set name in Magento",
            "type": "string"
          },
          "avail_from": {
            "description": "Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.",
            "type": "string"
          },
          "available_for_sale": {
            "default": true,
            "description": "Specifies the set of visible/invisible products for sale",
            "type": "boolean"
          },
          "available_for_view": {
            "default": true,
            "description": "Specifies the set of visible/invisible products for users",
            "type": "boolean"
          },
          "backorder_status": {
            "description": "Set backorder status",
            "type": "string"
          },
          "barcode": {
            "description": "A barcode is a unique code composed of numbers used as a product identifier.",
            "type": "string"
          },
          "best_offer": {
            "description": "The price at which Best Offers are automatically accepted.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">best_offer[<b>minimum_offer_price</b>] = decimal</br>best_offer[<b>auto_accept_price</b>] = decimal</br></code></div></div>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "brand_name": {
            "description": "Retrieves brands specified by brand name",
            "type": "string"
          },
          "categories_ids": {
            "description": "Defines product add that is specified by comma-separated categories id",
            "type": "string"
          },
          "category_id": {
            "description": "Defines product add that is specified by category id",
            "type": "string"
          },
          "clear_cache": {
            "default": true,
            "description": "Is cache clear required",
            "type": "boolean"
          },
          "condition": {
            "description": "The human-readable label for the condition (e.g., \"New\").",
            "type": "string"
          },
          "cost_price": {
            "description": "Defines new product's cost price",
            "type": "number"
          },
          "country_of_origin": {
            "description": "The country where the inventory item was made",
            "type": "string"
          },
          "created_at": {
            "description": "Defines the date of entity creation",
            "type": "string"
          },
          "description": {
            "description": "Defines product's description that has to be added",
            "type": "string"
          },
          "downloadable": {
            "default": false,
            "description": "Defines whether the product is downloadable",
            "type": "boolean"
          },
          "ean": {
            "description": "European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.",
            "type": "string"
          },
          "files": {
            "description": "File Url",
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "url"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "group_prices": {
            "description": "Defines product's group prices",
            "items": {
              "properties": {
                "group_id": {
                  "type": "string"
                },
                "price": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "gtin": {
            "description": "Global Trade Item Number. An GTIN is an identifier for trade items.",
            "type": "string"
          },
          "harmonized_system_code": {
            "description": "Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes",
            "type": "string"
          },
          "height": {
            "description": "Defines product's height",
            "type": "number"
          },
          "image_name": {
            "description": "Defines image's name",
            "type": "string"
          },
          "image_url": {
            "description": "Image Url",
            "type": "string"
          },
          "isbn": {
            "description": "International Standard Book Number. An ISBN is a unique identifier for books.",
            "type": "string"
          },
          "lang_id": {
            "description": "Language id",
            "type": "string"
          },
          "length": {
            "description": "Defines product's length",
            "type": "number"
          },
          "listing_duration": {
            "description": "Describes the number of days the seller wants the listing to be active. Look at cart.info method response for allowed values.",
            "type": "string"
          },
          "listing_type": {
            "default": "FixedPrice",
            "description": "Indicates the selling format of the marketplace listing.",
            "type": "string"
          },
          "manage_stock": {
            "description": "Defines inventory tracking for product",
            "type": "boolean"
          },
          "manufacturer": {
            "description": "Defines product's manufacturer",
            "type": "string"
          },
          "marketplace_item_properties": {
            "default": false,
            "description": "String containing the JSON representation of the supplied data",
            "type": "string"
          },
          "meta_description": {
            "description": "Defines unique meta description of a entity",
            "type": "string"
          },
          "meta_keywords": {
            "description": "Defines unique meta keywords for each entity",
            "type": "string"
          },
          "meta_title": {
            "description": "Defines unique meta title for each entity",
            "type": "string"
          },
          "model": {
            "description": "Defines product's model that has to be added",
            "type": "string"
          },
          "mpn": {
            "description": "Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.",
            "type": "string"
          },
          "name": {
            "description": "Defines product's name that has to be added",
            "type": "string"
          },
          "old_price": {
            "description": "Defines product's old price",
            "type": "number"
          },
          "ordered_count": {
            "default": 0,
            "description": "Defines how many times the product was ordered",
            "type": "integer"
          },
          "package_details": {
            "description": "If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">package_details[<b>measure_unit</b>] = string</br> Allowed measure_unit values: [English or Metric] </br> Default: Metric</br>package_details[<b>weigh_unit</b>] = string</br> Allowed weigh_unit values: [kg, g, lbs, oz]</br>package_details[<b>package_depth</b>] = decimal</br>package_details[<b>package_length</b>] = decimal</br>package_details[<b>package_width</b>] = decimal</br>package_details[<b>weight_major</b>] = decimal</br>package_details[<b>weight_minor</b>] = decimal</br>package_details[<b>shipping_package</b>] = string</br> See cart.info method, param `eBay_shipping_package_details`</code></div></div>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "payment_methods": {
            "description": "Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">payment_methods[0] = string</br>payment_methods[1] = string</br></code></div></div>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "paypal_email": {
            "description": "Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.",
            "type": "string"
          },
          "price": {
            "description": "Defines product's price that has to be added",
            "type": "number"
          },
          "product_class": {
            "description": "A categorization for the product",
            "type": "string"
          },
          "quantity": {
            "default": 0,
            "description": "Defines product's quantity that has to be added",
            "type": "number"
          },
          "return_accepted": {
            "description": "Indicates whether the seller allows the buyer to return the item.",
            "type": "boolean"
          },
          "sales_tax": {
            "description": "Percent of an item's price to be charged as the sales tax for the order. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">sales_tax[<b>tax_percent</b>] = decimal (##.###)</br>sales_tax[<b>tax_state</b>] = string</br>sales_tax[<b>shipping_inc_in_tax</b>] = bool</br></code></div></div>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search_keywords": {
            "description": "Defines unique search keywords",
            "type": "string"
          },
          "seller_profiles": {
            "description": "If the seller is subscribed to \"Business Policies\", use the seller_profiles instead of the shipping_details, payment_methods and return_accepted params.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">seller_profiles[<b>shipping_profile_id</b>] = integer</br>seller_profiles[<b>payment_profile_id</b>] = integer</br>seller_profiles[<b>return_profile_id</b>] = integer</br></code></div></div>",
            "properties": {
              "payment_profile_id": {
                "type": "string"
              },
              "return_profile_id": {
                "type": "string"
              },
              "shipping_profile_id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "seo_url": {
            "description": "Defines unique URL for SEO",
            "type": "string"
          },
          "shipping_details": {
            "description": "The shipping details, including flat and calculated shipping costs and shipping insurance costs. Look at cart.info method response for allowed values.<hr><div style=\"font-style:normal\">Param structure:<div style=\"margin-left: 2%;\"><code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">shipping_details[0][<b>shipping_type</b>] = string </br>shipping_details[0][<b>shipping_service</b>] = string</br>shipping_details[0][<b>shipping_cost</b>] = decimal</br>shipping_details[1][<b>shipping_type</b>] = string </br>shipping_details[1][<b>shipping_service</b>] = string</br>shipping_details[1][<b>shipping_cost</b>] = decimal</br></code></div></div>",
            "items": {
              "properties": {
                "shipping_cost": {
                  "type": "number"
                },
                "shipping_service": {
                  "type": "string"
                },
                "shipping_type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "shipping_template_id": {
            "default": 0,
            "description": "The numeric ID of the shipping template associated with the products in Etsy.",
            "type": "integer"
          },
          "short_description": {
            "description": "Defines short description",
            "type": "string"
          },
          "sku": {
            "description": "Defines product's sku that has to be added",
            "type": "string"
          },
          "special_price": {
            "description": "Defines product's model that has to be added",
            "type": "number"
          },
          "specifics": {
            "description": "An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.\n        <hr>\n        <div style=\"font-style:normal\">Param structure:\n          <div style=\"margin-left: 2%;\">\n            <code style=\"padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\">\n              specifics[int][<b>name</b>] = string</br>\n              specifics[int][<b>value</b>] = string</br>\n            </code>\n          </div>\n        </div>",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sprice_create": {
            "description": "Defines the date of special price creation",
            "type": "string"
          },
          "sprice_expire": {
            "description": "Defines the term of special price offer duration",
            "type": "string"
          },
          "sprice_modified": {
            "description": "Defines the date of special price modification",
            "type": "string"
          },
          "status": {
            "description": "Defines product's status",
            "type": "string"
          },
          "store_id": {
            "description": "Store Id",
            "type": "string"
          },
          "stores_ids": {
            "default": 0,
            "description": "Assign product to the stores that is specified by comma-separated stores' id",
            "type": "string"
          },
          "tags": {
            "description": "Product tags",
            "type": "string"
          },
          "tax_class_id": {
            "description": "Defines tax classes where entity has to be added",
            "type": "string"
          },
          "taxable": {
            "default": true,
            "description": "Specifies whether a tax is charged",
            "type": "boolean"
          },
          "tier_prices": {
            "description": "Defines product's tier prices",
            "items": {
              "properties": {
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "type": {
            "default": "simple",
            "description": "Defines product's type",
            "type": "string"
          },
          "upc": {
            "description": "Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.",
            "type": "string"
          },
          "url": {
            "description": "Defines unique product's URL",
            "type": "string"
          },
          "viewed_count": {
            "default": 0,
            "description": "Specifies the number of product's reviews",
            "type": "integer"
          },
          "visible": {
            "description": "Set visibility status",
            "type": "string"
          },
          "warehouse_id": {
            "description": "This parameter is used for selecting a warehouse where you need to set/modify a product quantity.",
            "type": "string"
          },
          "weight": {
            "default": 0,
            "description": "Weight",
            "type": "number"
          },
          "weight_unit": {
            "description": "Weight Unit",
            "type": "string"
          },
          "wholesale_price": {
            "description": "Defines product's sale price",
            "type": "number"
          },
          "width": {
            "description": "Defines product's width",
            "type": "number"
          }
        },
        "required": [
          "name",
          "model",
          "description",
          "price"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.api2cart.com/v1.1/product.add.json"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**result**",
              {
                "$ul": [
                  "**product_id**"
                ]
              }
            ],
            "**return_code**",
            "**return_message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
