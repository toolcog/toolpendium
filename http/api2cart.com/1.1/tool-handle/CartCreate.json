{
  "name": "CartCreate",
  "description": "Add store to the account",
  "parameters": {
    "type": "object",
    "properties": {
      "cart_id": {
        "enum": [
          "3DCart",
          "3DCartApi",
          "AceShop",
          "AmazonSP",
          "Amazon",
          "AspDotNetStorefront",
          "BigcommerceApi",
          "Creloaded",
          "CommerceHQ",
          "Cscart",
          "Cubecart",
          "Demandware",
          "EBay",
          "Ecwid",
          "Etsy",
          "EtsyAPIv3",
          "Gambio",
          "JooCart",
          "Magento1212",
          "Magento2Api",
          "MijoShop",
          "Neto",
          "Opencart14",
          "LightSpeed",
          "Oscmax2",
          "Oscommerce22ms2",
          "Oxid",
          "Pinnacle",
          "Prestashop",
          "PrestashopApi",
          "SSPremium",
          "Shopify",
          "Squarespace",
          "Shopware",
          "ShopwareApi",
          "Tomatocart",
          "Ubercart",
          "Virtuemart",
          "Volusion",
          "WPecommerce",
          "Walmart",
          "WebAsyst",
          "Woocommerce",
          "WoocommerceApi",
          "Wix",
          "Xcart",
          "Xtcommerce",
          "XtcommerceVeyton",
          "Zencart137",
          "Hybris",
          "MercadoLibre",
          "Zid",
          "Zoey"
        ],
        "type": "string",
        "description": "Storeâ€™s identifier which you can get from cart_list method"
      },
      "store_url": {
        "type": "string",
        "description": "A web address of a store that you would like to connect to API2Cart"
      },
      "bridge_url": {
        "type": "string",
        "description": "This parameter allows to set up store with custom bridge url (also you must use store_root parameter if a bridge folder is not in the root folder of the store)"
      },
      "store_root": {
        "type": "string",
        "description": "Absolute path to the store root directory (used with \"bridge_url\" parameter)"
      },
      "store_key": {
        "type": "string",
        "description": "Set this parameter if bridge is already uploaded to store"
      },
      "shared_secret": {
        "type": "string",
        "description": "Shared secret"
      },
      "validate_version": {
        "default": false,
        "type": "boolean",
        "description": "Specify if api2cart should validate cart version"
      },
      "verify": {
        "default": true,
        "type": "boolean",
        "description": "Enables or disables cart's verification"
      },
      "db_tables_prefix": {
        "type": "string",
        "description": "DB tables prefix"
      },
      "ftp_host": {
        "type": "string",
        "description": "FTP connection host"
      },
      "ftp_user": {
        "type": "string",
        "description": "FTP User"
      },
      "ftp_password": {
        "type": "string",
        "description": "FTP Password"
      },
      "ftp_port": {
        "type": "integer",
        "description": "FTP Port"
      },
      "ftp_store_dir": {
        "type": "string",
        "description": "FTP Store dir"
      },
      "apiKey_3dcart": {
        "type": "string",
        "description": "3DCart API Key"
      },
      "AdminAccount": {
        "type": "string",
        "description": "It's a BigCommerce account for which API is enabled"
      },
      "ApiPath": {
        "type": "string",
        "description": "BigCommerce API URL"
      },
      "ApiKey": {
        "type": "string",
        "description": "Bigcommerce API Key"
      },
      "client_id": {
        "type": "string",
        "description": "Client ID of the requesting app"
      },
      "accessToken": {
        "type": "string",
        "description": "Access token authorizing the app to access resources on behalf of a user"
      },
      "context": {
        "type": "string",
        "description": "API Path section unique to the store"
      },
      "access_token": {
        "type": "string",
        "description": "Access token authorizing the app to access resources on behalf of a user"
      },
      "apiKey_shopify": {
        "type": "string",
        "description": "Shopify API Key"
      },
      "apiPassword": {
        "type": "string",
        "description": "Shopify API Password"
      },
      "accessToken_shopify": {
        "type": "string",
        "description": "Access token authorizing the app to access resources on behalf of a user"
      },
      "apiKey": {
        "type": "string",
        "description": "Neto API Key"
      },
      "apiUsername": {
        "type": "string",
        "description": "Neto User Name"
      },
      "EncryptedPassword": {
        "type": "string",
        "description": "Volusion API Password"
      },
      "Login": {
        "type": "string",
        "description": "It's a Volusion account for which API is enabled"
      },
      "apiUser_adnsf": {
        "type": "string",
        "description": "It's a AspDotNetStorefront account for which API is available"
      },
      "apiPass": {
        "type": "string",
        "description": "AspDotNetStorefront API Password"
      },
      "privateKey": {
        "type": "string",
        "description": "3DCart Application Private Key"
      },
      "appToken": {
        "type": "string",
        "description": "3DCart Token from Application"
      },
      "etsy_keystring": {
        "type": "string",
        "description": "Etsy keystring"
      },
      "etsy_shared_secret": {
        "type": "string",
        "description": "Etsy shared secret"
      },
      "tokenSecret": {
        "type": "string",
        "description": "Secret token authorizing the app to access resources on behalf of a user"
      },
      "etsy_client_id": {
        "type": "string",
        "description": "Etsy Client Id"
      },
      "etsy_refresh_token": {
        "type": "string",
        "description": "Etsy Refresh token"
      },
      "ebay_client_id": {
        "type": "string",
        "description": "Application ID (AppID)."
      },
      "ebay_client_secret": {
        "type": "string",
        "description": "Shared Secret from eBay application"
      },
      "ebay_runame": {
        "type": "string",
        "description": "The RuName value that eBay assigns to your application."
      },
      "ebay_access_token": {
        "type": "string",
        "description": "Used to authenticate API requests."
      },
      "ebay_refresh_token": {
        "type": "string",
        "description": "Used to renew the access token."
      },
      "ebay_environment": {
        "default": "production",
        "type": "string",
        "description": "eBay environment"
      },
      "ebay_site_id": {
        "default": 0,
        "type": "integer",
        "description": "eBay global ID"
      },
      "dw_client_id": {
        "type": "string",
        "description": "Demandware client id"
      },
      "dw_api_pass": {
        "type": "string",
        "description": "Demandware api password"
      },
      "demandware_user_name": {
        "type": "string",
        "description": "Demandware user name"
      },
      "demandware_user_password": {
        "type": "string",
        "description": "Demandware user password"
      },
      "store_id": {
        "type": "string",
        "description": "Store Id"
      },
      "seller_id": {
        "type": "string",
        "description": "Seller Id"
      },
      "amazon_secret_key": {
        "type": "string",
        "description": "Amazon Secret Key"
      },
      "amazon_access_key_id": {
        "type": "string",
        "description": "Amazon Secret Key Id"
      },
      "marketplaces_ids": {
        "type": "string",
        "description": "Comma separated marketplaces ids"
      },
      "environment": {
        "default": "production",
        "type": "string",
        "description": ""
      },
      "hybris_client_id": {
        "type": "string",
        "description": "Omni Commerce Connector Client ID"
      },
      "hybris_client_secret": {
        "type": "string",
        "description": "Omni Commerce Connector Client Secret"
      },
      "hybris_username": {
        "type": "string",
        "description": "User Name"
      },
      "hybris_password": {
        "type": "string",
        "description": "User password"
      },
      "hybris_websites": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Websites to stores mapping data"
      },
      "walmart_client_id": {
        "type": "string",
        "description": "Walmart client ID"
      },
      "walmart_client_secret": {
        "type": "string",
        "description": "Walmart client secret"
      },
      "walmart_environment": {
        "default": "production",
        "type": "string",
        "description": "Walmart environment"
      },
      "walmart_channel_type": {
        "type": "string",
        "description": "Walmart WM_CONSUMER.CHANNEL.TYPE header"
      },
      "lightspeed_api_key": {
        "type": "string",
        "description": "LightSpeed api key"
      },
      "lightspeed_api_secret": {
        "type": "string",
        "description": "LightSpeed api secret"
      },
      "shopware_access_key": {
        "type": "string",
        "description": "Shopware access key"
      },
      "shopware_api_key": {
        "type": "string",
        "description": "Shopware api key"
      },
      "shopware_api_secret": {
        "type": "string",
        "description": "Shopware client secret access key"
      },
      "commercehq_api_key": {
        "type": "string",
        "description": "CommerceHQ api key"
      },
      "commercehq_api_password": {
        "type": "string",
        "description": "CommerceHQ api password"
      },
      "3dcart_private_key": {
        "type": "string",
        "description": "3DCart Private Key"
      },
      "3dcart_access_token": {
        "type": "string",
        "description": "3DCart Token"
      },
      "wc_consumer_key": {
        "type": "string",
        "description": "Woocommerce consumer key"
      },
      "wc_consumer_secret": {
        "type": "string",
        "description": "Woocommerce consumer secret"
      },
      "magento_consumer_key": {
        "type": "string",
        "description": "Magento Consumer Key"
      },
      "magento_consumer_secret": {
        "type": "string",
        "description": "Magento Consumer Secret"
      },
      "magento_access_token": {
        "type": "string",
        "description": "Magento Access Token"
      },
      "magento_token_secret": {
        "type": "string",
        "description": "Magento Token Secret"
      },
      "prestashop_webservice_key": {
        "type": "string",
        "description": "Prestashop webservice key"
      },
      "wix_app_id": {
        "type": "string",
        "description": "Wix App ID"
      },
      "wix_app_secret_key": {
        "type": "string",
        "description": "Wix App Secret Key"
      },
      "wix_refresh_token": {
        "type": "string",
        "description": "Wix refresh token"
      },
      "mercado_libre_app_id": {
        "type": "string",
        "description": "Mercado Libre App ID"
      },
      "mercado_libre_app_secret_key": {
        "type": "string",
        "description": "Mercado Libre App Secret Key"
      },
      "mercado_libre_refresh_token": {
        "type": "string",
        "description": "Mercado Libre Refresh Token"
      },
      "zid_client_id": {
        "type": "integer",
        "description": "Zid Client ID"
      },
      "zid_client_secret": {
        "type": "string",
        "description": "Zid Client Secret"
      },
      "zid_access_token": {
        "type": "string",
        "description": "Zid Access Token"
      },
      "zid_authorization": {
        "type": "string",
        "description": "Zid Authorization"
      },
      "zid_refresh_token": {
        "type": "string",
        "description": "Zid refresh token"
      }
    },
    "required": [
      "cart_id",
      "store_url",
      "etsy_client_id",
      "etsy_refresh_token",
      "store_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.api2cart.com/v1.1/cart.create.json{?cart_id,store_url,bridge_url,store_root,store_key,shared_secret,validate_version,verify,db_tables_prefix,ftp_host,ftp_user,ftp_password,ftp_port,ftp_store_dir,apiKey_3dcart,AdminAccount,ApiPath,ApiKey,client_id,accessToken,context,access_token,apiKey_shopify,apiPassword,accessToken_shopify,apiKey,apiUsername,EncryptedPassword,Login,apiUser_adnsf,apiPass,privateKey,appToken,etsy_keystring,etsy_shared_secret,tokenSecret,etsy_client_id,etsy_refresh_token,ebay_client_id,ebay_client_secret,ebay_runame,ebay_access_token,ebay_refresh_token,ebay_environment,ebay_site_id,dw_client_id,dw_api_pass,demandware_user_name,demandware_user_password,store_id,seller_id,amazon_secret_key,amazon_access_key_id,marketplaces_ids,environment,hybris_client_id,hybris_client_secret,hybris_username,hybris_password,hybris_websites,walmart_client_id,walmart_client_secret,walmart_environment,walmart_channel_type,lightspeed_api_key,lightspeed_api_secret,shopware_access_key,shopware_api_key,shopware_api_secret,commercehq_api_key,commercehq_api_password,3dcart_private_key,3dcart_access_token,wc_consumer_key,wc_consumer_secret,magento_consumer_key,magento_consumer_secret,magento_access_token,magento_token_secret,prestashop_webservice_key,wix_app_id,wix_app_secret_key,wix_refresh_token,mercado_libre_app_id,mercado_libre_app_secret_key,mercado_libre_refresh_token,zid_client_id,zid_client_secret,zid_access_token,zid_authorization,zid_refresh_token}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**result**",
              {
                "$ul": [
                  "**store_key**"
                ]
              }
            ],
            "**return_code**",
            "**return_message**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
