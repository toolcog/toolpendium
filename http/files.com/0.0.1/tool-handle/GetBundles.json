{
  "name": "GetBundles",
  "description": "List Bundles",
  "parameters": {
    "type": "object",
    "properties": {
      "user_id": {
        "format": "int32",
        "type": "integer",
        "description": "User ID.  Provide a value of `0` to operate the current session's user."
      },
      "cursor": {
        "type": "string",
        "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
      },
      "per_page": {
        "format": "int32",
        "type": "integer",
        "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
      },
      "sort_by": {
        "type": "object",
        "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[created_at]=desc`). Valid fields are `created_at` and `code`."
      },
      "filter": {
        "type": "object",
        "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`."
      },
      "filter_gt": {
        "type": "object",
        "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`."
      },
      "filter_gteq": {
        "type": "object",
        "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `created_at`."
      },
      "filter_lt": {
        "type": "object",
        "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`."
      },
      "filter_lteq": {
        "type": "object",
        "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `created_at`."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/bundles{?user_id,cursor,per_page,sort_by,filter,filter_gt,filter_gteq,filter_lt,filter_lteq}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Create Bundle",
        "**Key properties:**",
        {
          "$ul": [
            "**clickwrap_body**: Legal text that must be agreed to prior to accessing Bundle.",
            "**clickwrap_id**: ID of the clickwrap to use with this bundle.",
            "**code**: Bundle code.  This code forms the end part of the Public URL.",
            "**created_at**: Bundle created at date/time",
            "**description**: Public description",
            "**dont_separate_submissions_by_folder**: Do not create subfolders for files uploaded to this share. Note: there are subtle security pitfalls with allowing anonymous uploads from multiple users to live in the same folder. We strongly discourage use of this option unless absolutely required.",
            "**expires_at**: Bundle expiration date/time",
            [
              "**form_field_set**: List Form Field Sets",
              {
                "$ul": [
                  "**form_fields**: Associated form fields",
                  "**form_layout**: Layout of the form",
                  "**id**: Form field set id",
                  "**skip_company**: Any associated InboxRegistrations or BundleRegistrations can be saved without providing company",
                  "**skip_email**: Any associated InboxRegistrations or BundleRegistrations can be saved without providing email",
                  "**skip_name**: Any associated InboxRegistrations or BundleRegistrations can be saved without providing name",
                  "**title**: Title to be displayed"
                ]
              }
            ],
            "**has_inbox**: Does this bundle have an associated inbox?",
            "**id**: Bundle ID",
            "**inbox_id**: ID of the associated inbox, if available.",
            "**max_uses**: Maximum number of times bundle can be accessed",
            "**note**: Bundle internal note",
            "**password_protected**: Is this bundle password protected?",
            "**path_template**: Template for creating submission subfolders. Can use the uploader's name, email address, ip, company, and any custom form data.",
            "**paths**: A list of paths in this bundle.  For performance reasons, this is not provided when listing bundles.",
            "**permissions**: Permissions that apply to Folders in this Share Link.",
            "**preview_only**: Restrict users to previewing files only?",
            "**require_registration**: Show a registration page that captures the downloader's name and email address?",
            "**require_share_recipient**: Only allow access to recipients who have explicitly received the share via an email sent through the Files.com UI?",
            "**send_email_receipt_to_uploader**: Send delivery receipt to the uploader. Note: For writable share only",
            "**skip_company**: BundleRegistrations can be saved without providing company?",
            "**skip_email**: BundleRegistrations can be saved without providing email?",
            "**skip_name**: BundleRegistrations can be saved without providing name?",
            "**url**: Public URL of Share Link",
            "**user_id**: Bundle creator user ID",
            "**username**: Bundle creator username",
            [
              "**watermark_attachment**",
              {
                "$ul": [
                  "**name**: Image name",
                  "**uri**: Image URI"
                ]
              }
            ],
            "**watermark_value**: Preview watermark settings applied to all bundle items. Uses the same keys as Behavior.value"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
