{
  "name": "GetHistoryExportResults",
  "description": "List History Export Results",
  "parameters": {
    "type": "object",
    "properties": {
      "user_id": {
        "format": "int32",
        "type": "integer",
        "description": "User ID.  Provide a value of `0` to operate the current session's user."
      },
      "cursor": {
        "type": "string",
        "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
      },
      "per_page": {
        "format": "int32",
        "type": "integer",
        "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
      },
      "history_export_id": {
        "format": "int32",
        "type": "integer",
        "description": "ID of the associated history export."
      }
    },
    "required": [
      "history_export_id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/history_export_results{?user_id,cursor,per_page,history_export_id}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "List History Export Results",
        "**Key properties:**",
        {
          "$ul": [
            "**action**: What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`",
            "**created_at**: When the action happened",
            "**created_at_iso8601**: When the action happened, in ISO8601 format.",
            "**destination**: File moved to this destination folder",
            "**failure_type**: The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`",
            "**file_id**: File ID related to the action",
            "**folder**: Folder in which the action occurred",
            "**id**: Action ID",
            "**interface**: Inteface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`",
            "**ip**: Client IP that performed the action",
            "**parent_id**: ID of the parent folder",
            "**path**: Path of the related action",
            "**src**: File move originated from this path",
            "**target_expires_at**: If searching for Histories about API keys, this is when the API key will expire",
            "**target_id**: ID of the object (such as Users, or API Keys) on which the action was taken",
            "**target_name**: Name of the User, Group or other object with a name related to this action",
            "**target_permission**: Permission level of the action",
            "**target_permission_set**: If searching for Histories about API keys, this represents the permission set of the associated  API key",
            "**target_platform**: If searching for Histories about API keys, this is the platform on which the action was taken",
            "**target_recursive**: Whether or not the action was recursive",
            "**target_user_id**: If searching for Histories about API keys, this is the User ID on which the action was taken",
            "**target_username**: If searching for Histories about API keys, this is the username on which the action was taken",
            "**user_id**: User ID",
            "**username**: Username of the user that performed the action"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
