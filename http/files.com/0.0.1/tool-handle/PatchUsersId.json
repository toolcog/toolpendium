{
  "name": "PatchUsersId",
  "description": "Update User",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "type": "integer",
        "description": "User ID."
      },
      "body": {
        "properties": {
          "allowed_ips": {
            "description": "A list of allowed IPs if applicable.  Newline delimited",
            "example": "127.0.0.1",
            "type": "string",
            "x-ms-summary": "A list of allowed IPs if applicable.  Newline delimited"
          },
          "announcements_read": {
            "description": "Signifies that the user has read all the announcements in the UI.",
            "type": "boolean",
            "x-ms-summary": "Signifies that the user has read all the announcements in the UI."
          },
          "attachments_permission": {
            "description": "DEPRECATED: Can the user create Bundles (aka Share Links)? Use the bundle permission instead.",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "DEPRECATED: Can the user create Bundles (aka Share Links)? Use the bundle permission instead."
          },
          "authenticate_until": {
            "description": "Scheduled Date/Time at which user will be deactivated",
            "example": "2000-01-01T01:00:00Z",
            "format": "date-time",
            "type": "string",
            "x-ms-summary": "Scheduled Date/Time at which user will be deactivated"
          },
          "authentication_method": {
            "description": "How is this user authenticated?",
            "enum": [
              "password",
              "unused_former_ldap",
              "sso",
              "none",
              "email_signup",
              "password_with_imported_hash"
            ],
            "example": "password",
            "type": "string",
            "x-ms-summary": "How is this user authenticated?"
          },
          "avatar_delete": {
            "description": "If true, the avatar will be deleted.",
            "type": "boolean",
            "x-ms-summary": "If true, the avatar will be deleted."
          },
          "avatar_file": {
            "description": "An image file for your user avatar.",
            "format": "binary",
            "type": "string",
            "x-ms-summary": "An image file for your user avatar."
          },
          "billing_permission": {
            "description": "Allow this user to perform operations on the account, payments, and invoices?",
            "type": "boolean",
            "x-ms-summary": "Allow this user to perform operations on the account, payments, and invoices?"
          },
          "bypass_inactive_disable": {
            "description": "Exempt this user from being disabled based on inactivity?",
            "type": "boolean",
            "x-ms-summary": "Exempt this user from being disabled based on inactivity?"
          },
          "bypass_site_allowed_ips": {
            "description": "Allow this user to skip site-wide IP blacklists?",
            "type": "boolean",
            "x-ms-summary": "Allow this user to skip site-wide IP blacklists?"
          },
          "change_password": {
            "description": "Used for changing a password on an existing user.",
            "type": "string",
            "x-ms-summary": "Used for changing a password on an existing user."
          },
          "change_password_confirmation": {
            "description": "Optional, but if provided, we will ensure that it matches the value sent in `change_password`.",
            "type": "string",
            "x-ms-summary": "Optional, but if provided, we will ensure that it matches the value sent in `change_password`."
          },
          "company": {
            "description": "User's company",
            "example": "ACME Corp.",
            "type": "string",
            "x-ms-summary": "User's company"
          },
          "dav_permission": {
            "description": "Can the user connect with WebDAV?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Can the user connect with WebDAV?"
          },
          "disabled": {
            "description": "Is user disabled? Disabled users cannot log in, and do not count for billing purposes.  Users can be automatically disabled after an inactivity period via a Site setting.",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Is user disabled? Disabled users cannot log in, and do not count for billing purposes.  Users can be automatically disabled after an inactivity period via a Site setting."
          },
          "email": {
            "description": "User's email.",
            "type": "string",
            "x-ms-summary": "User's email."
          },
          "ftp_permission": {
            "description": "Can the user access with FTP/FTPS?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Can the user access with FTP/FTPS?"
          },
          "grant_permission": {
            "description": "Permission to grant on the user root.  Can be blank or `full`, `read`, `write`, `list`, `read+write`, or `list+write`",
            "type": "string",
            "x-ms-summary": "Permission to grant on the user root.  Can be blank or `full`, `read`, `write`, `list`, `read+write`, or `list+write`"
          },
          "group_id": {
            "description": "Group ID to associate this user with.",
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "Group ID to associate this user with."
          },
          "group_ids": {
            "description": "A list of group ids to associate this user with.  Comma delimited.",
            "type": "string",
            "x-ms-summary": "A list of group ids to associate this user with.  Comma delimited."
          },
          "header_text": {
            "description": "Text to display to the user in the header of the UI",
            "example": "User-specific message.",
            "type": "string",
            "x-ms-summary": "Text to display to the user in the header of the UI"
          },
          "imported_password_hash": {
            "description": "Pre-calculated hash of the user's password. If supplied, this will be used to authenticate the user on first login. Supported hash menthods are MD5, SHA1, and SHA256.",
            "type": "string",
            "x-ms-summary": "Pre-calculated hash of the user's password. If supplied, this will be used to authenticate the user on first login. Supported hash menthods are MD5, SHA1, and SHA256."
          },
          "language": {
            "description": "Preferred language",
            "example": "en",
            "type": "string",
            "x-ms-summary": "Preferred language"
          },
          "name": {
            "description": "User's full name",
            "example": "John Doe",
            "type": "string",
            "x-ms-summary": "User's full name"
          },
          "notes": {
            "description": "Any internal notes on the user",
            "example": "Internal notes on this user.",
            "type": "string",
            "x-ms-summary": "Any internal notes on the user"
          },
          "notification_daily_send_time": {
            "description": "Hour of the day at which daily notifications should be sent. Can be in range 0 to 23",
            "example": 18,
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "Hour of the day at which daily notifications should be sent. Can be in range 0 to 23"
          },
          "office_integration_enabled": {
            "description": "Enable integration with Office for the web?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Enable integration with Office for the web?"
          },
          "password": {
            "description": "User password.",
            "type": "string",
            "x-ms-summary": "User password."
          },
          "password_confirmation": {
            "description": "Optional, but if provided, we will ensure that it matches the value sent in `password`.",
            "type": "string",
            "x-ms-summary": "Optional, but if provided, we will ensure that it matches the value sent in `password`."
          },
          "password_validity_days": {
            "description": "Number of days to allow user to use the same password",
            "example": 1,
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "Number of days to allow user to use the same password"
          },
          "receive_admin_alerts": {
            "description": "Should the user receive admin alerts such a certificate expiration notifications and overages?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Should the user receive admin alerts such a certificate expiration notifications and overages?"
          },
          "require_2fa": {
            "description": "2FA required setting",
            "enum": [
              "use_system_setting",
              "always_require",
              "never_require"
            ],
            "example": "always_require",
            "type": "string",
            "x-ms-summary": "2FA required setting"
          },
          "require_password_change": {
            "description": "Is a password change required upon next user login?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Is a password change required upon next user login?"
          },
          "restapi_permission": {
            "description": "Can this user access the REST API?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Can this user access the REST API?"
          },
          "self_managed": {
            "description": "Does this user manage it's own credentials or is it a shared/bot user?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Does this user manage it's own credentials or is it a shared/bot user?"
          },
          "sftp_permission": {
            "description": "Can the user access with SFTP?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Can the user access with SFTP?"
          },
          "site_admin": {
            "description": "Is the user an administrator for this site?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Is the user an administrator for this site?"
          },
          "skip_welcome_screen": {
            "description": "Skip Welcome page in the UI?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Skip Welcome page in the UI?"
          },
          "ssl_required": {
            "description": "SSL required setting",
            "enum": [
              "use_system_setting",
              "always_require",
              "never_require"
            ],
            "example": "always_require",
            "type": "string",
            "x-ms-summary": "SSL required setting"
          },
          "sso_strategy_id": {
            "description": "SSO (Single Sign On) strategy ID for the user, if applicable.",
            "example": 1,
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "SSO (Single Sign On) strategy ID for the user, if applicable."
          },
          "subscribe_to_newsletter": {
            "description": "Is the user subscribed to the newsletter?",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "Is the user subscribed to the newsletter?"
          },
          "time_zone": {
            "description": "User time zone",
            "example": "Pacific Time (US & Canada)",
            "type": "string",
            "x-ms-summary": "User time zone"
          },
          "user_root": {
            "description": "Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set.)  Note that this is not used for API, Desktop, or Web interface.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set.)  Note that this is not used for API, Desktop, or Web interface."
          },
          "username": {
            "description": "User's username",
            "example": "user",
            "type": "string",
            "x-ms-summary": "User's username"
          }
        },
        "type": "object"
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/users/{id}"
    },
    "body": {
      "$": "body",
      "encode": "multipart"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Create User",
        "**Key properties:**",
        {
          "$ul": [
            "**active_2fa**: Is 2fa active for the user?",
            "**admin_group_ids**: List of group IDs of which this user is an administrator",
            "**allowed_ips**: A list of allowed IPs if applicable.  Newline delimited",
            "**api_keys_count**: Number of api keys associated with this user",
            "**attachments_permission**: DEPRECATED: Can the user create Bundles (aka Share Links)? Use the bundle permission instead.",
            "**authenticate_until**: Scheduled Date/Time at which user will be deactivated",
            "**authentication_method**: How is this user authenticated?",
            "**avatar_url**: URL holding the user's avatar",
            "**billing_permission**: Allow this user to perform operations on the account, payments, and invoices?",
            "**bypass_inactive_disable**: Exempt this user from being disabled based on inactivity?",
            "**bypass_site_allowed_ips**: Allow this user to skip site-wide IP blacklists?",
            "**company**: User's company",
            "**created_at**: When this user was created",
            "**dav_permission**: Can the user connect with WebDAV?",
            "**days_remaining_until_password_expire**: Number of days remaining until password expires",
            "**disabled**: Is user disabled? Disabled users cannot log in, and do not count for billing purposes.  Users can be automatically disabled after an inactivity period via a Site setting.",
            "**email**: User email address",
            "**externally_managed**: Is this user managed by a SsoStrategy?",
            "**first_login_at**: User's first login time",
            "**ftp_permission**: Can the user access with FTP/FTPS?",
            "**group_ids**: Comma-separated list of group IDs of which this user is a member",
            "**header_text**: Text to display to the user in the header of the UI",
            "**id**: User ID",
            "**language**: Preferred language",
            "**last_active_at**: User's most recent activity time, which is the latest of most recent login, most recent API use, enablement, or creation",
            "**last_api_use_at**: User's most recent API use time",
            "**last_dav_login_at**: User's most recent login time via WebDAV",
            "**last_desktop_login_at**: User's most recent login time via Desktop app",
            "**last_ftp_login_at**: User's most recent login time via FTP",
            "**last_login_at**: User's most recent login time via any protocol",
            "**last_protocol_cipher**: The most recent protocol and cipher used",
            "**last_restapi_login_at**: User's most recent login time via Rest API",
            "**last_sftp_login_at**: User's most recent login time via SFTP",
            "**last_web_login_at**: User's most recent login time via web",
            "**lockout_expires**: Time in the future that the user will no longer be locked out if applicable",
            "**name**: User's full name",
            "**notes**: Any internal notes on the user",
            "**notification_daily_send_time**: Hour of the day at which daily notifications should be sent. Can be in range 0 to 23",
            "**office_integration_enabled**: Enable integration with Office for the web?",
            "**password_expire_at**: Password expiration datetime",
            "**password_expired**: Is user's password expired?",
            "**password_set_at**: Last time the user's password was set",
            "**password_validity_days**: Number of days to allow user to use the same password",
            "**public_keys_count**: Number of public keys associated with this user",
            "**receive_admin_alerts**: Should the user receive admin alerts such a certificate expiration notifications and overages?",
            "**require_2fa**: 2FA required setting",
            "**require_password_change**: Is a password change required upon next user login?",
            "**restapi_permission**: Can this user access the REST API?",
            "**self_managed**: Does this user manage it's own credentials or is it a shared/bot user?",
            "**sftp_permission**: Can the user access with SFTP?",
            "**site_admin**: Is the user an administrator for this site?",
            "**skip_welcome_screen**: Skip Welcome page in the UI?",
            "**ssl_required**: SSL required setting",
            "**sso_strategy_id**: SSO (Single Sign On) strategy ID for the user, if applicable.",
            "**subscribe_to_newsletter**: Is the user subscribed to the newsletter?",
            "**time_zone**: User time zone",
            "**type_of_2fa**: Type(s) of 2FA methods in use.  Will be either `sms`, `totp`, `u2f`, `yubi`, or multiple values sorted alphabetically and joined by an underscore.",
            "**user_root**: Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set.)  Note that this is not used for API, Desktop, or Web interface.",
            "**username**: User's username"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
