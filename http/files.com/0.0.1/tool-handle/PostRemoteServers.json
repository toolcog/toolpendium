{
  "name": "PostRemoteServers",
  "description": "Create Remote Server",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "aws_access_key": {
            "description": "AWS Access Key.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "AWS Access Key."
          },
          "aws_secret_key": {
            "description": "AWS secret key.",
            "type": "string",
            "x-ms-summary": "AWS secret key."
          },
          "azure_blob_storage_access_key": {
            "description": "Azure Blob Storage secret key.",
            "type": "string",
            "x-ms-summary": "Azure Blob Storage secret key."
          },
          "azure_blob_storage_account": {
            "description": "Azure Blob Storage Account name",
            "example": "storage-account-name",
            "type": "string",
            "x-ms-summary": "Azure Blob Storage Account name"
          },
          "azure_blob_storage_container": {
            "description": "Azure Blob Storage Container name",
            "example": "container-name",
            "type": "string",
            "x-ms-summary": "Azure Blob Storage Container name"
          },
          "azure_blob_storage_sas_token": {
            "description": "Shared Access Signature (SAS) token",
            "example": "storage-sas-token",
            "type": "string",
            "x-ms-summary": "Shared Access Signature (SAS) token"
          },
          "azure_files_storage_access_key": {
            "description": "Azure File Storage access key.",
            "type": "string",
            "x-ms-summary": "Azure File Storage access key."
          },
          "azure_files_storage_account": {
            "description": "Azure File Storage Account name",
            "example": "storage-account-name",
            "type": "string",
            "x-ms-summary": "Azure File Storage Account name"
          },
          "azure_files_storage_sas_token": {
            "description": "Shared Access Signature (SAS) token",
            "example": "storage-sas-token",
            "type": "string",
            "x-ms-summary": "Shared Access Signature (SAS) token"
          },
          "azure_files_storage_share_name": {
            "description": "Azure File Storage Share name",
            "example": "share-name",
            "type": "string",
            "x-ms-summary": "Azure File Storage Share name"
          },
          "backblaze_b2_application_key": {
            "description": "Backblaze B2 Cloud Storage applicationKey.",
            "type": "string",
            "x-ms-summary": "Backblaze B2 Cloud Storage applicationKey."
          },
          "backblaze_b2_bucket": {
            "description": "Backblaze B2 Cloud Storage Bucket name",
            "example": "my-bucket",
            "type": "string",
            "x-ms-summary": "Backblaze B2 Cloud Storage Bucket name"
          },
          "backblaze_b2_key_id": {
            "description": "Backblaze B2 Cloud Storage keyID.",
            "type": "string",
            "x-ms-summary": "Backblaze B2 Cloud Storage keyID."
          },
          "backblaze_b2_s3_endpoint": {
            "description": "Backblaze B2 Cloud Storage S3 Endpoint",
            "example": "s3.us-west-001.backblazeb2.com",
            "type": "string",
            "x-ms-summary": "Backblaze B2 Cloud Storage S3 Endpoint"
          },
          "enable_dedicated_ips": {
            "description": "`true` if remote server only accepts connections from dedicated IPs",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "`true` if remote server only accepts connections from dedicated IPs"
          },
          "filebase_access_key": {
            "description": "Filebase Access Key.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "Filebase Access Key."
          },
          "filebase_bucket": {
            "description": "Filebase Bucket name",
            "example": "my-bucket",
            "type": "string",
            "x-ms-summary": "Filebase Bucket name"
          },
          "filebase_secret_key": {
            "description": "Filebase secret key",
            "type": "string",
            "x-ms-summary": "Filebase secret key"
          },
          "files_agent_permission_set": {
            "description": "Local permissions for files agent. read_only, write_only, or read_write",
            "enum": [
              "read_write",
              "read_only",
              "write_only"
            ],
            "example": "read_write",
            "type": "string",
            "x-ms-summary": "Local permissions for files agent. read_only, write_only, or read_write"
          },
          "files_agent_root": {
            "description": "Agent local root path",
            "example": "example",
            "type": "string",
            "x-ms-summary": "Agent local root path"
          },
          "google_cloud_storage_bucket": {
            "description": "Google Cloud Storage bucket name",
            "example": "my-bucket",
            "type": "string",
            "x-ms-summary": "Google Cloud Storage bucket name"
          },
          "google_cloud_storage_credentials_json": {
            "description": "A JSON file that contains the private key. To generate see https://cloud.google.com/storage/docs/json_api/v1/how-tos/authorizing#APIKey",
            "type": "string",
            "x-ms-summary": "A JSON file that contains the private key. To generate see https://cloud.google.com/storage/docs/json_api/v1/how-tos/authorizing#APIKey"
          },
          "google_cloud_storage_project_id": {
            "description": "Google Cloud Project ID",
            "example": "my-project",
            "type": "string",
            "x-ms-summary": "Google Cloud Project ID"
          },
          "hostname": {
            "description": "Hostname or IP address",
            "example": "remote-server.com",
            "type": "string",
            "x-ms-summary": "Hostname or IP address"
          },
          "max_connections": {
            "description": "Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).",
            "example": 1,
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible)."
          },
          "name": {
            "description": "Internal name for your reference",
            "example": "My Remote server",
            "type": "string",
            "x-ms-summary": "Internal name for your reference"
          },
          "one_drive_account_type": {
            "description": "Either personal or business_other account types",
            "enum": [
              "personal",
              "business_other"
            ],
            "example": "personal",
            "type": "string",
            "x-ms-summary": "Either personal or business_other account types"
          },
          "password": {
            "description": "Password if needed.",
            "type": "string",
            "x-ms-summary": "Password if needed."
          },
          "pin_to_site_region": {
            "description": "If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true.",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true."
          },
          "port": {
            "description": "Port for remote server.  Not needed for S3.",
            "example": 1,
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "Port for remote server.  Not needed for S3."
          },
          "private_key": {
            "description": "Private key if needed.",
            "type": "string",
            "x-ms-summary": "Private key if needed."
          },
          "private_key_passphrase": {
            "description": "Passphrase for private key if needed.",
            "type": "string",
            "x-ms-summary": "Passphrase for private key if needed."
          },
          "rackspace_api_key": {
            "description": "Rackspace API key from the Rackspace Cloud Control Panel.",
            "type": "string",
            "x-ms-summary": "Rackspace API key from the Rackspace Cloud Control Panel."
          },
          "rackspace_container": {
            "description": "The name of the container (top level directory) where files will sync.",
            "example": "my-container",
            "type": "string",
            "x-ms-summary": "The name of the container (top level directory) where files will sync."
          },
          "rackspace_region": {
            "description": "Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/",
            "example": "dfw",
            "type": "string",
            "x-ms-summary": "Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/"
          },
          "rackspace_username": {
            "description": "Rackspace username used to login to the Rackspace Cloud Control Panel.",
            "example": "rackspaceuser",
            "type": "string",
            "x-ms-summary": "Rackspace username used to login to the Rackspace Cloud Control Panel."
          },
          "reset_authentication": {
            "description": "Reset authenticated account",
            "type": "boolean",
            "x-ms-summary": "Reset authenticated account"
          },
          "s3_bucket": {
            "description": "S3 bucket name",
            "example": "my-bucket",
            "type": "string",
            "x-ms-summary": "S3 bucket name"
          },
          "s3_compatible_access_key": {
            "description": "S3-compatible Access Key.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "S3-compatible Access Key."
          },
          "s3_compatible_bucket": {
            "description": "S3-compatible Bucket name",
            "example": "my-bucket",
            "type": "string",
            "x-ms-summary": "S3-compatible Bucket name"
          },
          "s3_compatible_endpoint": {
            "description": "S3-compatible endpoint",
            "example": "mys3platform.com",
            "type": "string",
            "x-ms-summary": "S3-compatible endpoint"
          },
          "s3_compatible_region": {
            "description": "S3-compatible endpoint",
            "example": "us-east-1",
            "type": "string",
            "x-ms-summary": "S3-compatible endpoint"
          },
          "s3_compatible_secret_key": {
            "description": "S3-compatible secret key",
            "type": "string",
            "x-ms-summary": "S3-compatible secret key"
          },
          "s3_region": {
            "description": "S3 region",
            "example": "us-east-1",
            "type": "string",
            "x-ms-summary": "S3 region"
          },
          "server_certificate": {
            "description": "Remote server certificate",
            "enum": [
              "require_match",
              "allow_any"
            ],
            "example": "require_match",
            "type": "string",
            "x-ms-summary": "Remote server certificate"
          },
          "server_host_key": {
            "description": "Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts",
            "example": "[public key]",
            "type": "string",
            "x-ms-summary": "Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts"
          },
          "server_type": {
            "description": "Remote server type.",
            "enum": [
              "ftp",
              "sftp",
              "s3",
              "google_cloud_storage",
              "webdav",
              "wasabi",
              "backblaze_b2",
              "one_drive",
              "rackspace",
              "box",
              "dropbox",
              "google_drive",
              "azure",
              "sharepoint",
              "s3_compatible",
              "azure_files",
              "files_agent",
              "filebase"
            ],
            "example": "s3",
            "type": "string",
            "x-ms-summary": "Remote server type."
          },
          "ssl": {
            "description": "Should we require SSL?",
            "enum": [
              "if_available",
              "require",
              "require_implicit",
              "never"
            ],
            "example": "if_available",
            "type": "string",
            "x-ms-summary": "Should we require SSL?"
          },
          "ssl_certificate": {
            "description": "SSL client certificate.",
            "type": "string",
            "x-ms-summary": "SSL client certificate."
          },
          "username": {
            "description": "Remote server username.  Not needed for S3 buckets.",
            "example": "user",
            "type": "string",
            "x-ms-summary": "Remote server username.  Not needed for S3 buckets."
          },
          "wasabi_access_key": {
            "description": "Wasabi access key.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "Wasabi access key."
          },
          "wasabi_bucket": {
            "description": "Wasabi Bucket name",
            "example": "my-bucket",
            "type": "string",
            "x-ms-summary": "Wasabi Bucket name"
          },
          "wasabi_region": {
            "description": "Wasabi region",
            "example": "us-west-1",
            "type": "string",
            "x-ms-summary": "Wasabi region"
          },
          "wasabi_secret_key": {
            "description": "Wasabi secret key.",
            "type": "string",
            "x-ms-summary": "Wasabi secret key."
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/remote_servers"
    },
    "body": {
      "$": "body",
      "encode": "multipart"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Create Remote Server",
        "**Key properties:**",
        {
          "$ul": [
            "**auth_account_name**: Describes the authorized account",
            "**auth_setup_link**: Returns link to login with an Oauth provider",
            "**auth_status**: Either `in_setup` or `complete`",
            "**authentication_method**: Type of authentication method",
            "**aws_access_key**: AWS Access Key.",
            "**azure_blob_storage_account**: Azure Blob Storage Account name",
            "**azure_blob_storage_container**: Azure Blob Storage Container name",
            "**azure_blob_storage_sas_token**: Shared Access Signature (SAS) token",
            "**azure_files_storage_account**: Azure File Storage Account name",
            "**azure_files_storage_sas_token**: Shared Access Signature (SAS) token",
            "**azure_files_storage_share_name**: Azure File Storage Share name",
            "**backblaze_b2_bucket**: Backblaze B2 Cloud Storage Bucket name",
            "**backblaze_b2_s3_endpoint**: Backblaze B2 Cloud Storage S3 Endpoint",
            "**disabled**: If true, this server has been disabled due to failures.  Make any change or set disabled to false to clear this flag.",
            "**enable_dedicated_ips**: `true` if remote server only accepts connections from dedicated IPs",
            "**filebase_access_key**: Filebase Access Key.",
            "**filebase_bucket**: Filebase Bucket name",
            "**files_agent_api_token**: Files Agent API Token",
            "**files_agent_permission_set**: Local permissions for files agent. read_only, write_only, or read_write",
            "**files_agent_root**: Agent local root path",
            "**google_cloud_storage_bucket**: Google Cloud Storage bucket name",
            "**google_cloud_storage_project_id**: Google Cloud Project ID",
            "**hostname**: Hostname or IP address",
            "**id**: Remote server ID",
            "**max_connections**: Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).",
            "**name**: Internal name for your reference",
            "**one_drive_account_type**: Either personal or business_other account types",
            "**pin_to_site_region**: If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true.",
            "**pinned_region**: If set, all communciations with this remote server are made through the provided region.",
            "**port**: Port for remote server.  Not needed for S3.",
            "**rackspace_container**: The name of the container (top level directory) where files will sync.",
            "**rackspace_region**: Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/",
            "**rackspace_username**: Rackspace username used to login to the Rackspace Cloud Control Panel.",
            "**remote_home_path**: Initial home folder on remote server",
            "**s3_bucket**: S3 bucket name",
            "**s3_compatible_access_key**: S3-compatible Access Key.",
            "**s3_compatible_bucket**: S3-compatible Bucket name",
            "**s3_compatible_endpoint**: S3-compatible endpoint",
            "**s3_compatible_region**: S3-compatible endpoint",
            "**s3_region**: S3 region",
            "**server_certificate**: Remote server certificate",
            "**server_host_key**: Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts",
            "**server_type**: Remote server type.",
            "**ssl**: Should we require SSL?",
            "**username**: Remote server username.  Not needed for S3 buckets.",
            "**wasabi_access_key**: Wasabi access key.",
            "**wasabi_bucket**: Wasabi Bucket name",
            "**wasabi_region**: Wasabi region"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
