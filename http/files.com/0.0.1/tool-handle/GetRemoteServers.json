{
  "name": "GetRemoteServers",
  "description": "List Remote Servers",
  "parameters": {
    "type": "object",
    "properties": {
      "cursor": {
        "type": "string",
        "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
      },
      "per_page": {
        "format": "int32",
        "type": "integer",
        "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/remote_servers{?cursor,per_page}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Create Remote Server",
        "**Key properties:**",
        {
          "$ul": [
            "**auth_account_name**: Describes the authorized account",
            "**auth_setup_link**: Returns link to login with an Oauth provider",
            "**auth_status**: Either `in_setup` or `complete`",
            "**authentication_method**: Type of authentication method",
            "**aws_access_key**: AWS Access Key.",
            "**azure_blob_storage_account**: Azure Blob Storage Account name",
            "**azure_blob_storage_container**: Azure Blob Storage Container name",
            "**azure_blob_storage_sas_token**: Shared Access Signature (SAS) token",
            "**azure_files_storage_account**: Azure File Storage Account name",
            "**azure_files_storage_sas_token**: Shared Access Signature (SAS) token",
            "**azure_files_storage_share_name**: Azure File Storage Share name",
            "**backblaze_b2_bucket**: Backblaze B2 Cloud Storage Bucket name",
            "**backblaze_b2_s3_endpoint**: Backblaze B2 Cloud Storage S3 Endpoint",
            "**disabled**: If true, this server has been disabled due to failures.  Make any change or set disabled to false to clear this flag.",
            "**enable_dedicated_ips**: `true` if remote server only accepts connections from dedicated IPs",
            "**filebase_access_key**: Filebase Access Key.",
            "**filebase_bucket**: Filebase Bucket name",
            "**files_agent_api_token**: Files Agent API Token",
            "**files_agent_permission_set**: Local permissions for files agent. read_only, write_only, or read_write",
            "**files_agent_root**: Agent local root path",
            "**google_cloud_storage_bucket**: Google Cloud Storage bucket name",
            "**google_cloud_storage_project_id**: Google Cloud Project ID",
            "**hostname**: Hostname or IP address",
            "**id**: Remote server ID",
            "**max_connections**: Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).",
            "**name**: Internal name for your reference",
            "**one_drive_account_type**: Either personal or business_other account types",
            "**pin_to_site_region**: If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true.",
            "**pinned_region**: If set, all communciations with this remote server are made through the provided region.",
            "**port**: Port for remote server.  Not needed for S3.",
            "**rackspace_container**: The name of the container (top level directory) where files will sync.",
            "**rackspace_region**: Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/",
            "**rackspace_username**: Rackspace username used to login to the Rackspace Cloud Control Panel.",
            "**remote_home_path**: Initial home folder on remote server",
            "**s3_bucket**: S3 bucket name",
            "**s3_compatible_access_key**: S3-compatible Access Key.",
            "**s3_compatible_bucket**: S3-compatible Bucket name",
            "**s3_compatible_endpoint**: S3-compatible endpoint",
            "**s3_compatible_region**: S3-compatible endpoint",
            "**s3_region**: S3 region",
            "**server_certificate**: Remote server certificate",
            "**server_host_key**: Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts",
            "**server_type**: Remote server type.",
            "**ssl**: Should we require SSL?",
            "**username**: Remote server username.  Not needed for S3 buckets.",
            "**wasabi_access_key**: Wasabi access key.",
            "**wasabi_bucket**: Wasabi Bucket name",
            "**wasabi_region**: Wasabi region"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
