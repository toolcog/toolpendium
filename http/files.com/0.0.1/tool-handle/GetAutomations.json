{
  "name": "GetAutomations",
  "description": "List Automations",
  "parameters": {
    "type": "object",
    "properties": {
      "cursor": {
        "type": "string",
        "description": "Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."
      },
      "per_page": {
        "format": "int32",
        "type": "integer",
        "description": "Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."
      },
      "sort_by": {
        "type": "object",
        "description": "If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[automation]=desc`). Valid fields are `automation`, `disabled`, `last_modified_at` or `name`."
      },
      "automation": {
        "type": "string",
        "description": "If set, return records where the specified field is equal to the supplied value."
      },
      "filter": {
        "type": "object",
        "description": "If set, return records where the specified field is equal to the supplied value. Valid fields are `disabled`, `last_modified_at` or `automation`. Valid field combinations are `[ automation, disabled ]` and `[ disabled, automation ]`."
      },
      "filter_gt": {
        "type": "object",
        "description": "If set, return records where the specified field is greater than the supplied value. Valid fields are `last_modified_at`."
      },
      "filter_gteq": {
        "type": "object",
        "description": "If set, return records where the specified field is greater than or equal the supplied value. Valid fields are `last_modified_at`."
      },
      "filter_lt": {
        "type": "object",
        "description": "If set, return records where the specified field is less than the supplied value. Valid fields are `last_modified_at`."
      },
      "filter_lteq": {
        "type": "object",
        "description": "If set, return records where the specified field is less than or equal the supplied value. Valid fields are `last_modified_at`."
      },
      "with_deleted": {
        "type": "boolean",
        "description": "Set to true to include deleted automations in the results."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/automations{?cursor,per_page,sort_by,automation,filter,filter_gt,filter_gteq,filter_lt,filter_lteq,with_deleted}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "List Automations",
        "**Key properties:**",
        {
          "$ul": [
            "**automation**: Automation type",
            "**deleted**: Indicates if the automation has been deleted.",
            "**description**: Description for the this Automation.",
            "**destination_replace_from**: If set, this string in the destination path will be replaced with the value in `destination_replace_to`.",
            "**destination_replace_to**: If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.",
            "**destinations**: Destination Path",
            "**disabled**: If true, this automation will not run.",
            "**group_ids**: IDs of Groups for the Automation (i.e. who to Request File from)",
            "**id**: Automation ID",
            "**interval**: If trigger is `daily`, this specifies how often to run this automation.  One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`",
            "**last_modified_at**: Time when automation was last modified. Does not change for name or description updates.",
            "**name**: Name for this automation.",
            "**path**: Path on which this Automation runs.  Supports globs.",
            "**recurring_day**: If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.",
            "**schedule**: If trigger is `custom_schedule`, Custom schedule description for when the automation should be run.",
            "**source**: Source Path",
            "**sync_ids**: IDs of remote sync folder behaviors to run by this Automation",
            "**trigger**: How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.",
            "**trigger_actions**: If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy",
            "**user_id**: User ID of the Automation's creator.",
            "**user_ids**: IDs of Users for the Automation (i.e. who to Request File from)",
            "**value**: A Hash of attributes specific to the automation type.",
            "**webhook_url**: If trigger is `webhook`, this is the URL of the webhook to trigger the Automation."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
