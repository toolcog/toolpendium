{
  "name": "PatchAutomationsId",
  "description": "Update Automation",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "format": "int32",
        "type": "integer",
        "description": "Automation ID."
      },
      "body": {
        "properties": {
          "automation": {
            "description": "Automation type",
            "enum": [
              "create_folder",
              "request_file",
              "request_move",
              "copy_newest_file",
              "delete_file",
              "copy_file",
              "move_file",
              "as2_send",
              "run_sync"
            ],
            "example": "create_folder",
            "type": "string",
            "x-ms-summary": "Automation type"
          },
          "description": {
            "description": "Description for the this Automation.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "Description for the this Automation."
          },
          "destination": {
            "description": "DEPRECATED: Destination Path. Use `destinations` instead.",
            "type": "string",
            "x-ms-summary": "DEPRECATED: Destination Path. Use `destinations` instead."
          },
          "destination_replace_from": {
            "description": "If set, this string in the destination path will be replaced with the value in `destination_replace_to`.",
            "type": "string",
            "x-ms-summary": "If set, this string in the destination path will be replaced with the value in `destination_replace_to`."
          },
          "destination_replace_to": {
            "description": "If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.",
            "type": "string",
            "x-ms-summary": "If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here."
          },
          "destinations": {
            "description": "A list of String destination paths or Hash of folder_path and optional file_path.",
            "example": [
              "folder_a/file_a.txt",
              {
                "file_path": "file_b.txt",
                "folder_path": "folder_b"
              },
              {
                "folder_path": "folder_c"
              }
            ],
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-ms-summary": "A list of String destination paths or Hash of folder_path and optional file_path."
          },
          "disabled": {
            "description": "If true, this automation will not run.",
            "example": true,
            "type": "boolean",
            "x-ms-summary": "If true, this automation will not run."
          },
          "group_ids": {
            "description": "A list of group IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
            "type": "string",
            "x-ms-summary": "A list of group IDs the automation is associated with. If sent as a string, it should be comma-delimited."
          },
          "interval": {
            "description": "How often to run this automation? One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`",
            "example": "year",
            "type": "string",
            "x-ms-summary": "How often to run this automation? One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`"
          },
          "name": {
            "description": "Name for this automation.",
            "example": "example",
            "type": "string",
            "x-ms-summary": "Name for this automation."
          },
          "path": {
            "description": "Path on which this Automation runs.  Supports globs.",
            "type": "string",
            "x-ms-summary": "Path on which this Automation runs.  Supports globs."
          },
          "recurring_day": {
            "description": "If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.",
            "example": 25,
            "format": "int32",
            "type": "integer",
            "x-ms-summary": "If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`."
          },
          "schedule": {
            "description": "Custom schedule for running this automation.",
            "example": {
              "days_of_week": [
                0,
                1,
                3
              ],
              "time_zone": "Eastern Time (US & Canada)",
              "times_of_day": [
                "7:30",
                "11:30"
              ]
            },
            "type": "object",
            "x-ms-summary": "Custom schedule for running this automation."
          },
          "source": {
            "description": "Source Path",
            "example": "source",
            "type": "string",
            "x-ms-summary": "Source Path"
          },
          "sync_ids": {
            "description": "A list of sync IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
            "type": "string",
            "x-ms-summary": "A list of sync IDs the automation is associated with. If sent as a string, it should be comma-delimited."
          },
          "trigger": {
            "description": "How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.",
            "enum": [
              "realtime",
              "daily",
              "custom_schedule",
              "webhook",
              "email",
              "action"
            ],
            "example": "realtime",
            "type": "string",
            "x-ms-summary": "How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`."
          },
          "trigger_actions": {
            "description": "If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy",
            "example": [
              "create"
            ],
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-ms-summary": "If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy"
          },
          "user_ids": {
            "description": "A list of user IDs the automation is associated with. If sent as a string, it should be comma-delimited.",
            "type": "string",
            "x-ms-summary": "A list of user IDs the automation is associated with. If sent as a string, it should be comma-delimited."
          },
          "value": {
            "description": "A Hash of attributes specific to the automation type.",
            "example": {
              "limit": "1"
            },
            "type": "object",
            "x-ms-summary": "A Hash of attributes specific to the automation type."
          }
        },
        "type": "object"
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "//app.files.com/api/rest/v1/automations/{id}"
    },
    "body": {
      "$": "body",
      "encode": "multipart"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "List Automations",
        "**Key properties:**",
        {
          "$ul": [
            "**automation**: Automation type",
            "**deleted**: Indicates if the automation has been deleted.",
            "**description**: Description for the this Automation.",
            "**destination_replace_from**: If set, this string in the destination path will be replaced with the value in `destination_replace_to`.",
            "**destination_replace_to**: If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.",
            "**destinations**: Destination Path",
            "**disabled**: If true, this automation will not run.",
            "**group_ids**: IDs of Groups for the Automation (i.e. who to Request File from)",
            "**id**: Automation ID",
            "**interval**: If trigger is `daily`, this specifies how often to run this automation.  One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`",
            "**last_modified_at**: Time when automation was last modified. Does not change for name or description updates.",
            "**name**: Name for this automation.",
            "**path**: Path on which this Automation runs.  Supports globs.",
            "**recurring_day**: If trigger type is `daily`, this specifies a day number to run in one of the supported intervals: `week`, `month`, `quarter`, `year`.",
            "**schedule**: If trigger is `custom_schedule`, Custom schedule description for when the automation should be run.",
            "**source**: Source Path",
            "**sync_ids**: IDs of remote sync folder behaviors to run by this Automation",
            "**trigger**: How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.",
            "**trigger_actions**: If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy",
            "**user_id**: User ID of the Automation's creator.",
            "**user_ids**: IDs of Users for the Automation (i.e. who to Request File from)",
            "**value**: A Hash of attributes specific to the automation type.",
            "**webhook_url**: If trigger is `webhook`, this is the URL of the webhook to trigger the Automation."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
