{
  "name": "renderSync",
  "description": "Render a URL as an image or video",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/RenderRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "RenderRequest": {
        "oneOf": [
          {
            "required": [
              "url"
            ]
          },
          {
            "required": [
              "html"
            ]
          }
        ],
        "properties": {
          "block_ads": {
            "description": "Whether to block ads on the rendered page",
            "type": "boolean"
          },
          "click_accept": {
            "description": "Whether to automatically click accept buttons on the rendered page",
            "type": "boolean"
          },
          "delay": {
            "description": "The amount of milliseconds to delay before taking a screenshot",
            "type": "string"
          },
          "format": {
            "description": "The format of the rendered output",
            "enum": [
              "png",
              "jpg",
              "pdf",
              "svg",
              "mp4",
              "webp",
              "webm",
              "html"
            ],
            "type": "string"
          },
          "full_page": {
            "description": "Whether to capture the full page",
            "type": "boolean"
          },
          "gpu": {
            "description": "Whether to enable GPU rendering",
            "type": "boolean"
          },
          "height": {
            "description": "The viewport height of the rendered output",
            "type": "integer"
          },
          "hide_cookie_banners": {
            "description": "Whether to hide cookie banners on the rendered page",
            "type": "boolean"
          },
          "html": {
            "description": "The raw HTML to render as an image or video",
            "type": "string"
          },
          "metadata": {
            "description": "Whether to return metadata about the URL",
            "type": "boolean"
          },
          "retina": {
            "description": "Whether to render the image in retina quality",
            "type": "boolean"
          },
          "selector": {
            "description": "The CSS selector of an element you would like to capture",
            "type": "string"
          },
          "thumb_height": {
            "description": "The height of the thumbnail image",
            "type": "integer"
          },
          "thumb_width": {
            "description": "The width of the thumbnail image",
            "type": "integer"
          },
          "url": {
            "description": "The URL to render as an image or video",
            "type": "string"
          },
          "wait_for": {
            "description": "CSS selector of an element to wait to be present in the web page before rendering",
            "type": "string"
          },
          "wait_to_leave": {
            "description": "CSS selector of an element, such as a loading spinner, to wait to leave the web page before rendering",
            "type": "string"
          },
          "wait_until": {
            "description": "When",
            "enum": [
              "requestsfinished",
              "mostrequestsfinished",
              "loaded",
              "domloaded"
            ],
            "type": "string"
          },
          "width": {
            "description": "The viewport width of the rendered output",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.urlbox.io/v1/render/sync"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**renderUrl**: The URL where the rendered output is stored",
            "**size**: The size of the rendered output in bytes"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "307": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**location**: The URL to follow for the long running request",
            "**message**: A human-readable message indicating the need to follow the redirect"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**: A machine-readable error code",
                  "**message**: A human-readable error message"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**: A machine-readable error code",
                  "**message**: A human-readable error message"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**code**: A machine-readable error code",
                  "**message**: A human-readable error message"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
