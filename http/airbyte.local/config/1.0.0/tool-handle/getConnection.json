{
  "name": "getConnection",
  "description": "Get a connection",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/ConnectionIdRequestBody"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ConnectionIdRequestBody": {
        "properties": {
          "connectionId": {
            "$ref": "#/$defs/ConnectionId"
          }
        },
        "required": [
          "connectionId"
        ],
        "type": "object"
      },
      "ConnectionId": {
        "format": "uuid",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://airbyte.local/v1/connections/get"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**breakingChange**",
            "**connectionId**",
            "**destinationId**",
            "**geography**",
            "**name**",
            "**namespaceDefinition**: Method used for computing final namespace in destination",
            "**namespaceFormat**: Used when namespaceDefinition is 'customformat'. If blank then behaves like namespaceDefinition = 'destination'. If \"${SOURCE_NAMESPACE}\" then behaves like namespaceDefinition = 'source'. (default: null)",
            "**nonBreakingChangesPreference**",
            "**notifySchemaChanges**",
            "**operationIds**",
            "**prefix**: Prefix that will be prepended to the name of each stream when it is written to the destination.",
            [
              "**resourceRequirements**: optional resource requirements to run workers (blank for unbounded allocations)",
              {
                "$ul": [
                  "**cpu_limit**",
                  "**cpu_request**",
                  "**memory_limit**",
                  "**memory_request**"
                ]
              }
            ],
            [
              "**schedule**: if null, then no schedule is set.",
              {
                "$ul": [
                  "**timeUnit**",
                  "**units**"
                ]
              }
            ],
            [
              "**scheduleData**: schedule for when the the connection should run, per the schedule type",
              {
                "$ul": [
                  [
                    "**basicSchedule**",
                    {
                      "$ul": [
                        "**timeUnit**",
                        "**units**"
                      ]
                    }
                  ],
                  [
                    "**cron**",
                    {
                      "$ul": [
                        "**cronExpression**",
                        "**cronTimeZone**"
                      ]
                    }
                  ]
                ]
              }
            ],
            "**scheduleType**: determine how the schedule data should be interpreted",
            "**sourceCatalogId**",
            "**sourceId**",
            "**status**: Active means that data is flowing through the connection. Inactive means it is not. Deprecated means the connection is off and cannot be re-activated. the schema field describes the elements of the schema that will be synced.",
            [
              "**syncCatalog**: describes the available schema (catalog).",
              {
                "$ul": [
                  "**streams**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**exceptionClassName**",
            "**exceptionStack**",
            "**id**",
            "**message**",
            "**rootCauseExceptionClassName**",
            "**rootCauseExceptionStack**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**exceptionClassName**",
            "**exceptionStack**",
            "**message**",
            "**validationErrors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
