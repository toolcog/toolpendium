{
  "name": "getDestinationDefinitionSpecification",
  "description": "Get specification for a destinationDefinition",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/DestinationDefinitionIdWithWorkspaceId"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "DestinationDefinitionIdWithWorkspaceId": {
        "properties": {
          "destinationDefinitionId": {
            "$ref": "#/$defs/DestinationDefinitionId"
          },
          "workspaceId": {
            "$ref": "#/$defs/WorkspaceId"
          }
        },
        "required": [
          "destinationDefinitionId",
          "workspaceId"
        ],
        "type": "object"
      },
      "DestinationDefinitionId": {
        "format": "uuid",
        "type": "string"
      },
      "WorkspaceId": {
        "format": "uuid",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://airbyte.local/v1/destination_definition_specifications/get"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**advancedAuth**",
              {
                "$ul": [
                  "**authFlowType**",
                  [
                    "**oauthConfigSpecification**",
                    {
                      "$ul": [
                        "**completeOAuthOutputSpecification**: The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.",
                        "**completeOAuthServerInputSpecification**: The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.",
                        "**completeOAuthServerOutputSpecification**: The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema.",
                        "**oauthUserInputFromConnectorConfigSpecification**: The values required to configure OAuth flows. The schema for this must match the `OAuthConfigSpecification.oauthUserInputFromConnectorConfigSpecification` schema."
                      ]
                    }
                  ],
                  "**predicateKey**: Json Path to a field in the connectorSpecification that should exist for the advanced auth to be applicable.",
                  "**predicateValue**: Value of the predicate_key fields for the advanced auth to be applicable."
                ]
              }
            ],
            [
              "**authSpecification**",
              {
                "$ul": [
                  "**auth_type**",
                  [
                    "**oauth2Specification**: An object containing any metadata needed to describe this connector's Oauth flow",
                    {
                      "$ul": [
                        "**oauthFlowInitParameters**: Pointers to the fields in the rootObject needed to obtain the initial refresh/access tokens for the OAuth flow. Each inner array represents the path in the rootObject of the referenced field. For example. Assume the rootObject contains params 'app_secret', 'app_id' which are needed to get the initial refresh token. If they are not nested in the rootObject, then the array would look like this [['app_secret'], ['app_id']] If they are nested inside an object called 'auth_params' then this array would be [['auth_params', 'app_secret'], ['auth_params', 'app_id']]",
                        "**oauthFlowOutputParameters**: Pointers to the fields in the rootObject which can be populated from successfully completing the oauth flow using the init parameters. This is typically a refresh/access token. Each inner array represents the path in the rootObject of the referenced field.",
                        "**rootObject**: A list of strings representing a pointer to the root object which contains any oauth parameters in the ConnectorSpecification."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**connectionSpecification**: The specification for what values are required to configure the destinationDefinition.",
            "**destinationDefinitionId**",
            "**documentationUrl**",
            [
              "**jobInfo**",
              {
                "$ul": [
                  "**configId**: only present if a config id was provided.",
                  "**configType**",
                  "**connectorConfigurationUpdated** (default: false)",
                  "**createdAt**",
                  "**endedAt**",
                  "**id**",
                  [
                    "**logs**",
                    {
                      "$ul": [
                        "**logLines**"
                      ]
                    }
                  ],
                  "**succeeded**"
                ]
              }
            ],
            "**supportedDestinationSyncModes**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**exceptionClassName**",
            "**exceptionStack**",
            "**id**",
            "**message**",
            "**rootCauseExceptionClassName**",
            "**rootCauseExceptionStack**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**exceptionClassName**",
            "**exceptionStack**",
            "**message**",
            "**validationErrors**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
