{
  "name": "getNotificationsByIdNotification",
  "description": "getNotificationsByIdNotification()",
  "parameters": {
    "type": "object",
    "properties": {
      "idNotification": {
        "type": "string",
        "description": "idNotification"
      },
      "display": {
        "type": "string",
        "description": " true or false"
      },
      "entities": {
        "type": "string",
        "description": " true or false"
      },
      "fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: data, date, idMemberCreator, type or unread"
      },
      "memberCreator": {
        "type": "string",
        "description": " true or false"
      },
      "memberCreator_fields": {
        "default": "avatarHash, fullName, initials and username",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "board": {
        "type": "string",
        "description": " true or false"
      },
      "board_fields": {
        "default": "name",
        "type": "string",
        "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url"
      },
      "list": {
        "type": "string",
        "description": " true or false"
      },
      "card": {
        "type": "string",
        "description": " true or false"
      },
      "card_fields": {
        "default": "name",
        "type": "string",
        "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
      },
      "organization": {
        "type": "string",
        "description": " true or false"
      },
      "organization_fields": {
        "default": "displayName",
        "type": "string",
        "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website"
      },
      "member": {
        "type": "string",
        "description": " true or false"
      },
      "member_fields": {
        "default": "avatarHash, fullName, initials and username",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "key": {
        "type": "string",
        "description": "<a href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\">Generate your application key</a>"
      },
      "token": {
        "type": "string",
        "description": "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\">Getting a token from a user</a>"
      }
    },
    "required": [
      "idNotification",
      "key",
      "token"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://trello.com/1/notifications/{idNotification}{?display,entities,fields,memberCreator,memberCreator_fields,board,board_fields,list,card,card_fields,organization,organization_fields,member,member_fields,key,token}"
    }
  },
  "responses": {}
}
