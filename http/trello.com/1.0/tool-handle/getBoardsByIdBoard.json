{
  "name": "getBoardsByIdBoard",
  "description": "getBoardsByIdBoard()",
  "parameters": {
    "type": "object",
    "properties": {
      "idBoard": {
        "type": "string",
        "description": "board_id"
      },
      "actions": {
        "type": "string",
        "description": "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard, addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard, commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard, createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard, deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp, emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization, makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard, moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard, removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation, updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList, updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList, updateList:closed, updateList:name, updateMember or updateOrganization"
      },
      "actions_entities": {
        "type": "string",
        "description": " true or false"
      },
      "actions_display": {
        "type": "string",
        "description": " true or false"
      },
      "actions_format": {
        "default": "list",
        "type": "string",
        "description": "One of: count, list or minimal"
      },
      "actions_since": {
        "type": "string",
        "description": "A date, null or lastView"
      },
      "actions_limit": {
        "default": "50",
        "type": "string",
        "description": "a number from 0 to 1000"
      },
      "action_fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: data, date, idMemberCreator or type"
      },
      "action_member": {
        "type": "string",
        "description": " true or false"
      },
      "action_member_fields": {
        "default": "avatarHash, fullName, initials and username",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "action_memberCreator": {
        "type": "string",
        "description": " true or false"
      },
      "action_memberCreator_fields": {
        "default": "avatarHash, fullName, initials and username",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "cards": {
        "default": "none",
        "type": "string",
        "description": "One of: all, closed, none, open or visible"
      },
      "card_fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: badges, checkItemStates, closed, dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels, manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
      },
      "card_attachments": {
        "type": "string",
        "description": "A boolean value or &quot;cover&quot; for only card cover attachments"
      },
      "card_attachment_fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: bytes, date, edgeColor, idMember, isUpload, mimeType, name, previews or url"
      },
      "card_checklists": {
        "default": "none",
        "type": "string",
        "description": "One of: all or none"
      },
      "card_stickers": {
        "type": "string",
        "description": " true or false"
      },
      "boardStars": {
        "default": "none",
        "type": "string",
        "description": "One of: mine or none"
      },
      "labels": {
        "default": "none",
        "type": "string",
        "description": "One of: all or none"
      },
      "label_fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: color, idBoard, name or uses"
      },
      "labels_limit": {
        "default": "50",
        "type": "string",
        "description": "a number from 0 to 1000"
      },
      "lists": {
        "default": "none",
        "type": "string",
        "description": "One of: all, closed, none or open"
      },
      "list_fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: closed, idBoard, name, pos or subscribed"
      },
      "memberships": {
        "default": "none",
        "type": "string",
        "description": "all or a comma-separated list of: active, admin, deactivated, me or normal"
      },
      "memberships_member": {
        "type": "string",
        "description": " true or false"
      },
      "memberships_member_fields": {
        "default": "fullName and username",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "members": {
        "default": "none",
        "type": "string",
        "description": "One of: admins, all, none, normal or owners"
      },
      "member_fields": {
        "default": "avatarHash, initials, fullName, username and confirmed",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "membersInvited": {
        "default": "none",
        "type": "string",
        "description": "One of: admins, all, none, normal or owners"
      },
      "membersInvited_fields": {
        "default": "avatarHash, initials, fullName and username",
        "type": "string",
        "description": "all or a comma-separated list of: avatarHash, bio, bioData, confirmed, fullName, idPremOrgsAdmin, initials, memberType, products, status, url or username"
      },
      "checklists": {
        "default": "none",
        "type": "string",
        "description": "One of: all or none"
      },
      "checklist_fields": {
        "default": "all",
        "type": "string",
        "description": "all or a comma-separated list of: idBoard, idCard, name or pos"
      },
      "organization": {
        "type": "string",
        "description": " true or false"
      },
      "organization_fields": {
        "default": "name and displayName",
        "type": "string",
        "description": "all or a comma-separated list of: billableMemberCount, desc, descData, displayName, idBoards, invitations, invited, logoHash, memberships, name, powerUps, prefs, premiumFeatures, products, url or website"
      },
      "organization_memberships": {
        "default": "none",
        "type": "string",
        "description": "all or a comma-separated list of: active, admin, deactivated, me or normal"
      },
      "myPrefs": {
        "type": "string",
        "description": " true or false"
      },
      "fields": {
        "default": "name, desc, descData, closed, idOrganization, pinned, url, shortUrl, prefs and labelNames",
        "type": "string",
        "description": "all or a comma-separated list of: closed, dateLastActivity, dateLastView, desc, descData, idOrganization, invitations, invited, labelNames, memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred, subscribed or url"
      },
      "key": {
        "type": "string",
        "description": "<a href=\"https://trello.com/1/appKey/generate\"  target=\"_blank\">Generate your application key</a>"
      },
      "token": {
        "type": "string",
        "description": "<a href=\"https://trello.com/docs/gettingstarted/index.html#getting-a-token-from-a-user\"  target=\"_blank\">Getting a token from a user</a>"
      }
    },
    "required": [
      "idBoard",
      "key",
      "token"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://trello.com/1/boards/{idBoard}{?actions,actions_entities,actions_display,actions_format,actions_since,actions_limit,action_fields,action_member,action_member_fields,action_memberCreator,action_memberCreator_fields,cards,card_fields,card_attachments,card_attachment_fields,card_checklists,card_stickers,boardStars,labels,label_fields,labels_limit,lists,list_fields,memberships,memberships_member,memberships_member_fields,members,member_fields,membersInvited,membersInvited_fields,checklists,checklist_fields,organization,organization_fields,organization_memberships,myPrefs,fields,key,token}"
    }
  },
  "responses": {}
}
