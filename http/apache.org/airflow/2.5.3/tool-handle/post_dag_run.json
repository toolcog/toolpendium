{
  "name": "post_dag_run",
  "description": "Trigger a new DAG run",
  "parameters": {
    "type": "object",
    "properties": {
      "dag_id": {
        "type": "string",
        "description": "The DAG ID."
      },
      "body": {
        "$ref": "#/$defs/DAGRun"
      }
    },
    "required": [
      "dag_id",
      "body"
    ],
    "$defs": {
      "DAGRun": {
        "properties": {
          "conf": {
            "description": "JSON object describing additional configuration parameters.\n\nThe value of this field can be set only when creating the object. If you try to modify the\nfield of an existing object, the request fails with an BAD_REQUEST error.\n",
            "type": "object"
          },
          "dag_id": {
            "readOnly": true,
            "type": "string"
          },
          "dag_run_id": {
            "description": "Run ID.\n\nThe value of this field can be set only when creating the object. If you try to modify the\nfield of an existing object, the request fails with an BAD_REQUEST error.\n\nIf not provided, a value will be generated based on execution_date.\n\nIf the specified dag_run_id is in use, the creation request fails with an ALREADY_EXISTS error.\n\nThis together with DAG_ID are a unique key.\n",
            "nullable": true,
            "type": "string"
          },
          "data_interval_end": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "data_interval_start": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "end_date": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "execution_date": {
            "deprecated": true,
            "description": "The execution date. This is the same as logical_date, kept for backwards compatibility.\nIf both this field and logical_date are provided but with different values, the request\nwill fail with an BAD_REQUEST error.\n\n*Changed in version 2.2.0*&#58; Field becomes nullable.\n\n*Deprecated since version 2.2.0*&#58; Use 'logical_date' instead.\n",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "external_trigger": {
            "default": true,
            "readOnly": true,
            "type": "boolean"
          },
          "last_scheduling_decision": {
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "logical_date": {
            "description": "The logical date (previously called execution date). This is the time or interval covered by\nthis DAG run, according to the DAG definition.\n\nThe value of this field can be set only when creating the object. If you try to modify the\nfield of an existing object, the request fails with an BAD_REQUEST error.\n\nThis together with DAG_ID are a unique key.\n\n*New in version 2.2.0*\n",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "note": {
            "description": "Contains manually entered notes by the user about the DagRun.\n\n*New in version 2.5.0*\n",
            "nullable": true,
            "type": "string"
          },
          "run_type": {
            "enum": [
              "backfill",
              "manual",
              "scheduled",
              "dataset_triggered"
            ],
            "readOnly": true,
            "type": "string"
          },
          "start_date": {
            "description": "The start time. The time when DAG run was actually created.\n\n*Changed in version 2.1.3*&#58; Field becomes nullable.\n",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "$ref": "#/$defs/DagState"
          }
        },
        "type": "object"
      },
      "DagState": {
        "description": "DAG State.\n\n*Changed in version 2.1.3*&#58; 'queued' is added as a possible value.\n",
        "enum": [
          "queued",
          "running",
          "success",
          "failed"
        ],
        "readOnly": true,
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v1/dags/{dag_id}/dagRuns"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**conf**: JSON object describing additional configuration parameters.",
            "**dag_id**",
            "**dag_run_id**: Run ID.",
            "**data_interval_end**",
            "**data_interval_start**",
            "**end_date**",
            "**execution_date**: The execution date. This is the same as logical_date, kept for backwards compatibility.",
            "**external_trigger** (default: true)",
            "**last_scheduling_decision**",
            "**logical_date**: The logical date (previously called execution date). This is the time or interval covered by",
            "**note**: Contains manually entered notes by the user about the DagRun.",
            "**run_type**",
            "**start_date**: The start time. The time when DAG run was actually created.",
            "**state**: DAG State."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "404": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
