{
  "name": "get_dag_runs_batch",
  "description": "This endpoint is a POST to allow filtering across a large number of DAG IDs, where as a GET it would run in to maximum HTTP request URL length limit.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/ListDagRunsForm"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ListDagRunsForm": {
        "properties": {
          "dag_ids": {
            "description": "Return objects with specific DAG IDs.\nThe value can be repeated to retrieve multiple matching values (OR condition).",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "end_date_gte": {
            "description": "Returns objects greater or equal the specified date.\n\nThis can be combined with end_date_lte parameter to receive only the selected period.\n",
            "format": "date-time",
            "type": "string"
          },
          "end_date_lte": {
            "description": "Returns objects less than or equal to the specified date.\n\nThis can be combined with end_date_gte parameter to receive only the selected period.\n",
            "format": "date-time",
            "type": "string"
          },
          "execution_date_gte": {
            "description": "Returns objects greater or equal to the specified date.\n\nThis can be combined with execution_date_lte key to receive only the selected period.\n",
            "format": "date-time",
            "type": "string"
          },
          "execution_date_lte": {
            "description": "Returns objects less than or equal to the specified date.\n\nThis can be combined with execution_date_gte key to receive only the selected period.\n",
            "format": "date-time",
            "type": "string"
          },
          "order_by": {
            "description": "The name of the field to order the results by. Prefix a field name\nwith `-` to reverse the sort order.\n\n*New in version 2.1.0*\n",
            "type": "string"
          },
          "page_limit": {
            "default": 100,
            "description": "The numbers of items to return.",
            "minimum": 1,
            "type": "integer"
          },
          "page_offset": {
            "description": "The number of items to skip before starting to collect the result set.",
            "minimum": 0,
            "type": "integer"
          },
          "start_date_gte": {
            "description": "Returns objects greater or equal the specified date.\n\nThis can be combined with start_date_lte key to receive only the selected period.\n",
            "format": "date-time",
            "type": "string"
          },
          "start_date_lte": {
            "description": "Returns objects less or equal the specified date.\n\nThis can be combined with start_date_gte parameter to receive only the selected period\n",
            "format": "date-time",
            "type": "string"
          },
          "states": {
            "description": "Return objects with specific states.\nThe value can be repeated to retrieve multiple matching values (OR condition).",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/api/v1/dags/~/dagRuns/list"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Metadata about collection.",
        "**Key properties:**",
        {
          "$ul": [
            "**dag_runs**",
            "**total_entries**: Count of total objects in the current result set before pagination parameters"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "[RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.\n",
        "**Key properties:**",
        {
          "$ul": [
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**instance**: A URI reference that identifies the specific occurrence of the problem. It may or may",
            "**status**: The HTTP status code generated by the API server for this occurrence of the problem.",
            "**title**: A short, human-readable summary of the problem type.",
            "**type**: A URI reference [RFC3986] that identifies the problem type. This specification"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
