{
  "name": "url-to-screenshot",
  "description": "Automate URL to Screenshot Conversion right in your application.\n\nSpecify request parameters like URL, Proxy, and actions to convert web pages to screenshots using Headless Chrome.\n\nGet resulted pictures in JPG or PNG formats even from websites blocked in your area for some reason utilizing our worldwide pool of proxies.\n\nSimulate real-world human interaction with the page. For example, before capturing a web page, you may need to scroll it.\n\nGenerate ready-to-run code for your favorite language at [https://dataflowkit.com/url-to-screenshot](https://dataflowkit.com/url-to-screenshot)",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/url2screenshotrequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "url2screenshotrequest": {
        "example": {
          "format": "jpeg",
          "height": 1080,
          "quality": 80,
          "scale": 1,
          "url": "https://dataflowkit.com",
          "waitDelay": 0.5,
          "width": 1920
        },
        "properties": {
          "actions": {
            "default": [],
            "description": "Use actions to automate manual workflows while rendering web pages. They simulate real-world human interaction with pages.",
            "items": {
              "$ref": "#/$defs/action"
            },
            "type": "array"
          },
          "clipSelector": {
            "description": "Captures a screenshot of specified CSS element on a web page.",
            "example": "#css-element",
            "type": "string"
          },
          "format": {
            "default": "png",
            "description": "Sets the Format of output image",
            "enum": [
              "png",
              "jpeg"
            ],
            "type": "string"
          },
          "fullPage": {
            "default": false,
            "description": "takes a screenshot of a full web page. It ignores offsetX, offsety, width and height argument values.",
            "type": "boolean"
          },
          "height": {
            "default": 600,
            "description": "Rectangle height in device independent pixels (dip).",
            "type": "integer"
          },
          "ignoreHTTPStatusErrCodes": {
            "description": "The HTTP 200 OK success status response code indicates that the request has succeeded. Sometimes a server returns normal HTML content even with an erroneous Non-200 HTTP response status code. The IgnoreHTTPStatusCode option is useful when you need to force the return of HTML content. Defaults to \"false.\"",
            "type": "boolean"
          },
          "initialCookies": {
            "default": [],
            "description": "The \"Initial Cookies\" option is useful for crawling websites that require a login. The simplest solution to get an array of cookies for specific websites is to use a web browser \"EditThisCookie\" extension. Copy a cookie array with \"EditThisCookie\" and paste it into the \"Initial cookie\" field.",
            "items": {
              "$ref": "#/$defs/initialCookie"
            },
            "type": "array"
          },
          "offsetx": {
            "default": 0,
            "description": "X offset in device independent pixels (dip).",
            "type": "integer"
          },
          "offsety": {
            "default": 0,
            "description": "Y offset in device independent pixels (dip).",
            "type": "integer"
          },
          "output": {
            "default": "buffer",
            "description": "If set to _file_, the resulted screenshot is uploaded to Dataflow Kit Storage first. Then the link to this file is returned. Overwise, web site screenshot is returned in the response body.",
            "enum": [
              "buffer",
              "file"
            ],
            "type": "string"
          },
          "printBackground": {
            "default": false,
            "description": "Print background graphics in the PDF.",
            "type": "boolean"
          },
          "proxy": {
            "description": "Specify proxy by adding [country ISO code](https://en.wikipedia.org/wiki/ISO_3166-2) to `country-` value to send requests through a proxy in the specified country. Use `country-any` to use random geo-targets.",
            "example": "country-any",
            "type": "string"
          },
          "quality": {
            "default": 80,
            "description": "Sets the Quality of output image. Compression quality from range [0..100] (jpeg only).",
            "type": "integer"
          },
          "scale": {
            "default": 1,
            "description": "Image scale factor. range [0.1 .. 3]",
            "type": "number"
          },
          "url": {
            "description": "The full URL address (including HTTP/HTTPS) of a web page that you want to capture",
            "type": "string"
          },
          "waitDelay": {
            "default": 0.5,
            "description": "Specify a wait delay (in seconds). This may be useful if certain elements of the web site need to be rendered after the initial page load.",
            "type": "number"
          },
          "width": {
            "default": 800,
            "description": "Rectangle width in device independent pixels (dip).",
            "type": "integer"
          }
        },
        "required": [
          "url"
        ],
        "title": "URL to Screenshot request",
        "type": "object"
      },
      "action": {
        "anyOf": [
          {
            "description": "Sets the value of an input field as if you had typed it in. You can also set the value of combo boxes, checkboxes, etc., using this action. In these cases, the value must be the value of the selected option, not visible text.",
            "properties": {
              "ignoreIfNotPresent": {
                "example": false,
                "type": "boolean"
              },
              "selector": {
                "description": "Must be a valid CSS Selector",
                "example": "#search-form-editbox",
                "type": "string"
              },
              "value": {
                "description": "The value to input.",
                "example": "web scraper",
                "type": "string"
              }
            },
            "title": "input",
            "type": "object"
          },
          {
            "description": "The Send Keys action simulates real user input of key by key into a given string. It mimics real user behavior, such as the inability to type into invisible or read-only DOM elements. This action is useful for cases where explicit keystroke events are required, like auto-completing combo boxes. Unlike a similar 'input' action, which forces a specified value directly into an input selector, this action does not overwrite existing content.",
            "properties": {
              "ignoreIfNotPresent": {
                "example": false,
                "type": "boolean"
              },
              "selector": {
                "description": "Must be a valid CSS Selector",
                "example": "#search-form-editbox",
                "type": "string"
              },
              "value": {
                "description": "Sequence of keys to send. Keys can include keystrokes such as ALT+A, ENTER, BACKSPACE, etc.",
                "example": "web scraper",
                "type": "string"
              }
            },
            "title": "sendKeys",
            "type": "object"
          },
          {
            "description": "Clicks on a target element (such as a link, button, checkbox, or radio button) with specified CSS Selector.",
            "properties": {
              "ignoreIfNotPresent": {
                "description": "This optional parameter is useful when the target element occasionally may not be present in the DOM.",
                "example": false,
                "type": "boolean"
              },
              "selector": {
                "description": "Must be a valid CSS Selector",
                "example": ".click-me",
                "type": "string"
              },
              "skipLastIteration": {
                "description": "It is only used for click action inside a loop only. Skips the last iteration.",
                "example": true,
                "type": "boolean"
              }
            },
            "title": "click",
            "type": "object"
          },
          {
            "description": "Double clicks on a target element (such as a link, button, checkbox, or radio button) with specified CSS Selector.",
            "properties": {
              "ignoreIfNotPresent": {
                "description": "This optional parameter is useful when the target element occasionally may not be present in the DOM.",
                "example": false,
                "type": "boolean"
              },
              "selector": {
                "description": "Must be a valid CSS Selector",
                "example": ".double-click-me",
                "type": "string"
              },
              "skipLastIteration": {
                "description": "It is only used for click action inside a loop only. Skips the last iteration.",
                "example": true,
                "type": "boolean"
              }
            },
            "title": "doubleClick",
            "type": "object"
          },
          {
            "description": "Click on an element with the specified CSS Selector. JS Click internally invokes a script (Javascript) that clicks the element.",
            "properties": {
              "ignoreIfNotPresent": {
                "description": "This optional parameter is useful when the target element occasionally may not be present in the DOM.",
                "example": false,
                "type": "boolean"
              },
              "selector": {
                "description": "Must be a valid CSS Selector for the target element.",
                "example": ".js-click-me",
                "type": "string"
              },
              "skipLastIteration": {
                "description": "It is only used for click action inside a loop only. Skips the last iteration.",
                "example": true,
                "type": "boolean"
              }
            },
            "title": "jsclick",
            "type": "object"
          },
          {
            "description": "Submit the specified form. This action is useful for forms without explicit submit buttons, such as single-input Search forms.",
            "properties": {
              "selector": {
                "description": "Must be an any valid CSS Selector inside the parent form to submit.",
                "example": ".some-element-inside-form",
                "type": "string"
              }
            },
            "title": "submit",
            "type": "object"
          },
          {
            "description": "Wait for the target element to become visible on the page.",
            "properties": {
              "selector": {
                "description": "Must be a valid CSS Selector for the target element.",
                "example": ":root",
                "type": "string"
              }
            },
            "title": "waitVisible",
            "type": "object"
          },
          {
            "description": "Wait for the target element to become invisible on the page.",
            "properties": {
              "selector": {
                "description": "Must be a valid CSS Selector for the target element.",
                "example": "#some-element",
                "type": "string"
              }
            },
            "title": "waitNotVisible",
            "type": "object"
          },
          {
            "description": "Wait for the specified amount of time.",
            "properties": {
              "waitDelay": {
                "description": "Wait time (in milliseconds).",
                "example": "5000",
                "type": "string"
              }
            },
            "title": "pause",
            "type": "object"
          },
          {
            "description": "Executes the Javascript passes as 'script' parameter",
            "properties": {
              "script": {
                "description": "The JavaScript snippet to run",
                "example": "console.log(\"It works!\")",
                "type": "string"
              }
            },
            "title": "execute",
            "type": "object"
          },
          {
            "description": "Loop action combines a set of actions and executes it as many times as specified in the \"times\" parameter.",
            "properties": {
              "actions": {
                "default": [],
                "description": "list of actions combined in the loop are executed step-by-step",
                "items": {
                  "$ref": "#/$defs/action"
                },
                "type": "array"
              },
              "times": {
                "description": "the number of times to execute the wrapped actions within the 'loop .. times' construction.",
                "example": 5,
                "type": "number"
              }
            },
            "title": "loop .. times",
            "type": "object"
          },
          {
            "description": "Sometimes it is necessary to retrieve the HTML content of a web page multiple times in a single request. This action is for that.",
            "properties": {
              "skipLastIteration": {
                "description": "It is only used for loop actions only. Skips the last iteration.",
                "example": true,
                "type": "boolean"
              }
            },
            "title": "getcontent",
            "type": "object"
          },
          {
            "description": "Scroll a page down to load more content, simulating user interaction with infinite scrolled pages. Or specify the element's CSS Selector to click for loading more content.",
            "properties": {
              "scrollByPixels": {
                "description": "Scrolls a web page by the number of pixels specified by 'scrollByPixels' parameter.",
                "example": 650,
                "type": "number"
              },
              "scrollingElementSelector": {
                "description": "Optionally specify here a valid CSS Selector of scrolling element.",
                "example": "#scroll-panel",
                "type": "string"
              },
              "selector": {
                "description": "Some websites require clicking 'More' button while scrolling a page. Put here 'More' button valid CSS Selector.",
                "example": ".more-button",
                "type": "string"
              },
              "times": {
                "description": "The number of times to scroll down a web page.",
                "example": 3,
                "type": "integer"
              }
            },
            "title": "scroll",
            "type": "object"
          }
        ],
        "title": "Action",
        "type": "object"
      },
      "initialCookie": {
        "description": "InitialCookie structure keep cookies that optionally can be passed to the new fetcher crawl a website that requires a login. Generate Cookies array with EditThisCookie chrome extension.",
        "properties": {
          "domain": {
            "example": ".twitter.com",
            "type": "string"
          },
          "expirationDate": {
            "example": 1762900726.409761,
            "type": "number"
          },
          "hostOnly": {
            "example": false,
            "type": "boolean"
          },
          "httpOnly": {
            "example": false,
            "type": "boolean"
          },
          "id": {
            "example": 1,
            "type": "number"
          },
          "name": {
            "example": "auth_token",
            "type": "string"
          },
          "path": {
            "example": "/",
            "type": "string"
          },
          "sameSite": {
            "enum": [
              "unspecified",
              "strict",
              "lax",
              "no_restriction"
            ],
            "type": "string"
          },
          "secure": {
            "example": true,
            "type": "boolean"
          },
          "session": {
            "example": true,
            "type": "boolean"
          },
          "storeID": {
            "example": "1",
            "type": "string"
          },
          "value": {
            "example": "46fd9fed1ab8b0b0e231ac3f",
            "type": "string"
          }
        },
        "title": "initialCookie",
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.dataflowkit.com/v1/convert/url/screenshot"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    }
  }
}
