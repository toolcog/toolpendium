{
  "name": "UpdateService",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "Sid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^IS[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The Twilio-provided string that uniquely identifies the Service resource to update."
      },
      "body": {
        "properties": {
          "ConsumptionReportInterval": {
            "description": "DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.",
            "type": "integer"
          },
          "DefaultChannelCreatorRoleSid": {
            "description": "The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.",
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "DefaultChannelRoleSid": {
            "description": "The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.",
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "DefaultServiceRoleSid": {
            "description": "The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.",
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "FriendlyName": {
            "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
            "type": "string"
          },
          "Limits.ChannelMembers": {
            "description": "The maximum number of Members that can be added to Channels within this Service. Can be up to 1,000.",
            "type": "integer"
          },
          "Limits.UserChannels": {
            "description": "The maximum number of Channels Users can be a Member of within this Service. Can be up to 1,000.",
            "type": "integer"
          },
          "Notifications.AddedToChannel.Enabled": {
            "description": "Whether to send a notification when a member is added to a channel. Can be: `true` or `false` and the default is `false`.",
            "type": "boolean"
          },
          "Notifications.AddedToChannel.Template": {
            "description": "The template to use to create the notification text displayed when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.InvitedToChannel.Enabled": {
            "description": "Whether to send a notification when a user is invited to a channel. Can be: `true` or `false` and the default is `false`.",
            "type": "boolean"
          },
          "Notifications.InvitedToChannel.Template": {
            "description": "The template to use to create the notification text displayed when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.NewMessage.Enabled": {
            "description": "Whether to send a notification when a new message is added to a channel. Can be: `true` or `false` and the default is `false`.",
            "type": "boolean"
          },
          "Notifications.NewMessage.Template": {
            "description": "The template to use to create the notification text displayed when a new message is added to a channel and `notifications.new_message.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.RemovedFromChannel.Enabled": {
            "description": "Whether to send a notification to a user when they are removed from a channel. Can be: `true` or `false` and the default is `false`.",
            "type": "boolean"
          },
          "Notifications.RemovedFromChannel.Template": {
            "description": "The template to use to create the notification text displayed to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.",
            "type": "string"
          },
          "PostWebhookUrl": {
            "description": "The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.",
            "format": "uri",
            "type": "string"
          },
          "PreWebhookUrl": {
            "description": "The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.",
            "format": "uri",
            "type": "string"
          },
          "ReachabilityEnabled": {
            "description": "Whether to enable the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) for this Service instance. The default is `false`.",
            "type": "boolean"
          },
          "ReadStatusEnabled": {
            "description": "Whether to enable the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature. The default is `true`.",
            "type": "boolean"
          },
          "TypingIndicatorTimeout": {
            "description": "How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.",
            "type": "integer"
          },
          "WebhookFilters": {
            "description": "The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "WebhookMethod": {
            "description": "The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelAdd.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_channel_add.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelAdd.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_add` event using the `webhooks.on_channel_add.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnChannelAdded.Method": {
            "description": "The URL of the webhook to call in response to the `on_channel_added` event`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelAdded.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_added.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnChannelDestroy.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_channel_destroy.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelDestroy.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_destroy` event using the `webhooks.on_channel_destroy.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnChannelDestroyed.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_channel_destroyed.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelDestroyed.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_destroyed.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnChannelUpdate.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_channel_update.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelUpdate.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_update` event using the `webhooks.on_channel_update.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnChannelUpdated.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_channel_updated.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnChannelUpdated.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMemberAdd.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_member_add.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMemberAdd.Url": {
            "description": "The URL of the webhook to call in response to the `on_member_add` event using the `webhooks.on_member_add.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMemberAdded.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_channel_updated.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMemberAdded.Url": {
            "description": "The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMemberRemove.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_member_remove.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMemberRemove.Url": {
            "description": "The URL of the webhook to call in response to the `on_member_remove` event using the `webhooks.on_member_remove.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMemberRemoved.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_member_removed.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMemberRemoved.Url": {
            "description": "The URL of the webhook to call in response to the `on_member_removed` event using the `webhooks.on_member_removed.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMessageRemove.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_message_remove.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMessageRemove.Url": {
            "description": "The URL of the webhook to call in response to the `on_message_remove` event using the `webhooks.on_message_remove.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMessageRemoved.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_message_removed.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMessageRemoved.Url": {
            "description": "The URL of the webhook to call in response to the `on_message_removed` event using the `webhooks.on_message_removed.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMessageSend.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_message_send.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMessageSend.Url": {
            "description": "The URL of the webhook to call in response to the `on_message_send` event using the `webhooks.on_message_send.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMessageSent.Method": {
            "description": "The URL of the webhook to call in response to the `on_message_sent` event`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMessageSent.Url": {
            "description": "The URL of the webhook to call in response to the `on_message_sent` event using the `webhooks.on_message_sent.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMessageUpdate.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_message_update.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMessageUpdate.Url": {
            "description": "The URL of the webhook to call in response to the `on_message_update` event using the `webhooks.on_message_update.method` HTTP method.",
            "format": "uri",
            "type": "string"
          },
          "Webhooks.OnMessageUpdated.Method": {
            "description": "The HTTP method to use when calling the `webhooks.on_message_updated.url`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "Webhooks.OnMessageUpdated.Url": {
            "description": "The URL of the webhook to call in response to the `on_message_updated` event using the `webhooks.on_message_updated.method` HTTP method.",
            "format": "uri",
            "type": "string"
          }
        },
        "title": "UpdateServiceRequest",
        "type": "object"
      }
    },
    "required": [
      "Sid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://chat.twilio.com/v1/Services/{Sid}"
    },
    "body": {
      "$": "body",
      "encode": "urlencoded"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**account_sid**: The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the Service resource.",
            "**consumption_report_interval**: DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.",
            "**date_created**: The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
            "**date_updated**: The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
            "**default_channel_creator_role_sid**: The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.",
            "**default_channel_role_sid**: The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.",
            "**default_service_role_sid**: The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.",
            "**friendly_name**: The string that you assigned to describe the resource.",
            "**limits**: An object that describes the limits of the service instance. The `limits` object contains  `channel_members` to describe the members/channel limit and `user_channels` to describe the channels/user limit. `channel_members` can be 1,000 or less, with a default of 250. `user_channels` can be 1,000 or less, with a default value of 100.",
            "**links**: The absolute URLs of the Service's [Channels](https://www.twilio.com/docs/chat/api/channels), [Roles](https://www.twilio.com/docs/chat/api/roles), and [Users](https://www.twilio.com/docs/chat/api/users).",
            "**notifications**: The notification configuration for the Service instance. See [Push Notification Configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more information.",
            "**post_webhook_url**: The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.",
            "**pre_webhook_url**: The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.",
            "**reachability_enabled**: Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Service instance. The default is `false`.",
            "**read_status_enabled**: Whether the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature is enabled. The default is `true`.",
            "**sid**: The unique string that we created to identify the Service resource.",
            "**typing_indicator_timeout**: How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.",
            "**url**: The absolute URL of the Service resource.",
            "**webhook_filters**: The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "**webhook_method**: The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "**webhooks**: An object that contains information about the webhooks configured for this service."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
