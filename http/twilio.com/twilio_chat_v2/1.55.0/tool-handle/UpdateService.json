{
  "name": "UpdateService",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "Sid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^IS[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Service resource to update."
      },
      "body": {
        "properties": {
          "ConsumptionReportInterval": {
            "description": "DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.",
            "type": "integer"
          },
          "DefaultChannelCreatorRoleSid": {
            "description": "The channel role assigned to a channel creator when they join a new channel. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.",
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "DefaultChannelRoleSid": {
            "description": "The channel role assigned to users when they are added to a channel. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.",
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "DefaultServiceRoleSid": {
            "description": "The service role assigned to users when they are added to the service. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.",
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "FriendlyName": {
            "description": "A descriptive string that you create to describe the resource.",
            "type": "string"
          },
          "Limits.ChannelMembers": {
            "description": "The maximum number of Members that can be added to Channels within this Service. Can be up to 1,000.",
            "type": "integer"
          },
          "Limits.UserChannels": {
            "description": "The maximum number of Channels Users can be a Member of within this Service. Can be up to 1,000.",
            "type": "integer"
          },
          "Media.CompatibilityMessage": {
            "description": "The message to send when a media message has no text. Can be used as placeholder message.",
            "type": "string"
          },
          "Notifications.AddedToChannel.Enabled": {
            "description": "Whether to send a notification when a member is added to a channel. The default is `false`.",
            "type": "boolean"
          },
          "Notifications.AddedToChannel.Sound": {
            "description": "The name of the sound to play when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.AddedToChannel.Template": {
            "description": "The template to use to create the notification text displayed when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.InvitedToChannel.Enabled": {
            "description": "Whether to send a notification when a user is invited to a channel. The default is `false`.",
            "type": "boolean"
          },
          "Notifications.InvitedToChannel.Sound": {
            "description": "The name of the sound to play when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.InvitedToChannel.Template": {
            "description": "The template to use to create the notification text displayed when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.LogEnabled": {
            "description": "Whether to log notifications. The default is `false`.",
            "type": "boolean"
          },
          "Notifications.NewMessage.BadgeCountEnabled": {
            "description": "Whether the new message badge is enabled. The default is `false`.",
            "type": "boolean"
          },
          "Notifications.NewMessage.Enabled": {
            "description": "Whether to send a notification when a new message is added to a channel. The default is `false`.",
            "type": "boolean"
          },
          "Notifications.NewMessage.Sound": {
            "description": "The name of the sound to play when a new message is added to a channel and `notifications.new_message.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.NewMessage.Template": {
            "description": "The template to use to create the notification text displayed when a new message is added to a channel and `notifications.new_message.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.RemovedFromChannel.Enabled": {
            "description": "Whether to send a notification to a user when they are removed from a channel. The default is `false`.",
            "type": "boolean"
          },
          "Notifications.RemovedFromChannel.Sound": {
            "description": "The name of the sound to play to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.",
            "type": "string"
          },
          "Notifications.RemovedFromChannel.Template": {
            "description": "The template to use to create the notification text displayed to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.",
            "type": "string"
          },
          "PostWebhookRetryCount": {
            "description": "The number of times to retry a call to the `post_webhook_url` if the request times out (after 5 seconds) or it receives a 429, 503, or 504 HTTP response. The default is 0, which means the call won't be retried.",
            "type": "integer"
          },
          "PostWebhookUrl": {
            "description": "The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "format": "uri",
            "type": "string"
          },
          "PreWebhookRetryCount": {
            "description": "The number of times to retry a call to the `pre_webhook_url` if the request times out (after 5 seconds) or it receives a 429, 503, or 504 HTTP response. Default retry count is 0 times, which means the call won't be retried.",
            "type": "integer"
          },
          "PreWebhookUrl": {
            "description": "The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "format": "uri",
            "type": "string"
          },
          "ReachabilityEnabled": {
            "description": "Whether to enable the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) for this Service instance. The default is `false`.",
            "type": "boolean"
          },
          "ReadStatusEnabled": {
            "description": "Whether to enable the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature. The default is `true`.",
            "type": "boolean"
          },
          "TypingIndicatorTimeout": {
            "description": "How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.",
            "type": "integer"
          },
          "WebhookFilters": {
            "description": "The list of webhook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "WebhookMethod": {
            "description": "The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          }
        },
        "title": "UpdateServiceRequest",
        "type": "object"
      }
    },
    "required": [
      "Sid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://chat.twilio.com/v2/Services/{Sid}"
    },
    "body": {
      "$": "body",
      "encode": "urlencoded"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**account_sid**: The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
            "**consumption_report_interval**: DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.",
            "**date_created**: The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "**date_updated**: The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "**default_channel_creator_role_sid**: The channel role assigned to a channel creator when they join a new channel. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.",
            "**default_channel_role_sid**: The channel role assigned to users when they are added to a channel. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.",
            "**default_service_role_sid**: The service role assigned to users when they are added to the service. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.",
            "**friendly_name**: The string that you assigned to describe the resource.",
            "**limits**: An object that describes the limits of the service instance. The `limits` object contains  `channel_members` to describe the members/channel limit and `user_channels` to describe the channels/user limit. `channel_members` can be 1,000 or less, with a default of 250. `user_channels` can be 1,000 or less, with a default value of 100.",
            "**links**: The absolute URLs of the Service's [Channels](https://www.twilio.com/docs/chat/channels), [Roles](https://www.twilio.com/docs/chat/rest/role-resource), [Bindings](https://www.twilio.com/docs/chat/rest/binding-resource), and [Users](https://www.twilio.com/docs/chat/rest/user-resource).",
            "**media**: An object that describes the properties of media that the service supports. The object contains the `size_limit_mb` property, which describes the size of the largest media file in MB; and the `compatibility_message` property, which contains the message text to send when a media message does not have any text.",
            "**notifications**: The notification configuration for the Service instance. See [Push Notification Configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
            "**post_webhook_retry_count**: The number of times to retry a call to the `post_webhook_url` if the request times out (after 5 seconds) or it receives a 429, 503, or 504 HTTP response. The default is 0, which means the call won't be retried.",
            "**post_webhook_url**: The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "**pre_webhook_retry_count**: The number of times to retry a call to the `pre_webhook_url` if the request times out (after 5 seconds) or it receives a 429, 503, or 504 HTTP response. Default retry count is 0 times, which means the call won't be retried.",
            "**pre_webhook_url**: The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "**reachability_enabled**: Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Service instance. The default is `false`.",
            "**read_status_enabled**: Whether the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature is enabled. The default is `true`.",
            "**sid**: The unique string that we created to identify the Service resource.",
            "**typing_indicator_timeout**: How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.",
            "**url**: The absolute URL of the Service resource.",
            "**webhook_filters**: The list of webhook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.",
            "**webhook_method**: The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
