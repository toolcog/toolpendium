{
  "name": "CreateCallRecording",
  "description": "Create a recording for the call",
  "parameters": {
    "type": "object",
    "properties": {
      "AccountSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^AC[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource."
      },
      "CallSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^CA[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) to associate the resource with."
      },
      "body": {
        "properties": {
          "RecordingChannels": {
            "description": "The number of channels used in the recording. Can be: `mono` or `dual` and the default is `mono`. `mono` records all parties of the call into one channel. `dual` records each party of a 2-party call into separate channels.",
            "type": "string"
          },
          "RecordingStatusCallback": {
            "description": "The URL we should call using the `recording_status_callback_method` on each recording event specified in  `recording_status_callback_event`. For more information, see [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback).",
            "format": "uri",
            "type": "string"
          },
          "RecordingStatusCallbackEvent": {
            "description": "The recording status events on which we should call the `recording_status_callback` URL. Can be: `in-progress`, `completed` and `absent` and the default is `completed`. Separate multiple event values with a space.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "RecordingStatusCallbackMethod": {
            "description": "The HTTP method we should use to call `recording_status_callback`. Can be: `GET` or `POST` and the default is `POST`.",
            "enum": [
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "format": "http-method",
            "type": "string"
          },
          "RecordingTrack": {
            "description": "The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio.",
            "type": "string"
          },
          "Trim": {
            "description": "Whether to trim any leading and trailing silence in the recording. Can be: `trim-silence` or `do-not-trim` and the default is `do-not-trim`. `trim-silence` trims the silence from the beginning and end of the recording and `do-not-trim` does not.",
            "type": "string"
          }
        },
        "title": "CreateCallRecordingRequest",
        "type": "object"
      }
    },
    "required": [
      "AccountSid",
      "CallSid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.twilio.com/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json"
    },
    "body": {
      "$": "body",
      "encode": "urlencoded"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**account_sid**: The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource.",
            "**api_version**: The API version used to make the recording.",
            "**call_sid**: The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Recording resource is associated with.",
            "**channels**: The number of channels in the final recording file.  Can be: `1`, or `2`. Separating a two leg call into two separate channels of the recording file is supported in [Dial](https://www.twilio.com/docs/voice/twiml/dial#attributes-record) and [Outbound Rest API](https://www.twilio.com/docs/voice/make-calls) record options.",
            "**conference_sid**: The Conference SID that identifies the conference associated with the recording, if a conference recording.",
            "**date_created**: The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
            "**date_updated**: The date and time in GMT that the resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
            "**duration**: The length of the recording in seconds.",
            "**encryption_details**: How to decrypt the recording if it was encrypted using [Call Recording Encryption](https://www.twilio.com/docs/voice/tutorials/voice-recording-encryption) feature.",
            "**error_code**: The error code that describes why the recording is `absent`. The error code is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors). This value is null if the recording `status` is not `absent`.",
            "**price**: The one-time cost of creating the recording in the `price_unit` currency.",
            "**price_unit**: The currency used in the `price` property. Example: `USD`.",
            "**sid**: The unique string that that we created to identify the Recording resource.",
            "**source**",
            "**start_time**: The start time of the recording in GMT and in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.",
            "**status**",
            "**track**: The recorded track. Can be: `inbound`, `outbound`, or `both`.",
            "**uri**: The URI of the resource, relative to `https://api.twilio.com`."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
