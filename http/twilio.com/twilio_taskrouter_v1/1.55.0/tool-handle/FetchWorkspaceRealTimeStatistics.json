{
  "name": "FetchWorkspaceRealTimeStatistics",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "WorkspaceSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WS[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Workspace to fetch."
      },
      "TaskChannel": {
        "type": "string",
        "description": "Only calculate real-time statistics on this TaskChannel. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`."
      }
    },
    "required": [
      "WorkspaceSid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://taskrouter.twilio.com/v1/Workspaces/{WorkspaceSid}/RealTimeStatistics{?TaskChannel}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**account_sid**: The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workspace resource.",
            "**activity_statistics**: The number of current Workers by Activity.",
            "**longest_task_waiting_age**: The age of the longest waiting Task.",
            "**longest_task_waiting_sid**: The SID of the longest waiting Task.",
            "**tasks_by_priority**: The number of Tasks by priority. For example: `{\"0\": \"10\", \"99\": \"5\"}` shows 10 Tasks at priority 0 and 5 at priority 99.",
            "**tasks_by_status**: The number of Tasks by their current status. For example: `{\"pending\": \"1\", \"reserved\": \"3\", \"assigned\": \"2\", \"completed\": \"5\"}`.",
            "**total_tasks**: The total number of Tasks.",
            "**total_workers**: The total number of Workers in the Workspace.",
            "**url**: The absolute URL of the Workspace statistics resource.",
            "**workspace_sid**: The SID of the Workspace."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
