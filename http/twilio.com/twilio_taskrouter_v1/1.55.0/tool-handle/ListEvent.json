{
  "name": "ListEvent",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "WorkspaceSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WS[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Workspace with the Events to read. Returns only the Events that pertain to the specified Workspace."
      },
      "EndDate": {
        "format": "date-time",
        "type": "string",
        "description": "Only include Events that occurred on or before this date, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time."
      },
      "EventType": {
        "type": "string",
        "description": "The type of Events to read. Returns only Events of the type specified."
      },
      "Minutes": {
        "type": "integer",
        "description": "The period of events to read in minutes. Returns only Events that occurred since this many minutes in the past. The default is `15` minutes. Task Attributes for Events occuring more 43,200 minutes ago will be redacted."
      },
      "ReservationSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WR[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Reservation with the Events to read. Returns only Events that pertain to the specified Reservation."
      },
      "StartDate": {
        "format": "date-time",
        "type": "string",
        "description": "Only include Events from on or after this date and time, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Task Attributes for Events older than 30 days will be redacted."
      },
      "TaskQueueSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WQ[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the TaskQueue with the Events to read. Returns only the Events that pertain to the specified TaskQueue."
      },
      "TaskSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WT[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Task with the Events to read. Returns only the Events that pertain to the specified Task."
      },
      "WorkerSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WK[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Worker with the Events to read. Returns only the Events that pertain to the specified Worker."
      },
      "WorkflowSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WW[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Workflow with the Events to read. Returns only the Events that pertain to the specified Workflow."
      },
      "TaskChannel": {
        "type": "string",
        "description": "The TaskChannel with the Events to read. Returns only the Events that pertain to the specified TaskChannel."
      },
      "Sid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^EV[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Event resource to read."
      },
      "PageSize": {
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000."
      },
      "Page": {
        "minimum": 0,
        "type": "integer",
        "description": "The page index. This value is simply for client state."
      },
      "PageToken": {
        "type": "string",
        "description": "The page token. This is provided by the API."
      }
    },
    "required": [
      "WorkspaceSid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://taskrouter.twilio.com/v1/Workspaces/{WorkspaceSid}/Events{?EndDate,EventType,Minutes,ReservationSid,StartDate,TaskQueueSid,TaskSid,WorkerSid,WorkflowSid,TaskChannel,Sid,PageSize,Page,PageToken}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ListEventResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**events**",
            [
              "**meta**",
              {
                "$ul": [
                  "**first_page_url**",
                  "**key**",
                  "**next_page_url**",
                  "**page**",
                  "**page_size**",
                  "**previous_page_url**",
                  "**url**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
