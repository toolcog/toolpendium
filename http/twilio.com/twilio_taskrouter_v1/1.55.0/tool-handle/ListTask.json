{
  "name": "ListTask",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "WorkspaceSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WS[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Workspace with the Tasks to read."
      },
      "Priority": {
        "type": "integer",
        "description": "The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority."
      },
      "AssignmentStatus": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`."
      },
      "WorkflowSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WW[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID."
      },
      "WorkflowName": {
        "type": "string",
        "description": "The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name."
      },
      "TaskQueueSid": {
        "maxLength": 34,
        "minLength": 34,
        "pattern": "^WQ[0-9a-fA-F]{32}$",
        "type": "string",
        "description": "The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID."
      },
      "TaskQueueName": {
        "type": "string",
        "description": "The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name."
      },
      "EvaluateTaskAttributes": {
        "type": "string",
        "description": "The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter."
      },
      "Ordering": {
        "type": "string",
        "description": "How to order the returned Task resources. By default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `DateCreated`, `Priority`, or `VirtualStartTime` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Pairings of sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order. The only ordering pairing not allowed is DateCreated and VirtualStartTime."
      },
      "HasAddons": {
        "type": "boolean",
        "description": "Whether to read Tasks with Add-ons. If `true`, returns only Tasks with Add-ons. If `false`, returns only Tasks without Add-ons."
      },
      "PageSize": {
        "maximum": 1000,
        "minimum": 1,
        "type": "integer",
        "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000."
      },
      "Page": {
        "minimum": 0,
        "type": "integer",
        "description": "The page index. This value is simply for client state."
      },
      "PageToken": {
        "type": "string",
        "description": "The page token. This is provided by the API."
      }
    },
    "required": [
      "WorkspaceSid"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://taskrouter.twilio.com/v1/Workspaces/{WorkspaceSid}/Tasks{?Priority,AssignmentStatus,WorkflowSid,WorkflowName,TaskQueueSid,TaskQueueName,EvaluateTaskAttributes,Ordering,HasAddons,PageSize,Page,PageToken}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "ListTaskResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**meta**",
              {
                "$ul": [
                  "**first_page_url**",
                  "**key**",
                  "**next_page_url**",
                  "**page**",
                  "**page_size**",
                  "**previous_page_url**",
                  "**url**"
                ]
              }
            ],
            "**tasks**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
