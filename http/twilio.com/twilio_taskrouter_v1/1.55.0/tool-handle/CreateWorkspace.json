{
  "name": "CreateWorkspace",
  "description": "",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "EventCallbackUrl": {
            "description": "The URL we should call when an event occurs. If provided, the Workspace will publish events to this URL, for example, to collect data for reporting. See [Workspace Events](https://www.twilio.com/docs/taskrouter/api/event) for more information. This parameter supports Twilio's [Webhooks (HTTP callbacks) Connection Overrides](https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides).",
            "format": "uri",
            "type": "string"
          },
          "EventsFilter": {
            "description": "The list of Workspace events for which to call event_callback_url. For example, if `EventsFilter=task.created, task.canceled, worker.activity.update`, then TaskRouter will call event_callback_url only when a task is created, canceled, or a Worker activity is updated.",
            "type": "string"
          },
          "FriendlyName": {
            "description": "A descriptive string that you create to describe the Workspace resource. It can be up to 64 characters long. For example: `Customer Support` or `2014 Election Campaign`.",
            "type": "string"
          },
          "MultiTaskEnabled": {
            "description": "Whether to enable multi-tasking. Can be: `true` to enable multi-tasking, or `false` to disable it. However, all workspaces should be created as multi-tasking. The default is `true`. Multi-tasking allows Workers to handle multiple Tasks simultaneously. When enabled (`true`), each Worker can receive parallel reservations up to the per-channel maximums defined in the Workers section. In single-tasking mode (legacy mode), each Worker will only receive a new reservation when the previous task is completed. Learn more at [Multitasking](https://www.twilio.com/docs/taskrouter/multitasking).",
            "type": "boolean"
          },
          "PrioritizeQueueOrder": {
            "$ref": "#/$defs/workspace_enum_queue_order"
          },
          "Template": {
            "description": "An available template name. Can be: `NONE` or `FIFO` and the default is `NONE`. Pre-configures the Workspace with the Workflow and Activities specified in the template. `NONE` will create a Workspace with only a set of default activities. `FIFO` will configure TaskRouter with a set of default activities and a single TaskQueue for first-in, first-out distribution, which can be useful when you are getting started with TaskRouter.",
            "type": "string"
          }
        },
        "required": [
          "FriendlyName"
        ],
        "title": "CreateWorkspaceRequest",
        "type": "object"
      }
    },
    "$defs": {
      "workspace_enum_queue_order": {
        "enum": [
          "FIFO",
          "LIFO"
        ],
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://taskrouter.twilio.com/v1/Workspaces"
    },
    "body": {
      "$": "body",
      "encode": "urlencoded"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**account_sid**: The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workspace resource.",
            "**date_created**: The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "**date_updated**: The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "**default_activity_name**: The name of the default activity.",
            "**default_activity_sid**: The SID of the Activity that will be used when new Workers are created in the Workspace.",
            "**event_callback_url**: The URL we call when an event occurs. If provided, the Workspace will publish events to this URL, for example, to collect data for reporting. See [Workspace Events](https://www.twilio.com/docs/taskrouter/api/event) for more information. This parameter supports Twilio's [Webhooks (HTTP callbacks) Connection Overrides](https://www.twilio.com/docs/usage/webhooks/webhooks-connection-overrides).",
            "**events_filter**: The list of Workspace events for which to call `event_callback_url`. For example, if `EventsFilter=task.created, task.canceled, worker.activity.update`, then TaskRouter will call event_callback_url only when a task is created, canceled, or a Worker activity is updated.",
            "**friendly_name**: The string that you assigned to describe the Workspace resource. For example `Customer Support` or `2014 Election Campaign`.",
            "**links**: The URLs of related resources.",
            "**multi_task_enabled**: Whether multi-tasking is enabled. The default is `true`, which enables multi-tasking. Multi-tasking allows Workers to handle multiple Tasks simultaneously. When enabled (`true`), each Worker can receive parallel reservations up to the per-channel maximums defined in the Workers section. In single-tasking each Worker would only receive a new reservation when the previous task is completed. Learn more at [Multitasking](https://www.twilio.com/docs/taskrouter/multitasking).",
            "**prioritize_queue_order**",
            "**sid**: The unique string that we created to identify the Workspace resource.",
            "**timeout_activity_name**: The name of the timeout activity.",
            "**timeout_activity_sid**: The SID of the Activity that will be assigned to a Worker when a Task reservation times out without a response.",
            "**url**: The absolute URL of the Workspace resource."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
