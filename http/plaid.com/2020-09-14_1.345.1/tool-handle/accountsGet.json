{
  "name": "accountsGet",
  "description": "The `/accounts/get` endpoint can be used to retrieve a list of accounts associated with any linked Item. Plaid will only return active bank accounts — that is, accounts that are not closed and are capable of carrying a balance.\nFor items that went through the updated account selection pane, this endpoint only returns accounts that were permissioned by the user when they initially created the Item. If a user creates a new account after the initial link, you can capture this event through the [`NEW_ACCOUNTS_AVAILABLE`](https://plaid.com/docs/api/items/#new_accounts_available) webhook and then use Link's [update mode](https://plaid.com/docs/link/update-mode/) to request that the user share this new account with you.\n\nThis endpoint retrieves cached information, rather than extracting fresh information from the institution. As a result, balances returned may not be up-to-date; for realtime balance information, use `/accounts/balance/get` instead. Note that some information is nullable.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/AccountsGetRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "AccountsGetRequest": {
        "description": "AccountsGetRequest defines the request schema for `/accounts/get`",
        "properties": {
          "access_token": {
            "$ref": "#/$defs/AccessToken"
          },
          "client_id": {
            "$ref": "#/$defs/APIClientID"
          },
          "options": {
            "$ref": "#/$defs/AccountsGetRequestOptions"
          },
          "secret": {
            "$ref": "#/$defs/APISecret"
          }
        },
        "required": [
          "access_token"
        ],
        "type": "object",
        "x-examples": {
          "example-1": {}
        }
      },
      "AccessToken": {
        "description": "The access token associated with the Item data is being requested for.",
        "title": "AccessToken",
        "type": "string"
      },
      "APIClientID": {
        "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
        "title": "ClientID",
        "type": "string"
      },
      "AccountsGetRequestOptions": {
        "description": "An optional object to filter `/accounts/get` results.",
        "properties": {
          "account_ids": {
            "description": "An array of `account_ids` to retrieve for the Account.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "APISecret": {
        "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.",
        "title": "APISecret",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://production.plaid.com/accounts/get"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "AccountsGetResponse defines the response schema for `/accounts/get` and `/accounts/balance/get`.",
        "**Key properties:**",
        {
          "$ul": [
            "**accounts**: An array of financial institution accounts associated with the Item.",
            [
              "**item**: Metadata about the Item.",
              {
                "$ul": [
                  "**available_products**: A list of products available for the Item that have not yet been accessed. The contents of this array will be mutually exclusive with `billed_products`.",
                  "**billed_products**: A list of products that have been billed for the Item. The contents of this array will be mutually exclusive with `available_products`. Note - `billed_products` is populated in all environments but only requests in Production are billed. Also note that products that are billed on a pay-per-call basis rather than a pay-per-Item basis, such as `balance`, will not appear here.",
                  "**consent_expiration_time**: The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.",
                  "**consented_products**: Beta: A list of products that have gone through consent collection for the Item. Only present for those enabled in the beta.",
                  [
                    "**error**: We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.",
                    {
                      "$ul": [
                        "**causes**: In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.",
                        "**display_message**: A user-friendly representation of the error code. `null` if the error is not related to user action.",
                        "**documentation_url**: The URL of a Plaid documentation page with more information about the error",
                        "**error_code**: The particular error code. Safe for programmatic use.",
                        "**error_message**: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.",
                        "**error_type**: A broad categorization of the error. Safe for programmatic use.",
                        "**request_id**: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.",
                        "**status**: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.",
                        "**suggested_action**: Suggested steps for resolving the error"
                      ]
                    }
                  ],
                  "**institution_id**: The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.",
                  "**item_id**: The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.",
                  "**products**: A list of authorized products for the Item.",
                  "**update_type**: Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.",
                  "**webhook**: The URL registered to receive webhooks for the Item."
                ]
              }
            ],
            "**request_id**: A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error"
        },
        "We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.",
        "**Key properties:**",
        {
          "$ul": [
            "**causes**: In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.",
            "**display_message**: A user-friendly representation of the error code. `null` if the error is not related to user action.",
            "**documentation_url**: The URL of a Plaid documentation page with more information about the error",
            "**error_code**: The particular error code. Safe for programmatic use.",
            "**error_message**: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.",
            "**error_type**: A broad categorization of the error. Safe for programmatic use.",
            "**request_id**: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.",
            "**status**: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.",
            "**suggested_action**: Suggested steps for resolving the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
