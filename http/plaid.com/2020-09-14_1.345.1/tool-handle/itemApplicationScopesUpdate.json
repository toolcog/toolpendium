{
  "name": "itemApplicationScopesUpdate",
  "description": "Enable consumers to update product access on selected accounts for an application.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/ItemApplicationScopesUpdateRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "ItemApplicationScopesUpdateRequest": {
        "description": "ItemApplicationScopesUpdateRequest defines the request schema for `/item/application/scopes/update`",
        "properties": {
          "access_token": {
            "$ref": "#/$defs/AccessToken"
          },
          "application_id": {
            "$ref": "#/$defs/ApplicationID"
          },
          "client_id": {
            "$ref": "#/$defs/APIClientID"
          },
          "context": {
            "$ref": "#/$defs/ScopesContext"
          },
          "scopes": {
            "$ref": "#/$defs/Scopes"
          },
          "secret": {
            "$ref": "#/$defs/APISecret"
          },
          "state": {
            "$ref": "#/$defs/ScopesState"
          }
        },
        "required": [
          "application_id",
          "access_token",
          "scopes",
          "context"
        ],
        "type": "object"
      },
      "AccessToken": {
        "description": "The access token associated with the Item data is being requested for.",
        "title": "AccessToken",
        "type": "string"
      },
      "ApplicationID": {
        "description": "This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.",
        "title": "ApplicationID",
        "type": "string"
      },
      "APIClientID": {
        "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
        "title": "ClientID",
        "type": "string"
      },
      "ScopesContext": {
        "description": "An indicator for when scopes are being updated. When scopes are updated via enrollment (i.e. OAuth), the partner must send `ENROLLMENT`. When scopes are updated in a post-enrollment view, the partner must send `PORTAL`.",
        "enum": [
          "ENROLLMENT",
          "PORTAL"
        ],
        "type": "string"
      },
      "Scopes": {
        "description": "The scopes object",
        "properties": {
          "accounts": {
            "items": {
              "$ref": "#/$defs/AccountAccess"
            },
            "type": "array"
          },
          "new_accounts": {
            "default": true,
            "description": "Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "product_access": {
            "$ref": "#/$defs/ProductAccess"
          }
        },
        "type": "object"
      },
      "AccountAccess": {
        "description": "Allow or disallow product access by account. Unlisted (e.g. missing) accounts will be considered `new_accounts`.",
        "properties": {
          "account_product_access": {
            "$ref": "#/$defs/AccountProductAccessNullable"
          },
          "authorized": {
            "default": true,
            "description": "Allow the application to see this account (and associated details, including balance) in the list of accounts  If unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "unique_id": {
            "description": "The unique account identifier for this account. This value must match that returned by the data access API for this account.",
            "type": "string"
          }
        },
        "required": [
          "unique_id"
        ],
        "type": "object"
      },
      "AccountProductAccessNullable": {
        "allOf": [
          {
            "$ref": "#/$defs/AccountProductAccess"
          },
          {
            "additionalProperties": true,
            "type": "object"
          }
        ],
        "description": "Allow the application to access specific products on this account",
        "nullable": true
      },
      "AccountProductAccess": {
        "description": "Allow the application to access specific products on this account",
        "properties": {
          "account_data": {
            "default": true,
            "description": "Allow the application to access account data. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "statements": {
            "default": true,
            "description": "Allow the application to access bank statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "tax_documents": {
            "default": true,
            "description": "Allow the application to access tax documents. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ProductAccess": {
        "additionalProperties": true,
        "description": "The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.",
        "properties": {
          "accounts_details_transactions": {
            "default": true,
            "description": "Allow access to \"accounts_details_transactions\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "accounts_routing_number": {
            "default": true,
            "description": "Allow access to \"accounts_routing_number\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "accounts_statements": {
            "default": true,
            "description": "Allow access to \"accounts_statements\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "accounts_tax_statements": {
            "default": true,
            "description": "Allow access to \"accounts_tax_statements\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "auth": {
            "default": true,
            "description": "Allow access to account number details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "customers_profiles": {
            "default": true,
            "description": "Allow access to \"customers_profiles\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "identity": {
            "default": true,
            "description": "Allow access to the Identity product (name, email, phone, address). Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "statements": {
            "default": true,
            "description": "Allow access to statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          },
          "transactions": {
            "default": true,
            "description": "Allow access to transaction details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "APISecret": {
        "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.",
        "title": "APISecret",
        "type": "string"
      },
      "ScopesState": {
        "description": "When scopes are updated during enrollment, this field must be populated with the state sent to the partner in the OAuth Login URI. This field is required when the context is `ENROLLMENT`.",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://production.plaid.com/item/application/scopes/update"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "ItemApplicationScopesUpdateResponse defines the response schema for `/item/application/scopes/update`",
        "**Key properties:**",
        {
          "$ul": [
            "**request_id**: A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error"
        },
        "We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.",
        "**Key properties:**",
        {
          "$ul": [
            "**causes**: In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.",
            "**display_message**: A user-friendly representation of the error code. `null` if the error is not related to user action.",
            "**documentation_url**: The URL of a Plaid documentation page with more information about the error",
            "**error_code**: The particular error code. Safe for programmatic use.",
            "**error_message**: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.",
            "**error_type**: A broad categorization of the error. Safe for programmatic use.",
            "**request_id**: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.",
            "**status**: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.",
            "**suggested_action**: Suggested steps for resolving the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
