{
  "name": "transactionsRecurringGet",
  "description": "The `/transactions/recurring/get` endpoint allows developers to receive a summary of the recurring outflow and inflow streams (expenses and deposits) from a userâ€™s checking, savings or credit card accounts. Additionally, Plaid provides key insights about each recurring stream including the category, merchant, last amount, and more. Developers can use these insights to build tools and experiences that help their users better manage cash flow, monitor subscriptions, reduce spend, and stay on track with bill payments.\n\nThis endpoint is offered as an add-on to Transactions. To request access to this endpoint, submit a [product access request](https://dashboard.plaid.com/team/products) or contact your Plaid account manager.\n\nThis endpoint can only be called on an Item that has already been initialized with Transactions (either during Link, by specifying it in `/link/token/create`; or after Link, by calling `/transactions/get` or `/transactions/sync`). Once all historical transactions have been fetched, call `/transactions/recurring/get` to receive the Recurring Transactions streams and subscribe to the [`RECURRING_TRANSACTIONS_UPDATE`](https://plaid.com/docs/api/products/transactions/#recurring_transactions_update) webhook. To know when historical transactions have been fetched, if you are using `/transactions/sync` listen for the [`SYNC_UPDATES_AVAILABLE`](https://plaid.com/docs/api/products/transactions/#SyncUpdatesAvailableWebhook-historical-update-complete) webhook and check that the `historical_update_complete` field in the payload is `true`. If using `/transactions/get`, listen for the [`HISTORICAL_UPDATE`](https://plaid.com/docs/api/products/transactions/#historical_update) webhook.\n\nAfter the initial call, you can call `/transactions/recurring/get` endpoint at any point in the future to retrieve the latest summary of recurring streams. Listen to the [`RECURRING_TRANSACTIONS_UPDATE`](https://plaid.com/docs/api/products/transactions/#recurring_transactions_update) webhook to be notified when new updates are available.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/TransactionsRecurringGetRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "TransactionsRecurringGetRequest": {
        "description": "TransactionsRecurringGetRequest defines the request schema for `/transactions/recurring/get`",
        "properties": {
          "access_token": {
            "$ref": "#/$defs/AccessToken"
          },
          "account_ids": {
            "description": "A list of `account_ids` to retrieve for the Item\n\nNote: An error will be returned if a provided `account_id` is not associated with the Item.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "client_id": {
            "$ref": "#/$defs/APIClientID"
          },
          "options": {
            "$ref": "#/$defs/TransactionsRecurringGetRequestOptions"
          },
          "secret": {
            "$ref": "#/$defs/APISecret"
          }
        },
        "required": [
          "access_token",
          "account_ids"
        ],
        "type": "object"
      },
      "AccessToken": {
        "description": "The access token associated with the Item data is being requested for.",
        "title": "AccessToken",
        "type": "string"
      },
      "APIClientID": {
        "description": "Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.",
        "title": "ClientID",
        "type": "string"
      },
      "TransactionsRecurringGetRequestOptions": {
        "description": "An optional object to be used with the request. If specified, `options` must not be `null`.",
        "properties": {
          "include_personal_finance_category": {
            "default": false,
            "description": "Include the [`personal_finance_category`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-personal-finance-category) object for each transaction stream in the response.\n\nSee the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "APISecret": {
        "description": "Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.",
        "title": "APISecret",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://production.plaid.com/transactions/recurring/get"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "TransactionsRecurringGetResponse defines the response schema for `/transactions/recurring/get`",
        "**Key properties:**",
        {
          "$ul": [
            "**inflow_streams**: An array of depository transaction streams.",
            "**outflow_streams**: An array of expense transaction streams.",
            "**request_id**: A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.",
            "**updated_datetime**: Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDTHH:mm:ssZ`) indicating the last time transaction streams for the given account were updated on"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error"
        },
        "We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.",
        "**Key properties:**",
        {
          "$ul": [
            "**causes**: In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.",
            "**display_message**: A user-friendly representation of the error code. `null` if the error is not related to user action.",
            "**documentation_url**: The URL of a Plaid documentation page with more information about the error",
            "**error_code**: The particular error code. Safe for programmatic use.",
            "**error_message**: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.",
            "**error_type**: A broad categorization of the error. Safe for programmatic use.",
            "**request_id**: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.",
            "**status**: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.",
            "**suggested_action**: Suggested steps for resolving the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
