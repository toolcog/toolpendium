{
  "name": "fdxNotifications",
  "description": "A generic webhook receiver endpoint for FDX Event Notifications",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/FDXNotification"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "FDXNotification": {
        "description": "Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload",
        "properties": {
          "category": {
            "$ref": "#/$defs/FDXNotificationCategory"
          },
          "notificationId": {
            "description": "Id of notification",
            "type": "string"
          },
          "notificationPayload": {
            "$ref": "#/$defs/FDXNotificationPayload"
          },
          "priority": {
            "$ref": "#/$defs/FDXNotificationPriority"
          },
          "publisher": {
            "$ref": "#/$defs/FDXParty"
          },
          "sentOn": {
            "$ref": "#/$defs/FDXTimestamp"
          },
          "severity": {
            "$ref": "#/$defs/FDXNotificationSeverity"
          },
          "subscriber": {
            "$ref": "#/$defs/FDXParty"
          },
          "type": {
            "$ref": "#/$defs/FDXNotificationType"
          },
          "url": {
            "$ref": "#/$defs/FDXHateoasLink"
          }
        },
        "required": [
          "notificationId",
          "type",
          "sentOn",
          "category",
          "publisher",
          "notificationPayload"
        ],
        "title": "FDX Notification entity",
        "type": "object"
      },
      "FDXNotificationCategory": {
        "description": "Category of Notification",
        "enum": [
          "SECURITY",
          "MAINTENANCE",
          "FRAUD",
          "CONSENT",
          "NEW_DATA"
        ],
        "title": "Notification Category",
        "type": "string"
      },
      "FDXNotificationPayload": {
        "description": "Custom key-value pairs payload for a notification",
        "properties": {
          "customFields": {
            "$ref": "#/$defs/FDXFiAttribute"
          },
          "id": {
            "description": "ID for the origination entity related to the notification",
            "type": "string"
          },
          "idType": {
            "$ref": "#/$defs/FDXNotificationPayloadIdType"
          }
        },
        "title": "Notification Payload entity",
        "type": "object"
      },
      "FDXFiAttribute": {
        "description": "Financial Institution provider-specific attribute",
        "properties": {
          "name": {
            "description": "Name of attribute",
            "type": "string"
          },
          "value": {
            "description": "Value of attribute",
            "type": "string"
          }
        },
        "title": "FI Attribute entity",
        "type": "object"
      },
      "FDXNotificationPayloadIdType": {
        "description": "Type of entity causing origination of a notification",
        "enum": [
          "ACCOUNT",
          "CUSTOMER",
          "PARTY",
          "MAINTENANCE",
          "CONSENT"
        ],
        "title": "Notification Payload Id Type",
        "type": "string"
      },
      "FDXNotificationPriority": {
        "description": "Priority of notification",
        "enum": [
          "HIGH",
          "MEDIUM",
          "LOW"
        ],
        "title": "Notification Priority",
        "type": "string"
      },
      "FDXParty": {
        "description": "FDX Participant - an entity or person that is a part of a FDX API transaction",
        "properties": {
          "homeUri": {
            "description": "URI for party, where an end user could learn more about the company or application involved in the data sharing chain",
            "format": "uri",
            "type": "string"
          },
          "logoUri": {
            "description": "URI for a logo asset to be displayed to the end user",
            "format": "uri",
            "type": "string"
          },
          "name": {
            "description": "Human recognizable common name",
            "type": "string"
          },
          "registeredEntityId": {
            "description": "Registered id of party",
            "type": "string"
          },
          "registeredEntityName": {
            "description": "Registered name of party",
            "type": "string"
          },
          "registry": {
            "$ref": "#/$defs/FDXPartyRegistry"
          },
          "type": {
            "$ref": "#/$defs/FDXPartyType"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "Party entity",
        "type": "object"
      },
      "FDXPartyRegistry": {
        "description": "The registry containing the partyâ€™s registration with name and id",
        "enum": [
          "FDX",
          "GLEIF",
          "ICANN",
          "PRIVATE"
        ],
        "title": "Party Registry",
        "type": "string"
      },
      "FDXPartyType": {
        "description": "Identifies the type of a party",
        "enum": [
          "DATA_ACCESS_PLATFORM",
          "DATA_PROVIDER",
          "DATA_RECIPIENT",
          "INDIVIDUAL",
          "MERCHANT",
          "VENDOR"
        ],
        "title": "Party Type",
        "type": "string"
      },
      "FDXTimestamp": {
        "description": "ISO 8601 date-time in format 'YYYY-MM-DDThh:mm:ss.nnn[Z|[+|-]hh:mm]' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)",
        "example": "2021-07-15T14:46:41.375Z",
        "format": "date-time",
        "title": "Timestamp",
        "type": "string"
      },
      "FDXNotificationSeverity": {
        "description": "Severity level of notification",
        "enum": [
          "EMERGENCY",
          "ALERT",
          "WARNING",
          "NOTICE",
          "INFO"
        ],
        "title": "Notification Severity",
        "type": "string"
      },
      "FDXNotificationType": {
        "description": "Type of Notification",
        "enum": [
          "CONSENT_REVOKED",
          "CONSENT_UPDATED",
          "CUSTOM",
          "SERVICE",
          "BALANCE",
          "PLANNED_OUTAGE"
        ],
        "title": "Notification Type",
        "type": "string"
      },
      "FDXHateoasLink": {
        "description": "REST application constraint (Hypermedia As The Engine Of Application State)",
        "properties": {
          "action": {
            "$ref": "#/$defs/FDXHateoasLinkAction"
          },
          "href": {
            "description": "URL to invoke the action on the resource",
            "example": "https://api.fi.com/fdx/v4/accounts/12345",
            "format": "uri-reference",
            "type": "string"
          },
          "rel": {
            "description": "Relation of this link to its containing entity, as defined by and with many example relation values at [IETF RFC5988](https://datatracker.ietf.org/doc/html/rfc5988)",
            "type": "string"
          },
          "types": {
            "description": "Content-types that can be used in the Accept header",
            "items": {
              "$ref": "#/$defs/FDXContentTypes"
            },
            "type": "array"
          }
        },
        "required": [
          "href"
        ],
        "title": "HATEOAS Link",
        "type": "object"
      },
      "FDXHateoasLinkAction": {
        "description": "HTTP Method to use for the request",
        "enum": [
          "GET",
          "POST",
          "PATCH",
          "DELETE",
          "PUT"
        ],
        "type": "string"
      },
      "FDXContentTypes": {
        "description": "Types of document formats. (Suggested values)",
        "enum": [
          "application/pdf",
          "image/gif",
          "image/jpeg",
          "image/tiff",
          "image/png",
          "application/json"
        ],
        "title": "Content Types",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://production.plaid.com/fdx/notifications"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Error"
        },
        "We use standard HTTP response codes for success and failure notifications, and our errors are further classified by `error_type`. In general, 200 HTTP codes correspond to success, 40X codes are for developer- or user-related failures, and 50X codes are for Plaid-related issues. An Item with a non-`null` error object will only be part of an API response when calling `/item/get` to view Item status. Otherwise, error fields will be `null` if no error has occurred; if an error has occurred, an error code will be returned instead.",
        "**Key properties:**",
        {
          "$ul": [
            "**causes**: In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.",
            "**display_message**: A user-friendly representation of the error code. `null` if the error is not related to user action.",
            "**documentation_url**: The URL of a Plaid documentation page with more information about the error",
            "**error_code**: The particular error code. Safe for programmatic use.",
            "**error_message**: A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.",
            "**error_type**: A broad categorization of the error. Safe for programmatic use.",
            "**request_id**: A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.",
            "**status**: The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.",
            "**suggested_action**: Suggested steps for resolving the error"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
