{
  "name": "query_query_post",
  "description": "Accepts search query objects array each with query and optional filter. Break down complex questions into sub-questions. Refine results by criteria, e.g. time / source, don't do this often. Split queries if ResponseTooLargeError occurs.",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/QueryRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "QueryRequest": {
        "properties": {
          "namespace": {
            "title": "Namespace",
            "type": "string"
          },
          "queries": {
            "items": {
              "$ref": "#/$defs/Query"
            },
            "title": "Queries",
            "type": "array"
          }
        },
        "required": [
          "queries"
        ],
        "title": "QueryRequest",
        "type": "object"
      },
      "Query": {
        "properties": {
          "filter": {
            "$ref": "#/$defs/DocumentMetadataFilter"
          },
          "query": {
            "title": "Query",
            "type": "string"
          },
          "top_k": {
            "default": 3,
            "title": "Top K",
            "type": "integer"
          }
        },
        "required": [
          "query"
        ],
        "title": "Query",
        "type": "object"
      },
      "DocumentMetadataFilter": {
        "properties": {
          "author": {
            "title": "Author",
            "type": "string"
          },
          "collection_id": {
            "title": "Collection Id",
            "type": "string"
          },
          "document_id": {
            "title": "Document Id",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "title": "Keywords",
            "type": "array"
          },
          "language": {
            "title": "Language",
            "type": "string"
          },
          "source": {
            "$ref": "#/$defs/Source"
          },
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "time_period": {
            "title": "Time Period",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "type": "string"
          }
        },
        "title": "DocumentMetadataFilter",
        "type": "object"
      },
      "Source": {
        "description": "An enumeration.",
        "enum": [
          "email",
          "web",
          "file",
          "chat"
        ],
        "title": "Source",
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "/sub/query"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "QueryResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**results**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "HTTPValidationError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**detail**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
