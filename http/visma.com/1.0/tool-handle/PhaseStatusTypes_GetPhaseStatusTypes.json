{
  "name": "PhaseStatusTypes_GetPhaseStatusTypes",
  "description": "Get phase status types",
  "parameters": {
    "type": "object",
    "properties": {
      "active": {
        "nullable": true,
        "type": "boolean",
        "description": "If not given, return all phase status types, if given as true return only active phase status types, if given as false returns only inactive phase status types"
      },
      "firstRow": {
        "format": "int32",
        "nullable": true,
        "type": "integer",
        "description": "Optional: first row to fetch. Default 0 = first row."
      },
      "rowCount": {
        "format": "int32",
        "nullable": true,
        "type": "integer",
        "description": "Optional: How many rows to fetch, Default all."
      },
      "textToSearch": {
        "default": "",
        "nullable": true,
        "type": "string"
      },
      "calculateRowCount": {
        "default": false,
        "type": "boolean"
      },
      "sortings": {
        "items": {
          "$ref": "#/$defs/KeyValuePairOfStringAndSortDirection"
        },
        "nullable": true,
        "type": "array"
      }
    },
    "$defs": {
      "KeyValuePairOfStringAndSortDirection": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/SortDirection"
          }
        },
        "type": "object"
      },
      "SortDirection": {
        "description": "",
        "enum": [
          "Asc",
          "Desc",
          "AscNullsFirst",
          "AscNullsLast",
          "DescNullsFirst",
          "DescNullsLast"
        ],
        "type": "string",
        "x-enumNames": [
          "Asc",
          "Desc",
          "AscNullsFirst",
          "AscNullsLast",
          "DescNullsFirst",
          "DescNullsLast"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.severa.visma.com/rest-api/v1/phasestatustypes{?active,firstRow,rowCount,textToSearch,calculateRowCount,sortings}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**createdBy**",
              {
                "$ul": [
                  "**code**",
                  "**firstName**",
                  "**guid**",
                  "**lastName**",
                  "**name**"
                ]
              }
            ],
            "**createdDateTime**",
            "**guid**",
            "**isActive** (default: true)",
            [
              "**lastUpdatedBy**",
              {
                "$ul": [
                  "**code**",
                  "**firstName**",
                  "**guid**",
                  "**lastName**",
                  "**name**"
                ]
              }
            ],
            "**lastUpdatedDateTime**",
            "**name**",
            "**sortOrder**"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**details**",
                  "**httpStatusCode**",
                  "**stack**",
                  "**type**: "
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
