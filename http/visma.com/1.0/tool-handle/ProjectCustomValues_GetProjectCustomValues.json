{
  "name": "ProjectCustomValues_GetProjectCustomValues",
  "description": "Get the project custom values.",
  "parameters": {
    "type": "object",
    "properties": {
      "projectGuid": {
        "type": "string",
        "description": "ID of the project."
      },
      "firstRow": {
        "default": 0,
        "format": "int32",
        "nullable": true,
        "type": "integer",
        "description": "Optional: first row to fetch. Default 0 = first row."
      },
      "rowCount": {
        "format": "int32",
        "nullable": true,
        "type": "integer",
        "description": "Optional: How many rows to fetch, Default 20, maximum 100."
      },
      "active": {
        "nullable": true,
        "type": "boolean",
        "description": "Optional: Get only values of active or inactive project custom properties."
      },
      "target": {
        "items": {
          "type": "string"
        },
        "nullable": true,
        "type": "array",
        "description": "List of target for which to get the values."
      },
      "calculateRowCount": {
        "default": false,
        "type": "boolean",
        "description": "Optional: Calculate total number of rows."
      },
      "sortings": {
        "items": {
          "$ref": "#/$defs/KeyValuePairOfStringAndSortDirection"
        },
        "nullable": true,
        "type": "array",
        "description": "Optional: A list of Key-Value pairs, containing names of fields and directions by which the results should be sorted. Any sortable field name (sub-model fields not supported) in the model can be used, while value can be \"Desc\" or \"Asc\". Example: \"?sortings[0].key=Name&sortings[0].value=Desc&sortings[1].key=Number&sortings[1].value=Asc\"."
      }
    },
    "required": [
      "projectGuid"
    ],
    "$defs": {
      "KeyValuePairOfStringAndSortDirection": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/SortDirection"
          }
        },
        "type": "object"
      },
      "SortDirection": {
        "description": "",
        "enum": [
          "Asc",
          "Desc",
          "AscNullsFirst",
          "AscNullsLast",
          "DescNullsFirst",
          "DescNullsLast"
        ],
        "type": "string",
        "x-enumNames": [
          "Asc",
          "Desc",
          "AscNullsFirst",
          "AscNullsLast",
          "DescNullsFirst",
          "DescNullsLast"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.severa.visma.com/rest-api/v1/projects/{projectGuid}/customvalues{?firstRow,rowCount,active,target,calculateRowCount,sortings}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**createdBy**",
              {
                "$ul": [
                  "**code**",
                  "**firstName**",
                  "**guid**",
                  "**lastName**",
                  "**name**"
                ]
              }
            ],
            "**createdDateTime**",
            [
              "**customProperty**",
              {
                "$ul": [
                  "**guid**",
                  "**name**",
                  "**parameters**",
                  "**type**: "
                ]
              }
            ],
            "**guid**",
            [
              "**lastUpdatedBy**",
              {
                "$ul": [
                  "**code**",
                  "**firstName**",
                  "**guid**",
                  "**lastName**",
                  "**name**"
                ]
              }
            ],
            "**lastUpdatedDateTime**",
            "**projectGuid**",
            "**value**"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**details**",
                  "**httpStatusCode**",
                  "**stack**",
                  "**type**: "
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**details**",
                  "**httpStatusCode**",
                  "**stack**",
                  "**type**: "
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
