{
  "name": "ProductCategories_GetProductCategories",
  "description": "Get product categories.",
  "parameters": {
    "type": "object",
    "properties": {
      "active": {
        "nullable": true,
        "type": "boolean",
        "description": "If not given, return all Product categories, if given as true return only active Product categories, if given as false returns only inactive Product categories."
      },
      "firstRow": {
        "format": "int32",
        "nullable": true,
        "type": "integer",
        "description": "Optional: first row to fetch. Default 0 = first row."
      },
      "rowCount": {
        "format": "int32",
        "nullable": true,
        "type": "integer",
        "description": "Optional: How many rows to fetch, Default all."
      },
      "textToSearch": {
        "default": "",
        "nullable": true,
        "type": "string",
        "description": "Optional: Text to search from product category name or code."
      },
      "changedSince": {
        "format": "date-time",
        "nullable": true,
        "type": "string",
        "description": "Optional: Get product categories that have been added or changed after this date time (greater or equal)."
      },
      "calculateRowCount": {
        "default": false,
        "type": "boolean",
        "description": "Optional: Calculate total number of rows."
      },
      "sortings": {
        "items": {
          "$ref": "#/$defs/KeyValuePairOfStringAndSortDirection"
        },
        "nullable": true,
        "type": "array",
        "description": "Optional: A list of Key-Value pairs, containing names of fields and directions by which the results should be sorted. Any sortable field name (submodel fields not supported) in the model can be used, while value can be \"Desc\" or \"Asc\". Example: ?sortings[0].key=Name&sortings[0].value=Desc &sortings[1].key=Code&sortings[1].value=Asc."
      }
    },
    "$defs": {
      "KeyValuePairOfStringAndSortDirection": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/$defs/SortDirection"
          }
        },
        "type": "object"
      },
      "SortDirection": {
        "description": "",
        "enum": [
          "Asc",
          "Desc",
          "AscNullsFirst",
          "AscNullsLast",
          "DescNullsFirst",
          "DescNullsLast"
        ],
        "type": "string",
        "x-enumNames": [
          "Asc",
          "Desc",
          "AscNullsFirst",
          "AscNullsLast",
          "DescNullsFirst",
          "DescNullsLast"
        ]
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.severa.visma.com/rest-api/v1/productcategories{?active,firstRow,rowCount,textToSearch,changedSince,calculateRowCount,sortings}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**",
            [
              "**createdBy**",
              {
                "$ul": [
                  "**code**",
                  "**firstName**",
                  "**guid**",
                  "**lastName**",
                  "**name**"
                ]
              }
            ],
            "**createdDateTime**",
            "**guid**",
            "**isActive** (default: true)",
            "**isDefault**",
            [
              "**lastUpdatedBy**",
              {
                "$ul": [
                  "**code**",
                  "**firstName**",
                  "**guid**",
                  "**lastName**",
                  "**name**"
                ]
              }
            ],
            "**lastUpdatedDateTime**",
            "**name**"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**error**",
              {
                "$ul": [
                  "**details**",
                  "**httpStatusCode**",
                  "**stack**",
                  "**type**: "
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
