{
  "name": "IPInfo",
  "description": "Get location information about an IP address and do reverse DNS (PTR) lookups",
  "parameters": {
    "type": "object",
    "properties": {
      "ip": {
        "type": "string",
        "description": "IPv4 or IPv6 address"
      },
      "reverse-lookup": {
        "default": false,
        "type": "boolean",
        "description": "Do a reverse DNS (PTR) lookup. This option can add extra delay to the request so only use it if you need it"
      }
    },
    "required": [
      "ip"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://neutrinoapi.net/ip-info{?ip,reverse-lookup}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "IPInfoResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**city**: Name of the city (if detectable)",
            "**continent-code**: ISO 2-letter continent code",
            "**country**: Full country name",
            "**country-code**: ISO 2-letter country code",
            "**country-code3**: ISO 3-letter country code",
            "**currency-code**: ISO 4217 currency code associated with the country",
            "**host-domain**: The IPs host domain (only set if reverse-lookup has been used)",
            "**hostname**: The IPs full hostname (only set if reverse-lookup has been used)",
            "**ip**: The IP address",
            "**is-bogon**: True if this is a bogon IP address such as a private network, local network or reserved address",
            "**is-v4-mapped**: True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
            "**is-v6**: True if this is a IPv6 address. False if IPv4",
            "**latitude**: Location latitude",
            "**longitude**: Location longitude",
            "**region**: Name of the region (if detectable)",
            "**region-code**: ISO 3166-2 region code (if detectable)",
            [
              "**timezone**: Map containing timezone details",
              {
                "$ul": [
                  "**abbr**: The time zone abbreviation",
                  "**date**: The current date at the time zone (ISO 8601 format 'YYYY-MM-DD')",
                  "**id**: The time zone ID as per the IANA time zone database (tzdata)",
                  "**name**: The full time zone name",
                  "**offset**: The UTC offset for the time zone (ISO 8601 format 'Â±hh:mm')",
                  "**time**: The current time at the time zone (ISO 8601 format 'hh:mm:ss.sss')"
                ]
              }
            ],
            "**valid**: True if this is a valid IPv4 or IPv6 address"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
