{
  "name": "EmailValidate",
  "description": "Parse, validate and clean an email address",
  "parameters": {
    "type": "object",
    "properties": {
      "email": {
        "type": "string",
        "description": "An email address"
      },
      "fix-typos": {
        "default": false,
        "type": "boolean",
        "description": "Automatically attempt to fix typos in the address"
      }
    },
    "required": [
      "email"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://neutrinoapi.net/email-validate{?email,fix-typos}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "EmailValidateResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**domain**: The email domain",
            "**domain-error**: True if this address has a domain error (e.g. no valid mail server records)",
            "**email**: The email address. If you have used the fix-typos option then this will be the fixed address",
            "**is-disposable**: True if this address is a disposable, temporary or darknet related email address",
            "**is-freemail**: True if this address is a free-mail address",
            "**is-personal**: True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
            "**provider**: The email service provider domain",
            "**syntax-error**: True if this address has a syntax error",
            "**typos-fixed**: True if typos have been fixed",
            "**valid**: Is this a valid email"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
