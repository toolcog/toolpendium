{
  "name": "PhoneValidate",
  "description": "Parse, validate and get location information about a phone number",
  "parameters": {
    "type": "object",
    "properties": {
      "number": {
        "type": "string",
        "description": "A phone number. This can be in international format (E.164) or local format. If passing local format you must also set either the 'country-code' OR 'ip' options as well"
      },
      "country-code": {
        "type": "string",
        "description": "ISO 2-letter country code, assume numbers are based in this country. If not set numbers are assumed to be in international format (with or without the leading + sign)"
      },
      "ip": {
        "type": "string",
        "description": "Pass in a users IP address and we will assume numbers are based in the country of the IP address"
      }
    },
    "required": [
      "number"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://neutrinoapi.net/phone-validate{?number,country-code,ip}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "PhoneValidateResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**country**: The phone number country",
            "**country-code**: The phone number country as an ISO 2-letter country code",
            "**country-code3**: The phone number country as an ISO 3-letter country code",
            "**currency-code**: ISO 4217 currency code associated with the country",
            "**international-calling-code**: The international calling code",
            "**international-number**: The number represented in full international format (E.164)",
            "**is-mobile**: True if this is a mobile number. If the number type is unknown this value will be false",
            "**local-number**: The number represented in local dialing format",
            "**location**: The phone number location. Could be the city, region or country depending on the type of number",
            "**prefix-network**: The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
            "**type**: The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
            "**valid**: Is this a valid phone number"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
