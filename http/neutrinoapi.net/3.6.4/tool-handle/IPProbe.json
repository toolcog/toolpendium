{
  "name": "IPProbe",
  "description": "Execute a realtime network probe against an IPv4 or IPv6 address",
  "parameters": {
    "type": "object",
    "properties": {
      "ip": {
        "type": "string",
        "description": "IPv4 or IPv6 address"
      }
    },
    "required": [
      "ip"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://neutrinoapi.net/ip-probe{?ip}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "IPProbeResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**as-age**: The age of the autonomous system (AS) in number of years since registration",
            "**as-cidr**: The autonomous system (AS) CIDR range",
            "**as-country-code**: The autonomous system (AS) ISO 2-letter country code",
            "**as-country-code3**: The autonomous system (AS) ISO 3-letter country code",
            "**as-description**: The autonomous system (AS) description / company name",
            "**as-domains**: Array of all the domains associated with the autonomous system (AS)",
            "**asn**: The autonomous system (AS) number",
            "**city**: Full city name (if detectable)",
            "**continent-code**: ISO 2-letter continent code",
            "**country**: Full country name",
            "**country-code**: ISO 2-letter country code",
            "**country-code3**: ISO 3-letter country code",
            "**currency-code**: ISO 4217 currency code associated with the country",
            "**host-domain**: The IPs host domain",
            "**hostname**: The IPs full hostname (PTR)",
            "**ip**: The IP address",
            "**is-bogon**: True if this is a bogon IP address such as a private network, local network or reserved address",
            "**is-hosting**: True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
            "**is-isp**: True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
            "**is-proxy**: True if this IP ia a proxy",
            "**is-v4-mapped**: True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
            "**is-v6**: True if this is a IPv6 address. False if IPv4",
            "**is-vpn**: True if this IP ia a VPN",
            "**provider-description**: A description of the provider (usually extracted from the providers website)",
            "**provider-domain**: The domain name of the provider",
            "**provider-type**: The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
            "**provider-website**: The website URL for the provider",
            "**region**: Full region name (if detectable)",
            "**region-code**: ISO 3166-2 region code (if detectable)",
            "**valid**: True if this is a valid IPv4 or IPv6 address",
            "**vpn-domain**: The domain of the VPN provider (may be empty if the VPN domain is not detectable)"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
