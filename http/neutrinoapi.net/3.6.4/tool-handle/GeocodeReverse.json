{
  "name": "GeocodeReverse",
  "description": "Convert a geographic coordinate (latitude and longitude) into a real world address",
  "parameters": {
    "type": "object",
    "properties": {
      "latitude": {
        "type": "string",
        "description": "The location latitude in decimal degrees format"
      },
      "longitude": {
        "type": "string",
        "description": "The location longitude in decimal degrees format"
      },
      "language-code": {
        "default": "en",
        "type": "string",
        "description": "The language to display results in, available languages are: <ul> <li>de, en, es, fr, it, pt, ru</li> </ul>"
      },
      "zoom": {
        "default": "address",
        "type": "string",
        "description": "The zoom level to respond with: <br> <ul> <li>address - the most precise address available</li> <li>street - the street level</li> <li>city - the city level</li> <li>state - the state level</li> <li>country - the country level</li> </ul>"
      }
    },
    "required": [
      "latitude",
      "longitude"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://neutrinoapi.net/geocode-reverse{?latitude,longitude,language-code,zoom}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "GeocodeReverseResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**address**: The complete address using comma-separated values",
            "**address-components**: The components which make up the address such as road, city, state, etc",
            "**city**: The city of the location",
            "**country**: The country of the location",
            "**country-code**: The ISO 2-letter country code of the location",
            "**country-code3**: The ISO 3-letter country code of the location",
            "**currency-code**: ISO 4217 currency code associated with the country",
            "**found**: True if these coordinates map to a real location",
            "**latitude**: The location latitude",
            "**location-tags**: Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
            "**location-type**: The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
            "**longitude**: The location longitude",
            "**postal-address**: The formatted address using local standards suitable for printing on an envelope",
            "**postal-code**: The postal code for the location",
            "**region-code**: The ISO 3166-2 region code for the location",
            "**state**: The state of the location",
            "**timezone**: Map containing timezone details for the location"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
