{
  "name": "HTMLRender",
  "description": "Render HTML content to PDF, JPG or PNG",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "content": {
            "description": "The HTML content. This can be either a URL to load from, a file upload (multipart/form-data) or an HTML content string",
            "type": "string"
          },
          "css": {
            "description": "Inject custom CSS into the HTML. e.g. 'body { background-color: red;}'",
            "type": "string"
          },
          "delay": {
            "default": 0,
            "description": "Number of seconds to wait before rendering the page (can be useful for pages with animations etc)",
            "format": "int32",
            "type": "integer"
          },
          "footer": {
            "description": "The footer HTML to insert into each page. The following dynamic tags are supported: {date}, {title}, {url}, {pageNumber}, {totalPages}",
            "type": "string"
          },
          "format": {
            "default": "PDF",
            "description": "Which format to output, available options are: PDF, PNG, JPG",
            "type": "string"
          },
          "grayscale": {
            "default": false,
            "description": "Render the final document in grayscale",
            "type": "boolean"
          },
          "header": {
            "description": "The header HTML to insert into each page. The following dynamic tags are supported: {date}, {title}, {url}, {pageNumber}, {totalPages}",
            "type": "string"
          },
          "ignore-certificate-errors": {
            "default": false,
            "description": "Ignore any TLS/SSL certificate errors",
            "type": "boolean"
          },
          "image-height": {
            "description": "If rendering to an image format (PNG or JPG) use this image height (in pixels). The default is automatic which dynamically sets the image height based on the content",
            "format": "int32",
            "type": "integer"
          },
          "image-width": {
            "default": 1024,
            "description": "If rendering to an image format (PNG or JPG) use this image width (in pixels)",
            "format": "int32",
            "type": "integer"
          },
          "landscape": {
            "default": false,
            "description": "Set the document to landscape orientation",
            "type": "boolean"
          },
          "margin": {
            "default": 0,
            "description": "The document margin (in mm)",
            "format": "double",
            "type": "number"
          },
          "margin-bottom": {
            "default": 0,
            "description": "The document bottom margin (in mm)",
            "format": "double",
            "type": "number"
          },
          "margin-left": {
            "default": 0,
            "description": "The document left margin (in mm)",
            "format": "double",
            "type": "number"
          },
          "margin-right": {
            "default": 0,
            "description": "The document right margin (in mm)",
            "format": "double",
            "type": "number"
          },
          "margin-top": {
            "default": 0,
            "description": "The document top margin (in mm)",
            "format": "double",
            "type": "number"
          },
          "page-height": {
            "description": "Set the PDF page height explicitly (in mm)",
            "format": "double",
            "type": "number"
          },
          "page-size": {
            "default": "A4",
            "description": "Set the document page size, can be one of: A0 - A9, B0 - B10, Comm10E, DLE or Letter",
            "type": "string"
          },
          "page-width": {
            "description": "Set the PDF page width explicitly (in mm)",
            "format": "double",
            "type": "number"
          },
          "timeout": {
            "default": 300,
            "description": "Timeout in seconds. Give up if still trying to load the HTML content after this number of seconds",
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "description": "The document title",
            "type": "string"
          },
          "zoom": {
            "default": 1,
            "description": "Set the zoom factor when rendering the page (2.0 for double size, 0.5 for half size)",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "content"
        ],
        "type": "object"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://neutrinoapi.net/html-render"
    },
    "body": {
      "$": "body",
      "encode": "urlencoded"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
