{
  "name": "ImageWatermark",
  "description": "Watermark one image with another image",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "bg-color": {
            "default": "transparent",
            "description": "The image background color in hexadecimal notation (e.g. #0000ff). For PNG output the special value of 'transparent' can also be used. For JPG output the default is black (#000000)",
            "type": "string"
          },
          "format": {
            "default": "png",
            "description": "The output image format, can be either png or jpg",
            "type": "string"
          },
          "height": {
            "description": "If set resize the resulting image to this height (in px)",
            "format": "int32",
            "type": "integer"
          },
          "image-url": {
            "description": "The URL or Base64 encoded Data URL for the source image. You can also upload an image file directly using multipart/form-data",
            "type": "string"
          },
          "opacity": {
            "default": 50,
            "description": "The opacity of the watermark (0 to 100)",
            "format": "int32",
            "type": "integer"
          },
          "position": {
            "default": "center",
            "description": "The position of the watermark image, possible values are: <br>center, top-left, top-center, top-right, bottom-left, bottom-center, bottom-right",
            "type": "string"
          },
          "resize-mode": {
            "default": "scale",
            "description": "The resize mode to use, we support 3 main resizing modes: <ul> <li><b>scale</b><br>Resize to within the width and height specified while preserving aspect ratio. In this mode the width or height will be automatically adjusted to fit the aspect ratio</li> <li><b>pad</b><br>Resize to exactly the width and height specified while preserving aspect ratio and pad any space left over. Any padded space will be filled in with the 'bg-color' value</li> <li><b>crop</b><br>Resize to exactly the width and height specified while preserving aspect ratio and crop any space which fall outside the area. The cropping window is centered on the original image</li> </ul>",
            "type": "string"
          },
          "watermark-url": {
            "description": "The URL or Base64 encoded Data URL for the watermark image. You can also upload an image file directly using multipart/form-data",
            "type": "string"
          },
          "width": {
            "description": "If set resize the resulting image to this width (in px)",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "image-url",
          "watermark-url"
        ],
        "type": "object"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://neutrinoapi.net/image-watermark"
    },
    "body": {
      "$": "body",
      "encode": "urlencoded"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$lang": "json",
      "$code": {
        "$encode": "json",
        "$indent": true,
        "$content": {
          "$": "$.body"
        }
      }
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "default": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "APIError"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**api-error**: API error code. If set and > 0 then an API error has occurred your request could not be completed",
            "**api-error-msg**: API error message"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
