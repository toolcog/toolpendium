{
  "name": "getProjectDomains",
  "description": "Retrieve the domains associated with a given project by passing either the project `id` or `name` in the URL.",
  "parameters": {
    "type": "object",
    "properties": {
      "idOrName": {
        "description": "The unique project identifier or the project name",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          }
        ]
      },
      "production": {
        "default": "false",
        "description": "Filters only production domains when set to `true`.",
        "enum": [
          "true",
          "false"
        ]
      },
      "gitBranch": {
        "description": "Filters domains based on specific branch.",
        "type": "string"
      },
      "redirects": {
        "default": "true",
        "description": "Excludes redirect project domains when \\\"false\\\". Includes redirect project domains when \\\"true\\\" (default).",
        "enum": [
          "true",
          "false"
        ]
      },
      "redirect": {
        "description": "Filters domains based on their redirect target.",
        "examples": [
          "example.com"
        ],
        "type": "string"
      },
      "verified": {
        "description": "Filters domains based on their verification status.",
        "enum": [
          "true",
          "false"
        ]
      },
      "limit": {
        "description": "Maximum number of domains to list from a request (max 100).",
        "examples": [
          20
        ],
        "type": "number"
      },
      "since": {
        "description": "Get domains created after this JavaScript timestamp.",
        "examples": [
          1609499532000
        ],
        "type": "number"
      },
      "until": {
        "description": "Get domains created before this JavaScript timestamp.",
        "examples": [
          1612264332000
        ],
        "type": "number"
      },
      "order": {
        "default": "DESC",
        "description": "Domains sort order by createdAt",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "teamId": {
        "type": "string",
        "description": "The Team identifier or slug to perform the request on behalf of."
      }
    },
    "required": [
      "idOrName"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.vercel.com/v9/projects/{idOrName}/domains{?production,gitBranch,redirects,redirect,verified,limit,since,until,order,teamId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**domains**",
            [
              "**pagination**: This object contains information related to the pagination of the current request, including the necessary parameters to get the next or previous page of data.",
              {
                "$ul": [
                  "**count**: Amount of items in the current page.",
                  "**next**: Timestamp that must be used to request the next page.",
                  "**prev**: Timestamp that must be used to request the previous page."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
