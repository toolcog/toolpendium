{
  "name": "cancelDeployment",
  "description": "This endpoint allows you to cancel a deployment which is currently building, by supplying its `id` in the URL.",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "description": "The unique identifier of the deployment.",
        "examples": [
          "dpl_5WJWYSyB7BpgTj3EuwF37WMRBXBtPQ2iTMJHJBJyRfd"
        ],
        "type": "string"
      },
      "teamId": {
        "type": "string",
        "description": "The Team identifier or slug to perform the request on behalf of."
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PATCH",
    "url": {
      "$uri": "https://api.vercel.com/v12/deployments/{id}/cancel{?teamId}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**alias**: A list of all the aliases (default aliases, staging aliases and production aliases) that were assigned upon deployment creation",
            "**aliasAssigned**: A boolean that will be true when the aliases from the alias property were assigned successfully",
            "**aliasAssignedAt**",
            [
              "**aliasError**: An object that will contain a `code` and a `message` when the aliasing fails, otherwise the value will be `null`",
              {
                "$ul": [
                  "**code**",
                  "**message**"
                ]
              }
            ],
            "**aliasFinal**",
            [
              "**aliasWarning**",
              {
                "$ul": [
                  "**action**",
                  "**code**",
                  "**link**",
                  "**message**"
                ]
              }
            ],
            "**automaticAliases**",
            "**bootedAt**",
            [
              "**build**",
              {
                "$ul": [
                  "**env**: The keys of the environment variables that were assigned during the build phase."
                ]
              }
            ],
            "**buildErrorAt**",
            "**buildingAt**",
            "**builds**",
            "**canceledAt**",
            "**checksConclusion**",
            "**checksState**",
            "**connectConfigurationId**: The ID of Vercel Connect configuration used for this deployment",
            "**createdAt**: A number containing the date when the deployment was created in milliseconds",
            "**createdIn**: The region where the deployment was first created",
            [
              "**creator**: Information about the deployment creator",
              {
                "$ul": [
                  "**uid**: The ID of the user that created the deployment",
                  "**username**: The username of the user that created the deployment"
                ]
              }
            ],
            "**env**: The keys of the environment variables that were assigned during runtime",
            "**errorCode**",
            "**errorLink**",
            "**errorMessage**",
            "**errorStep**",
            "**functions**: An object used to configure your Serverless Functions",
            "**gitRepo**",
            "**gitSource**",
            "**id**: A string holding the unique ID of the deployment",
            "**inspectorUrl**: Vercel URL to inspect the deployment.",
            "**isInConcurrentBuildsQueue**: Is the deployment currently queued waiting for a Concurrent Build Slot to be available",
            "**lambdas**",
            "**meta**: An object containing the deployment's metadata",
            "**monorepoManager**: An monorepo manager that was used for the deployment",
            "**name**: The name of the project associated with the deployment at the time that the deployment was created",
            "**ownerId**: The unique ID of the user or team the deployment belongs to",
            "**plan**: The pricing plan the deployment was made under",
            "**previewCommentsEnabled**: Whether or not preview comments are enabled for the deployment",
            "**projectId**: The ID of the project the deployment is associated with",
            "**public**: A boolean representing if the deployment is public or not. By default this is `false`",
            "**readyState**: The state of the deployment depending on the process of deploying, or if it is ready or in an error state",
            "**regions**: The regions the deployment exists in",
            "**routes**: A list of routes objects used to rewrite paths to point towards other internal or external paths",
            "**source**: Where was the deployment created from",
            "**target**: If defined, either `staging` if a staging alias in the format `<project>.<team>.now.sh` was assigned upon creation, or `production` if the aliases from `alias` were assigned",
            [
              "**team**: The team that owns the deployment if any",
              {
                "$ul": [
                  "**id**: The ID of the team owner",
                  "**name**: The name of the team owner",
                  "**slug**: The slug of the team owner"
                ]
              }
            ],
            "**type**",
            "**url**: A string with the unique URL of the deployment",
            "**userAliases**: An array of domains that were provided by the user when creating the Deployment.",
            "**version**: The platform version that was used to create the deployment."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
