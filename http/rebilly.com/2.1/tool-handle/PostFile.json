{
  "name": "PostFile",
  "description": "Additionally, a file can be sent with:.\n - multipart/form-data POST request: in this case all property names are the same as the JSON ones (`file` is an uploaded file)\n - file body request: the file body is sent as the request body, with the appropriate `Content-Type`. No additional\n properties can be set along the request data\n\nThe following file types only are allowed:\n - jpg\n - png\n - gif\n - pdf\n - mp3\n\n\nIf using a Publishable Api Key, only private files can be created. The files can later on be modified or used using\n a secret API key.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "Organization-Id": {
        "$ref": "#/components/schemas/ResourceId",
        "description": "Organization identifier in scope of which need to perform request (if not specified, the default organization will be used)."
      },
      "body": {
        "oneOf": [
          {
            "$ref": "#/$defs/FileCreateFromInline"
          },
          {
            "$ref": "#/$defs/FileCreateFromUrl"
          }
        ]
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "FileCreateFromInline": {
        "properties": {
          "description": {
            "description": "The file description.",
            "example": "My file description",
            "type": "string"
          },
          "file": {
            "description": "The file in base64 encoded format.",
            "example": "R0lGODlhAQABAIAAAAUEBAAAACwAAAAAAQABAAACAkQBADs=",
            "type": "string"
          },
          "isPublic": {
            "description": "The File visibility. If public a permalink is provided.",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The file name used for downloading.",
            "example": "logo.png",
            "type": "string"
          },
          "tags": {
            "description": "The tags list.",
            "example": [
              "test",
              "tags"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      },
      "FileCreateFromUrl": {
        "properties": {
          "description": {
            "description": "The file description.",
            "example": "My file description",
            "type": "string"
          },
          "isPublic": {
            "description": "The File visibility. If public a permalink is provided.",
            "example": false,
            "type": "boolean"
          },
          "name": {
            "description": "The file name used for downloading.",
            "example": "logo.png",
            "type": "string"
          },
          "tags": {
            "description": "The tags list.",
            "example": [
              "test",
              "tags"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "url": {
            "description": "The URL of the file to upload.",
            "example": "https://blog.rebilly.com/wp-content/uploads/2017/09/rb_LogoInverted_Small.png",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api-sandbox.rebilly.com/files"
    },
    "headers": {
      "Organization-Id": {
        "$": "Organization-Id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**_links**: The links related to resource.",
            "**createdTime**: The upload date/time.",
            "**description**: The File description.",
            "**extension**: The File extension.",
            "**height**: Image height, applicable to images only.",
            "**id**",
            "**isPublic**: Is the file available publicly (without authentication). If true, the permalink in the _links section contains the public URL.",
            "**mime**: The mime type.",
            "**name**: Original File name.",
            "**sha1**: Hash sum of the file.",
            "**size**: The File size in bytes.",
            "**tags**: The tags list.",
            "**updatedTime**: The latest update date/time.",
            "**width**: Image width, applicable to images only."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**",
            "**invalidFields**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
