{
  "name": "GetPlanCollection",
  "description": "Retrieve a list of plans.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "filter": {
        "type": "string",
        "description": "The collection items filter requires a special format.\nUse \",\" for multiple allowed values.  Use \";\" for multiple fields.\nSee the [filter guide](https://api-reference.rebilly.com/#section/Using-filter-with-collections) for more options and examples about this format.\n"
      },
      "sort": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "The collection items sort field and order (prefix with \"-\" for descending sort)."
      },
      "limit": {
        "maximum": 1000,
        "minimum": 0,
        "type": "integer",
        "description": "The collection items limit."
      },
      "offset": {
        "minimum": 0,
        "type": "integer",
        "description": "The collection items offset."
      },
      "q": {
        "type": "string",
        "description": "The partial search of the text fields."
      },
      "Organization-Id": {
        "$ref": "#/components/schemas/ResourceId",
        "description": "Organization identifier in scope of which need to perform request (if not specified, the default organization will be used)."
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api-sandbox.rebilly.com/plans{?filter,sort,limit,offset,q}"
    },
    "headers": {
      "Organization-Id": {
        "$": "Organization-Id"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**createdTime**: Plan created time.",
            "**currency**",
            "**currencySign**: Currency sign.",
            "**customFields**: Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). (default: [object Object])",
            "**id**: The plan ID.",
            "**isTrialOnly**: Whether a plan has a trial without recurring instructions.",
            "**name**: The plan name, displayed on invoices and receipts.",
            [
              "**pricing**",
              {
                "$ul": [
                  "**formula**: The price formula determines what algorithm is used to calculate the invoice price based on a few factors,"
                ]
              }
            ],
            "**productId**: The related product ID.",
            "**productOptions**: Name-value pairs to specify the product options.",
            [
              "**recurringInterval**",
              {
                "$ul": [
                  "**length**: The length of time.",
                  "**unit**: The unit of time.",
                  "**billingTiming**: The billing timing in relation to the service period. (default: prepaid)",
                  "**limit**: The number of invoices this subscription order will generate"
                ]
              }
            ],
            "**revision**: Increments when the plan is modified. ",
            [
              "**setup**: The setup. Set `null` if no setup.",
              {
                "$ul": [
                  "**price**: The price of a setup - 0 is a valid value (for free)."
                ]
              }
            ],
            [
              "**trial**: The trial. Set `null` if no trial.",
              {
                "$ul": [
                  [
                    "**period**",
                    {
                      "$ul": [
                        "**length**: The length of time.",
                        "**unit**: The unit of time."
                      ]
                    }
                  ],
                  "**price**: The price of the trial. For a free trial, use `0`."
                ]
              }
            ],
            "**updatedTime**: Plan updated time.",
            "**_links**: The links related to resource.",
            [
              "**invoiceTimeShift**: The invoice time shift in conjunction with `billingTiming` allows to setup different billing use cases such as:",
              {
                "$ul": [
                  [
                    "**dueTimeShift**: The calculation instruction of due time. (default: [object Object])",
                    {
                      "$ul": [
                        "**duration**: The number of the units.",
                        "**unit**"
                      ]
                    }
                  ],
                  [
                    "**issueTimeShift**: The calculation instruction of billing time.",
                    {
                      "$ul": [
                        "**chronology**: The chronology of the billing time relatively to the service period start.",
                        "**duration**: The number of the units.",
                        "**unit**"
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
