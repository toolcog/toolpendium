{
  "name": "PostPaymentCard",
  "description": "Create a Payment Card.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "Organization-Id": {
        "$ref": "#/components/schemas/ResourceId",
        "description": "Organization identifier in scope of which need to perform request (if not specified, the default organization will be used)."
      },
      "body": {
        "oneOf": [
          {
            "$ref": "#/$defs/PaymentCardCreateToken"
          },
          {
            "$ref": "#/$defs/PaymentCardCreatePlain"
          }
        ],
        "description": "PaymentCard resource."
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "PaymentCardCreateToken": {
        "properties": {
          "customFields": {
            "$ref": "#/$defs/ResourceCustomFields"
          },
          "customerId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              }
            ],
            "description": "The Customer's ID."
          },
          "token": {
            "description": "PaymentCardToken ID.",
            "type": "string"
          }
        },
        "required": [
          "customerId",
          "token"
        ],
        "type": "object"
      },
      "ResourceCustomFields": {
        "default": {},
        "description": "Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats).\n",
        "example": {
          "foo": "bar"
        },
        "type": "object"
      },
      "ResourceId": {
        "description": "The resource ID. Defaults to UUID v4.",
        "example": "4f6cf35x-2c4y-483z-a0a9-158621f77a21",
        "maxLength": 50,
        "type": "string"
      },
      "PaymentCardCreatePlain": {
        "properties": {
          "billingAddress": {
            "allOf": [
              {
                "$ref": "#/$defs/ContactObject"
              }
            ],
            "description": "The billing address."
          },
          "customFields": {
            "$ref": "#/$defs/ResourceCustomFields"
          },
          "customerId": {
            "allOf": [
              {
                "$ref": "#/$defs/ResourceId"
              }
            ],
            "description": "The Customer's ID."
          },
          "cvv": {
            "description": "Card's cvv (card verification value).",
            "type": "string",
            "writeOnly": true
          },
          "expMonth": {
            "description": "Card's expiration month.",
            "type": "integer"
          },
          "expYear": {
            "description": "Card's expiration year.",
            "type": "integer"
          },
          "method": {
            "description": "The method of payment instrument.",
            "enum": [
              "payment-card"
            ],
            "type": "string"
          },
          "pan": {
            "description": "The card PAN (Primary Account Number).",
            "type": "string",
            "writeOnly": true
          },
          "riskMetadata": {
            "$ref": "#/$defs/RiskMetadata"
          }
        },
        "required": [
          "method",
          "customerId",
          "pan",
          "expYear",
          "expMonth",
          "billingAddress"
        ],
        "type": "object"
      },
      "ContactObject": {
        "properties": {
          "address": {
            "description": "The contact street address.",
            "example": "36 Craven St",
            "maxLength": 60,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\/\\pL,.#;:()']+$",
            "type": "string"
          },
          "address2": {
            "description": "The contact street address (second line).",
            "maxLength": 60,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\/\\pL,.#;:()']+$",
            "type": "string"
          },
          "city": {
            "description": "The contact city.",
            "example": "London",
            "maxLength": 45,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\pL,.']+$",
            "type": "string"
          },
          "country": {
            "description": "The contact country ISO Alpha-2 code.",
            "example": "GB",
            "maxLength": 2,
            "nullable": true,
            "pattern": "^[A-Z]{2}$",
            "type": "string"
          },
          "emails": {
            "$ref": "#/$defs/ContactEmails"
          },
          "firstName": {
            "description": "The contact first name.",
            "example": "Benjamin",
            "maxLength": 45,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\pL,.']+$",
            "type": "string"
          },
          "hash": {
            "description": "A hash that can be used to compare multiple contacts for identical attribute values.",
            "example": "056ae6d97c788b9e98b049ebafd7b229bf852221",
            "maxLength": 40,
            "readOnly": true,
            "type": "string"
          },
          "lastName": {
            "description": "The contact last name.",
            "example": "Franklin",
            "maxLength": 45,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\pL,.']+$",
            "type": "string"
          },
          "organization": {
            "description": "The contact organization.",
            "example": {
              "$ref": "#/components/schemas/ReadyToPayMethods/example/2/feature"
            },
            "maxLength": 255,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\pL,.']+$",
            "type": "string"
          },
          "phoneNumbers": {
            "$ref": "#/$defs/ContactPhoneNumbers"
          },
          "postalCode": {
            "description": "The contact postal code.",
            "example": "WC2N 5NF",
            "maxLength": 10,
            "nullable": true,
            "pattern": "^[\\w\\s\\-]+$",
            "type": "string"
          },
          "region": {
            "description": "The contact region (state).",
            "example": "London",
            "maxLength": 45,
            "nullable": true,
            "pattern": "^[\\w\\s\\-\\/\\pL,.#;:()']+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactEmails": {
        "description": "The list of emails.",
        "items": {
          "properties": {
            "label": {
              "description": "The email label.",
              "example": "main",
              "maxLength": 45,
              "type": "string"
            },
            "primary": {
              "description": "True if email is primary.",
              "example": true,
              "type": "boolean"
            },
            "value": {
              "description": "The email value.",
              "example": "rebilly@example.com",
              "format": "email",
              "maxLength": 255,
              "type": "string"
            }
          },
          "required": [
            "label",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "ContactPhoneNumbers": {
        "description": "The list of phone numbers.",
        "items": {
          "properties": {
            "label": {
              "description": "The phone label.",
              "example": "main",
              "maxLength": 45,
              "type": "string"
            },
            "primary": {
              "description": "True if phone is primary.",
              "example": true,
              "type": "boolean"
            },
            "value": {
              "description": "The phone value.",
              "example": "512-710-1640",
              "maxLength": 50,
              "type": "string"
            }
          },
          "required": [
            "label",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "RiskMetadata": {
        "description": "Risk metadata used for 3DS and risk scoring.",
        "properties": {
          "accuracyRadius": {
            "description": "Accuracy radius for specified ipAddress (kilometers).",
            "readOnly": true,
            "type": "integer"
          },
          "browserData": {
            "$ref": "#/$defs/BrowserData"
          },
          "city": {
            "description": "City for specified ipAddress.",
            "example": "New York",
            "readOnly": true,
            "type": "string"
          },
          "country": {
            "description": "Country ISO Alpha-2 code for specified ipAddress.",
            "example": "US",
            "maxLength": 2,
            "readOnly": true,
            "type": "string"
          },
          "deviceVelocity": {
            "description": "Number of transactions for this device (based on fingerprint) in the last 24 hours.",
            "readOnly": true,
            "type": "integer"
          },
          "distance": {
            "description": "Distance between IP Address and Billing Address geolocation (kilometers).",
            "readOnly": true,
            "type": "integer"
          },
          "fingerprint": {
            "description": "The fingerprint.",
            "example": "pIUt3xbgX3l9g3YDiLbx",
            "maxLength": 50,
            "type": "string"
          },
          "hasMismatchedBankCountry": {
            "description": "True if the bank country and geo-IP address are not the same.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasMismatchedBillingAddressCountry": {
            "description": "True if the billing address country and geo-IP address are not the same.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasMismatchedHolderName": {
            "description": "True if the customer's name from billing address and from customer's primary address are not the same.",
            "readOnly": true,
            "type": "boolean"
          },
          "hasMismatchedTimeZone": {
            "description": "True if the browser time zone and IP address associated time zone are not the same.",
            "readOnly": true,
            "type": "boolean"
          },
          "httpHeaders": {
            "$ref": "#/$defs/HttpHeaders"
          },
          "ipAddress": {
            "description": "The customer's IP.",
            "example": "93.92.91.90",
            "format": "ipv4 or ipv6",
            "type": "string"
          },
          "isHosting": {
            "description": "True if customer's ip address is related to hosting.",
            "readOnly": true,
            "type": "boolean"
          },
          "isProxy": {
            "description": "True if customer's ip address is related to proxy.",
            "readOnly": true,
            "type": "boolean"
          },
          "isTor": {
            "description": "True if customer's ip address is related to TOR.",
            "readOnly": true,
            "type": "boolean"
          },
          "isVpn": {
            "description": "True if customer's ip address is related to VPN.",
            "readOnly": true,
            "type": "boolean"
          },
          "isp": {
            "description": "Internet Service Provider name, if available.",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "description": "Latitude for specified ipAddress.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "longitude": {
            "description": "Longitude for specified ipAddress.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "paymentInstrumentVelocity": {
            "description": "Number of transactions for this payment instrument (based on fingerprint) in the last 24 hours.",
            "readOnly": true,
            "type": "integer"
          },
          "postalCode": {
            "description": "Postal code for specified ipAddress.",
            "maxLength": 10,
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Region for specified ipAddress.",
            "example": "NY",
            "readOnly": true,
            "type": "string"
          },
          "score": {
            "description": "Risk score computed per all the factors.",
            "readOnly": true,
            "type": "integer"
          },
          "timeZone": {
            "description": "Time zone for specified ipAddress.",
            "example": "America/New_York",
            "readOnly": true,
            "type": "string"
          },
          "vpnServiceName": {
            "description": "VPN service name, if available.",
            "readOnly": true,
            "type": "string"
          }
        },
        "title": "Risk metadata",
        "type": "object"
      },
      "BrowserData": {
        "description": "Browser data used for 3DS and risk scoring.",
        "properties": {
          "colorDepth": {
            "description": "The browser's color depth in bits per pixel obtained using the `screen.colorDepth` property.",
            "example": 24,
            "maximum": 48,
            "minimum": 1,
            "type": "integer"
          },
          "isJavaEnabled": {
            "description": "Whether Java is enabled in a browser or not. Value is returned from the `navigator.javaEnabled` property.",
            "type": "boolean"
          },
          "language": {
            "description": "The browser's language settings returned from the `navigator.language` property.",
            "example": "en-US",
            "maxLength": 8,
            "type": "string"
          },
          "screenHeight": {
            "description": "The browser's screen height returned from the `screen.height` property.",
            "example": 1080,
            "maximum": 65535,
            "minimum": 0,
            "type": "integer"
          },
          "screenWidth": {
            "description": "The browser's screen width returned from the `screen.width` property.",
            "example": 1920,
            "maximum": 65535,
            "minimum": 0,
            "type": "integer"
          },
          "timeZoneOffset": {
            "description": "The browser's time zone offset in minutes from UTC.\nA positive offset indicates the local time is behind UTC, and negative is ahead.\nCan find it with `(new Date()).getTimezoneOffset()` property.\n",
            "example": 300,
            "maximum": 1410,
            "minimum": -1410,
            "type": "integer"
          }
        },
        "required": [
          "colorDepth",
          "isJavaEnabled",
          "language",
          "screenWidth",
          "screenHeight",
          "timeZoneOffset"
        ],
        "title": "Browser data",
        "type": "object"
      },
      "HttpHeaders": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "The HTTP headers.",
        "example": {
          "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
          "Content-Type": "application/json"
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api-sandbox.rebilly.com/payment-cards"
    },
    "headers": {
      "Organization-Id": {
        "$": "Organization-Id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Payment Card"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**bankCountry**: Payment instrument bank country.",
            "**bankName**: Payment instrument bank name.",
            [
              "**billingAddress**",
              {
                "$ul": [
                  "**address**: The contact street address.",
                  "**address2**: The contact street address (second line).",
                  "**city**: The contact city.",
                  "**country**: The contact country ISO Alpha-2 code.",
                  "**emails**: The list of emails.",
                  "**firstName**: The contact first name.",
                  "**hash**: A hash that can be used to compare multiple contacts for identical attribute values.",
                  "**lastName**: The contact last name.",
                  "**organization**: The contact organization.",
                  "**phoneNumbers**: The list of phone numbers.",
                  "**postalCode**: The contact postal code.",
                  "**region**: The contact region (state)."
                ]
              }
            ],
            "**bin**: The card's bin (the PAN's first 6 digits).",
            "**brand**",
            "**createdTime**: Payment instrument created time.",
            "**customFields**: Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). (default: [object Object])",
            "**customerId**: The сustomer's ID.",
            "**cvv**: Card's cvv (card verification value).",
            "**expMonth**: Card's expiration month.",
            "**expYear**: Card's expiration year.",
            "**fingerprint**: A unique value to identify the payment instrument regardless of variable values. It contains alphanumeric values.",
            "**id**: The payment instrument ID.",
            "**last4**: The PAN's last 4 digits.",
            "**method**: The method of payment instrument.",
            "**pan**: The card PAN (primary account number).",
            [
              "**riskMetadata**: Risk metadata used for 3DS and risk scoring.",
              {
                "$ul": [
                  "**accuracyRadius**: Accuracy radius for specified ipAddress (kilometers).",
                  [
                    "**browserData**: Browser data used for 3DS and risk scoring.",
                    {
                      "$ul": [
                        "**colorDepth**: The browser's color depth in bits per pixel obtained using the `screen.colorDepth` property.",
                        "**isJavaEnabled**: Whether Java is enabled in a browser or not. Value is returned from the `navigator.javaEnabled` property.",
                        "**language**: The browser's language settings returned from the `navigator.language` property.",
                        "**screenHeight**: The browser's screen height returned from the `screen.height` property.",
                        "**screenWidth**: The browser's screen width returned from the `screen.width` property.",
                        "**timeZoneOffset**: The browser's time zone offset in minutes from UTC."
                      ]
                    }
                  ],
                  "**city**: City for specified ipAddress.",
                  "**country**: Country ISO Alpha-2 code for specified ipAddress.",
                  "**deviceVelocity**: Number of transactions for this device (based on fingerprint) in the last 24 hours.",
                  "**distance**: Distance between IP Address and Billing Address geolocation (kilometers).",
                  "**fingerprint**: The fingerprint.",
                  "**hasMismatchedBankCountry**: True if the bank country and geo-IP address are not the same.",
                  "**hasMismatchedBillingAddressCountry**: True if the billing address country and geo-IP address are not the same.",
                  "**hasMismatchedHolderName**: True if the customer's name from billing address and from customer's primary address are not the same.",
                  "**hasMismatchedTimeZone**: True if the browser time zone and IP address associated time zone are not the same.",
                  "**httpHeaders**: The HTTP headers.",
                  "**ipAddress**: The customer's IP.",
                  "**isHosting**: True if customer's ip address is related to hosting.",
                  "**isProxy**: True if customer's ip address is related to proxy.",
                  "**isTor**: True if customer's ip address is related to TOR.",
                  "**isVpn**: True if customer's ip address is related to VPN.",
                  "**isp**: Internet Service Provider name, if available.",
                  "**latitude**: Latitude for specified ipAddress.",
                  "**longitude**: Longitude for specified ipAddress.",
                  "**paymentInstrumentVelocity**: Number of transactions for this payment instrument (based on fingerprint) in the last 24 hours.",
                  "**postalCode**: Postal code for specified ipAddress.",
                  "**region**: Region for specified ipAddress.",
                  "**score**: Risk score computed per all the factors.",
                  "**timeZone**: Time zone for specified ipAddress.",
                  "**vpnServiceName**: VPN service name, if available."
                ]
              }
            ],
            "**status**: Payment instrument status. When an instrument is `active` it means it has been used at least once for an approved transaction.",
            "**updatedTime**: Payment instrument updated time.",
            "**_embedded**: Any embedded objects available that are requested by the `expand` querystring parameter.",
            "**_links**: The links related to resource.",
            "**expirationReminderNumber**: Number of expiration reminder events triggered.",
            "**expirationReminderTime**: Time expiration reminder event will be triggered.",
            "**stickyGatewayAccountId**: Default gateway account ID used for transactions."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Payment Card"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**bankCountry**: Payment instrument bank country.",
            "**bankName**: Payment instrument bank name.",
            [
              "**billingAddress**",
              {
                "$ul": [
                  "**address**: The contact street address.",
                  "**address2**: The contact street address (second line).",
                  "**city**: The contact city.",
                  "**country**: The contact country ISO Alpha-2 code.",
                  "**emails**: The list of emails.",
                  "**firstName**: The contact first name.",
                  "**hash**: A hash that can be used to compare multiple contacts for identical attribute values.",
                  "**lastName**: The contact last name.",
                  "**organization**: The contact organization.",
                  "**phoneNumbers**: The list of phone numbers.",
                  "**postalCode**: The contact postal code.",
                  "**region**: The contact region (state)."
                ]
              }
            ],
            "**bin**: The card's bin (the PAN's first 6 digits).",
            "**brand**",
            "**createdTime**: Payment instrument created time.",
            "**customFields**: Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). (default: [object Object])",
            "**customerId**: The сustomer's ID.",
            "**cvv**: Card's cvv (card verification value).",
            "**expMonth**: Card's expiration month.",
            "**expYear**: Card's expiration year.",
            "**fingerprint**: A unique value to identify the payment instrument regardless of variable values. It contains alphanumeric values.",
            "**id**: The payment instrument ID.",
            "**last4**: The PAN's last 4 digits.",
            "**method**: The method of payment instrument.",
            "**pan**: The card PAN (primary account number).",
            [
              "**riskMetadata**: Risk metadata used for 3DS and risk scoring.",
              {
                "$ul": [
                  "**accuracyRadius**: Accuracy radius for specified ipAddress (kilometers).",
                  [
                    "**browserData**: Browser data used for 3DS and risk scoring.",
                    {
                      "$ul": [
                        "**colorDepth**: The browser's color depth in bits per pixel obtained using the `screen.colorDepth` property.",
                        "**isJavaEnabled**: Whether Java is enabled in a browser or not. Value is returned from the `navigator.javaEnabled` property.",
                        "**language**: The browser's language settings returned from the `navigator.language` property.",
                        "**screenHeight**: The browser's screen height returned from the `screen.height` property.",
                        "**screenWidth**: The browser's screen width returned from the `screen.width` property.",
                        "**timeZoneOffset**: The browser's time zone offset in minutes from UTC."
                      ]
                    }
                  ],
                  "**city**: City for specified ipAddress.",
                  "**country**: Country ISO Alpha-2 code for specified ipAddress.",
                  "**deviceVelocity**: Number of transactions for this device (based on fingerprint) in the last 24 hours.",
                  "**distance**: Distance between IP Address and Billing Address geolocation (kilometers).",
                  "**fingerprint**: The fingerprint.",
                  "**hasMismatchedBankCountry**: True if the bank country and geo-IP address are not the same.",
                  "**hasMismatchedBillingAddressCountry**: True if the billing address country and geo-IP address are not the same.",
                  "**hasMismatchedHolderName**: True if the customer's name from billing address and from customer's primary address are not the same.",
                  "**hasMismatchedTimeZone**: True if the browser time zone and IP address associated time zone are not the same.",
                  "**httpHeaders**: The HTTP headers.",
                  "**ipAddress**: The customer's IP.",
                  "**isHosting**: True if customer's ip address is related to hosting.",
                  "**isProxy**: True if customer's ip address is related to proxy.",
                  "**isTor**: True if customer's ip address is related to TOR.",
                  "**isVpn**: True if customer's ip address is related to VPN.",
                  "**isp**: Internet Service Provider name, if available.",
                  "**latitude**: Latitude for specified ipAddress.",
                  "**longitude**: Longitude for specified ipAddress.",
                  "**paymentInstrumentVelocity**: Number of transactions for this payment instrument (based on fingerprint) in the last 24 hours.",
                  "**postalCode**: Postal code for specified ipAddress.",
                  "**region**: Region for specified ipAddress.",
                  "**score**: Risk score computed per all the factors.",
                  "**timeZone**: Time zone for specified ipAddress.",
                  "**vpnServiceName**: VPN service name, if available."
                ]
              }
            ],
            "**status**: Payment instrument status. When an instrument is `active` it means it has been used at least once for an approved transaction.",
            "**updatedTime**: Payment instrument updated time.",
            "**_embedded**: Any embedded objects available that are requested by the `expand` querystring parameter.",
            "**_links**: The links related to resource.",
            "**expirationReminderNumber**: Number of expiration reminder events triggered.",
            "**expirationReminderTime**: Time expiration reminder event will be triggered.",
            "**stickyGatewayAccountId**: Default gateway account ID used for transactions."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**",
            "**invalidFields**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
