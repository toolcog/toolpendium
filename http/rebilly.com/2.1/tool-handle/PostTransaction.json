{
  "name": "PostTransaction",
  "description": "Create a transaction of type `sale` or `authorize`.\nThis endpoint supports two main styles of transactions:\n  1. A real-time decision and response.\n  2. User approval/interaction is required.\n\nA real-time decision is very familiar.  You send a request, and\ninspect the `result` of the response for `approved` or `declined`.\n\nHowever, many transactions, especially those for alternative\nmethods, require the user to interact with a 3rd party.  You\nmay be able to envision PayPal, for example, the user must\ngive permission to complete the payment (or accept the\nbilling agreement).\n\nEven payment cards may require user approval in the case of\n3D secure authentication.  In the event that approval is\nrequired, you will receive a response back and notice\nthat the `result` is `unknown`.  You will find that the\n`status` is `waiting-approval`. And you will find in the\n`_links` section of the response a link for the `approvalUrl`.\n\nIn this case you would either open the `approvalUrl` in an\niframe or in a pop (better workflow for mobile).\n",
  "parameters": {
    "type": "object",
    "properties": {
      "expand": {
        "type": "string",
        "description": "Expand a response to get a full related object included inside of the `_embedded` path in the response.\nIt accepts a comma-separated list of objects to expand.\nSee the [expand guide](https://api-reference.rebilly.com/#section/Expand-to-include-embedded-objects) for more info.\n"
      },
      "Organization-Id": {
        "$ref": "#/components/schemas/ResourceId",
        "description": "Organization identifier in scope of which need to perform request (if not specified, the default organization will be used)."
      },
      "body": {
        "$ref": "#/components/schemas/TransactionRequest",
        "description": "Transaction resource."
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api-sandbox.rebilly.com/transactions{?expand}"
    },
    "headers": {
      "Organization-Id": {
        "$": "Organization-Id"
      }
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            [
              "**3ds**",
              {
                "$ul": [
                  "**authenticated**: 3D Secure authentication response status.",
                  "**enrolled**: Is the cardholder enrolled in 3D Secure.",
                  "**flow**: 3D Secure 2 authentication flow.",
                  "**isDowngraded**: If 3D Secure 2 was attempted but downgraded to 3D Secure 1. (default: false)",
                  "**liability**",
                  "**version**: 3D Secure version."
                ]
              }
            ],
            "**amount**: The transaction's amount.",
            [
              "**billingAddress**",
              {
                "$ul": [
                  "**address**: The contact street address.",
                  "**address2**: The contact street address (second line).",
                  "**city**: The contact city.",
                  "**country**: The contact country ISO Alpha-2 code.",
                  "**emails**: The list of emails.",
                  "**firstName**: The contact first name.",
                  "**hash**: A hash that can be used to compare multiple contacts for identical attribute values.",
                  "**lastName**: The contact last name.",
                  "**organization**: The contact organization.",
                  "**phoneNumbers**: The list of phone numbers.",
                  "**postalCode**: The contact postal code.",
                  "**region**: The contact region (state)."
                ]
              }
            ],
            "**billingDescriptor**: The billing descriptor that appears on the periodic billing statement. Commonly",
            "**childTransactions**: The child transaction IDs.",
            "**createdTime**: Transaction created time.",
            "**currency**",
            "**customFields**: Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). (default: [object Object])",
            "**customerId**: The —Åustomer's ID.",
            "**description**: The payment description.",
            "**gatewayName**: Payment Gateway name, available only after the gateway is selected for the transaction.",
            "**has3ds**",
            "**hasAmountAdjustment**: True if transaction has amount adjustment.",
            "**id**: The transaction ID.",
            "**invoiceIds**: The invoice IDs related to transaction.",
            "**isRebill**",
            "**isRetry**: True if this transaction is retry.",
            "**parentTransactionId**: The parent's transaction ID.",
            "**paymentInstrument**",
            "**planIds**: The plan IDs related to transaction's order(s).",
            "**processedTime**: Transaction processed time.",
            "**purchaseAmount**: The amount actually purchased which may have differed from the originally requested amount in case of an adjustment.",
            "**purchaseCurrency**",
            "**rebillNumber**: The transaction's rebill number.",
            "**redirectUrl**: The URL to redirect the end-user when an offsite transaction is completed. Defaults to the website's configured URL.",
            "**requestAmount**: The amount in the payment request. If adjusted, the purchase amount and billing amount may vary from it.",
            "**requestCurrency**",
            "**requestId**: The transaction's request ID.  This ID must be unique within a 24 hour period. Use this field to prevent duplicated transactions.",
            "**result**: Transaction result.",
            "**retryNumber**: The position in the sequence of retries.",
            "**status**: Transaction status.",
            "**subscriptionIds**: The orders IDs related to transaction's invoice(s).",
            "**type**: Transaction type.",
            "**updatedTime**: Transaction updated time.",
            "**websiteId**: The website ID.",
            "**_embedded**: Any embedded objects available that are requested by the `expand` querystring parameter.",
            "**_links**: The links related to resource.",
            "**acquirerName**: Acquirer name, available only when transaction use gateway, else null.",
            "**arn**: The acquirer reference number.",
            "**bin**: Payment Card BIN.",
            [
              "**bumpOffer**: Bump offer information. Null if hasBumpOffer is false.",
              {
                "$ul": [
                  "**language**: The language of the bump offer that was displayed to user (useful for finding any translation problems).",
                  [
                    "**order**",
                    {
                      "$ul": [
                        "**amount**",
                        "**currency**: ISO 4217 alphabetic currency code."
                      ]
                    }
                  ],
                  "**outcome**: Bump offer status.",
                  "**presentedOffers**: Offers presented to a customer.",
                  [
                    "**selectedOffer**",
                    {
                      "$ul": [
                        "**bumpAmount**: Bump amount.",
                        "**bumpAmountInUsd**: Bump amount in USD.",
                        "**customFields**: Custom Fields list as a map `{\"custom field name\": \"custom field value\", ...}`. The format must follow the saved format (see Custom Fields section for the formats). (default: [object Object])",
                        "**offerId**: Offer ID.",
                        "**offerType**: Offer Type."
                      ]
                    }
                  ],
                  "**version**: The name of the version that was picked (useful for measuring split tests)."
                ]
              }
            ],
            [
              "**dcc**: Dynamic Currency Conversion detailed information. Null if hasDcc is false.",
              {
                "$ul": [
                  [
                    "**base**",
                    {
                      "$ul": [
                        "**amount**",
                        "**currency**: ISO 4217 alphabetic currency code."
                      ]
                    }
                  ],
                  "**outcome**: Dynamic Currency Conversion outcome.",
                  [
                    "**quote**",
                    {
                      "$ul": [
                        "**amount**",
                        "**currency**: ISO 4217 alphabetic currency code."
                      ]
                    }
                  ],
                  "**usdMarkup**: The amount of markup translated to USD."
                ]
              }
            ],
            "**discrepancyTime**: The time of the most recent discrepancy on the transaction.",
            "**disputeStatus**: The dispute's status, else null.",
            "**disputeTime**: Time the dispute was created, else null.",
            [
              "**gateway**: The related gateway information.",
              {
                "$ul": [
                  [
                    "**avsResponse**: The AVS gateway's response.",
                    {
                      "$ul": [
                        "**code**: The response code.",
                        "**message**: The response message.",
                        "**originalCode**: The raw response code.",
                        "**originalMessage**: The raw response message."
                      ]
                    }
                  ],
                  [
                    "**cvvResponse**: The CVV gateway's response.",
                    {
                      "$ul": [
                        "**code**: The response code.",
                        "**message**: The response message.",
                        "**originalCode**: The raw response code.",
                        "**originalMessage**: The raw response message."
                      ]
                    }
                  ],
                  [
                    "**response**: The gateway's response.",
                    {
                      "$ul": [
                        "**code**: The gateway's response code.",
                        "**message**: The gateway's response message.",
                        "**originalCode**: The raw, unmapped gateway's response code.",
                        "**originalMessage**: The raw, unmapped gateway's response message.",
                        "**type**: The gateway's response type."
                      ]
                    }
                  ]
                ]
              }
            ],
            "**gatewayAccountId**: The transaction's Gateway Account ID.",
            "**gatewayTransactionId**: The gateway's transaction ID.",
            "**hadDiscrepancy**: True if the transaction has been updated due to a discrepancy with its. source of truth.",
            "**hasBumpOffer**: True if transaction has a Bump offer.",
            "**hasDcc**: True if transaction has Dynamic Currency Conversion applied.",
            "**isDisputed**: True if transaction is disputed.",
            "**isMerchantInitiated**: True if the transaction was initiated by the merchant.",
            "**isProcessedOutside**: True if the transaction was processed outside of Rebilly.",
            "**isReconciled**: True if the transaction has been verified with gateway batch data.",
            "**method**: Payment Method. Use `paymentInstrument.method` instead.",
            "**notificationUrl**: The URL where a server-to-server POST notification will be sent.  It  will be sent when the",
            "**orderId**: The transaction's order ID.  This ID must be unique within a 24 hour period. This field was renamed to the `requestId`.",
            "**referenceData**: Transaction reference data.",
            "**reportAmount**: Transaction amount converted to organization&nbsp;selected report currency.",
            "**reportCurrency**",
            "**retriedTransactionId**: The retried transaction ID.",
            "**retriesResult**: Retries sequence result.",
            [
              "**retryInstruction**",
              {
                "$ul": [
                  "**afterAttemptPolicy**: The policy on the attempt finishes.",
                  "**afterRetryEndPolicy**: The policy on the retry ends.",
                  "**attempts**"
                ]
              }
            ],
            "**revision**: The number of times the transaction data has been modified.",
            [
              "**riskMetadata**: Risk metadata used for 3DS and risk scoring.",
              {
                "$ul": [
                  "**accuracyRadius**: Accuracy radius for specified ipAddress (kilometers).",
                  [
                    "**browserData**: Browser data used for 3DS and risk scoring.",
                    {
                      "$ul": [
                        "**colorDepth**: The browser's color depth in bits per pixel obtained using the `screen.colorDepth` property.",
                        "**isJavaEnabled**: Whether Java is enabled in a browser or not. Value is returned from the `navigator.javaEnabled` property.",
                        "**language**: The browser's language settings returned from the `navigator.language` property.",
                        "**screenHeight**: The browser's screen height returned from the `screen.height` property.",
                        "**screenWidth**: The browser's screen width returned from the `screen.width` property.",
                        "**timeZoneOffset**: The browser's time zone offset in minutes from UTC."
                      ]
                    }
                  ],
                  "**city**: City for specified ipAddress.",
                  "**country**: Country ISO Alpha-2 code for specified ipAddress.",
                  "**deviceVelocity**: Number of transactions for this device (based on fingerprint) in the last 24 hours.",
                  "**distance**: Distance between IP Address and Billing Address geolocation (kilometers).",
                  "**fingerprint**: The fingerprint.",
                  "**hasMismatchedBankCountry**: True if the bank country and geo-IP address are not the same.",
                  "**hasMismatchedBillingAddressCountry**: True if the billing address country and geo-IP address are not the same.",
                  "**hasMismatchedHolderName**: True if the customer's name from billing address and from customer's primary address are not the same.",
                  "**hasMismatchedTimeZone**: True if the browser time zone and IP address associated time zone are not the same.",
                  "**httpHeaders**: The HTTP headers.",
                  "**ipAddress**: The customer's IP.",
                  "**isHosting**: True if customer's ip address is related to hosting.",
                  "**isProxy**: True if customer's ip address is related to proxy.",
                  "**isTor**: True if customer's ip address is related to TOR.",
                  "**isVpn**: True if customer's ip address is related to VPN.",
                  "**isp**: Internet Service Provider name, if available.",
                  "**latitude**: Latitude for specified ipAddress.",
                  "**longitude**: Longitude for specified ipAddress.",
                  "**paymentInstrumentVelocity**: Number of transactions for this payment instrument (based on fingerprint) in the last 24 hours.",
                  "**postalCode**: Postal code for specified ipAddress.",
                  "**region**: Region for specified ipAddress.",
                  "**score**: Risk score computed per all the factors.",
                  "**timeZone**: Time zone for specified ipAddress.",
                  "**vpnServiceName**: VPN service name, if available."
                ]
              }
            ],
            "**riskScore**: The transaction's risk score.",
            "**scheduledTime**: The time the transaction is scheduled for collection.",
            "**settlementTime**: The time that the transaction was settled by the banking instuition.",
            "**velocity**: The number of transactions by the same customer in the past 24 hours."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "409": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "422": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "The Problem Details JSON Object [[RFC7807](https://tools.ietf.org/html/rfc7807)].",
        "**Key properties:**",
        {
          "$ul": [
            "**type**: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
            "**status**: The HTTP status code.",
            "**title**: A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "**detail**: A human-readable explanation specific to this occurrence of the problem.",
            "**error**",
            "**invalidFields**"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
