{
  "name": "Get_All_Earnings",
  "description": "Get All Earnings returns all earnings for the selected employee.",
  "parameters": {
    "type": "object",
    "properties": {
      "companyId": {
        "type": "string",
        "description": "Company Id"
      },
      "employeeId": {
        "type": "string",
        "description": "Employee Id"
      }
    },
    "required": [
      "companyId",
      "employeeId"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.paylocity.com/api/v2/companies/{companyId}/employees/{employeeId}/earnings"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "The employee earning model",
        "**Key properties:**",
        {
          "$ul": [
            "**agency**: Third-party agency associated with earning. Must match Company setup.<br  />Max length: 10",
            "**amount**: Value that matches CalculationCode to add to gross wages. For percentage (%), enter whole number (10 = 10%).  <br  />Decimal(12,2)",
            "**annualMaximum**: Year to Date dollar amount not to be exceeded for an earning in the calendar year. Used only with company driven maximums. <br  />Decimal(12,2)",
            "**calculationCode**: Defines how earnings are calculated. Common values are *% (percentage of gross), flat (flat dollar amount)*. Defaulted to the Company setup calcCode for earning. <br  />Max length: 20",
            "**costCenter1**: Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10",
            "**costCenter2**: Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10",
            "**costCenter3**: Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10",
            "**earningCode**: Earning code. Must match Company setup. <br  />Max length: 10",
            "**effectiveDate**: Date earning is active. Defaulted to run date or check date based on Company setup. Common formats are MM-DD-CCYY, CCYY-MM-DD.",
            "**endDate**: Stop date of an earning. Common formats are MM-DD-CCYY, CCYY-MM-DD.",
            "**frequency**: Needed if earning is applied differently from the payroll frequency (one time earning for example).<br  /> Max length: 5",
            "**goal**: Dollar amount. The employee earning will stop when the goal amount is reached.<br  /> Decimal(12,2)",
            "**hoursOrUnits**: The value is used in conjunction with the Rate field. When entering Group Term Life Insurance (GTL), it should contain the full amount of the group term life insurance policy. <br  /> Decimal(12,2)",
            "**isSelfInsured**: Used for ACA. If not entered, defaulted to Company earning setup.",
            "**jobCode**: Job code associated with earnings. Must match Company setup.<br  /> Max length: 20",
            "**miscellaneousInfo**: Information to print on the check stub if agency is set up for this earning. <br  />Max length: 50",
            "**paidTowardsGoal**: Amount already paid to employee toward goal. <br  /> Decimal(12,2)",
            "**payPeriodMaximum**: Maximum amount of the earning on a single paycheck. <br  /> Decimal(12,2)",
            "**payPeriodMinimum**: Minimum amount of the earning on a single paycheck. <br  /> Decimal(12,2)",
            "**rate**: Rate is used in conjunction with the hoursOrUnits field. <br  /> Decimal(12,2)",
            "**rateCode**: Rate Code applies to additional pay rates entered for an employee. Must match Company setup. <br  /> Max length: 10",
            "**startDate**: Start date of an earning based on payroll calendar. Common formats are MM-DD-CCYY, CCYY-MM-DD."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    },
    "500": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "The error model",
        "**Key properties:**",
        {
          "$ul": [
            "**field**: The name of the field, or property in the request message that contains an error.",
            "**message**: The error message.",
            "**options**: A list of options associated with this error. These options may indicate valid values for the field, or property that contains an error.",
            "**path**: The JSON path of the field, or property, that contains an error in the request message."
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": "Item"
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
