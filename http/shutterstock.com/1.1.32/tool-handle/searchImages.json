{
  "name": "searchImages",
  "description": "This endpoint searches for images. If you specify more than one search parameter, the API uses an AND condition. Array parameters can be specified multiple times; in this case, the API uses an AND or an OR condition with those values, depending on the parameter. You can also filter search terms out in the `query` parameter by prefixing the term with NOT. Free API accounts show results only from a limited library of media, not the full Shutterstock media library. Also, the number of search fields they can use in a request is limited.",
  "parameters": {
    "type": "object",
    "properties": {
      "added_date": {
        "format": "date",
        "type": "string",
        "description": "Show images added on the specified date"
      },
      "added_date_start": {
        "format": "date",
        "type": "string",
        "description": "Show images added on or after the specified date"
      },
      "aspect_ratio_min": {
        "exclusiveMinimum": true,
        "minimum": 0,
        "type": "number",
        "description": "Show images with the specified aspect ratio or higher, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image"
      },
      "aspect_ratio_max": {
        "exclusiveMinimum": true,
        "minimum": 0,
        "type": "number",
        "description": "Show images with the specified aspect ratio or lower, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image"
      },
      "aspect_ratio": {
        "exclusiveMinimum": true,
        "minimum": 0,
        "type": "number",
        "description": "Show images with the specified aspect ratio, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image"
      },
      "ai_search": {
        "type": "boolean",
        "description": "Set to true and specify the `ai_objective` and `ai_industry` parameters to use AI-powered search; the API returns information about how well images meet the objective for the industry "
      },
      "ai_labels_limit": {
        "default": 20,
        "maximum": 500,
        "minimum": 0,
        "type": "integer",
        "description": "For AI-powered search, specify the maximum number of labels to return"
      },
      "ai_industry": {
        "enum": [
          "automotive",
          "cpg",
          "finance",
          "healthcare",
          "retail",
          "technology"
        ],
        "type": "string",
        "description": "For AI-powered search, specify the industry to target; requires that the `ai_search` parameter is set to true"
      },
      "ai_objective": {
        "enum": [
          "awareness",
          "traffic",
          "conversions"
        ],
        "type": "string",
        "description": "For AI-powered search, specify the goal of the media; requires that the `ai_search` parameter is set to true"
      },
      "added_date_end": {
        "format": "date",
        "type": "string",
        "description": "Show images added before the specified date"
      },
      "category": {
        "type": "string",
        "description": "Show images with the specified Shutterstock-defined category; specify a category name or ID"
      },
      "color": {
        "type": "string",
        "description": "Specify either a hexadecimal color in the format '4F21EA' or 'grayscale'; the API returns images that use similar colors"
      },
      "contributor": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Show images with the specified contributor names or IDs, allows multiple"
      },
      "contributor_country": {
        "oneOf": [
          {
            "items": {
              "format": "country-code-2",
              "type": "string"
            },
            "type": "array"
          },
          {
            "items": {
              "format": "negated-country-code-2",
              "type": "string"
            },
            "type": "array"
          }
        ],
        "description": "Show images from contributors in one or more specified countries, or start with NOT to exclude a country from the search"
      },
      "fields": {
        "type": "string",
        "uniqueItems": true,
        "description": "Fields to display in the response; see the documentation for the fields parameter in the overview section"
      },
      "height": {
        "type": "integer",
        "description": "(Deprecated; use height_from and height_to instead) Show images with the specified height"
      },
      "height_from": {
        "type": "integer",
        "description": "Show images with the specified height or larger, in pixels"
      },
      "height_to": {
        "type": "integer",
        "description": "Show images with the specified height or smaller, in pixels"
      },
      "image_type": {
        "items": {
          "enum": [
            "photo",
            "illustration",
            "vector"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Show images of the specified type"
      },
      "keyword_safe_search": {
        "default": true,
        "type": "boolean",
        "description": "Hide results with potentially unsafe keywords"
      },
      "language": {
        "$ref": "#/components/schemas/Language",
        "description": "Set query and result language (uses Accept-Language header if not set)"
      },
      "license": {
        "items": {
          "default": "commercial",
          "enum": [
            "commercial",
            "editorial",
            "enhanced"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Show only images with the specified license"
      },
      "model": {
        "items": {
          "type": "string"
        },
        "type": "array",
        "description": "Show image results with the specified model IDs"
      },
      "orientation": {
        "enum": [
          "horizontal",
          "vertical"
        ],
        "type": "string",
        "description": "Show image results with horizontal or vertical orientation"
      },
      "page": {
        "default": 1,
        "minimum": 1,
        "type": "integer",
        "description": "Page number"
      },
      "per_page": {
        "default": 20,
        "maximum": 500,
        "minimum": 0,
        "type": "integer",
        "description": "Number of results per page"
      },
      "people_model_released": {
        "type": "boolean",
        "description": "Show images of people with a signed model release"
      },
      "people_age": {
        "enum": [
          "infants",
          "children",
          "teenagers",
          "20s",
          "30s",
          "40s",
          "50s",
          "60s",
          "older"
        ],
        "type": "string",
        "description": "Show images that feature people of the specified age category"
      },
      "people_ethnicity": {
        "items": {
          "enum": [
            "african",
            "african_american",
            "black",
            "brazilian",
            "chinese",
            "caucasian",
            "east_asian",
            "hispanic",
            "japanese",
            "middle_eastern",
            "native_american",
            "pacific_islander",
            "south_asian",
            "southeast_asian",
            "other",
            "NOT african",
            "NOT african_american",
            "NOT black",
            "NOT brazilian",
            "NOT chinese",
            "NOT caucasian",
            "NOT east_asian",
            "NOT hispanic",
            "NOT japanese",
            "NOT middle_eastern",
            "NOT native_american",
            "NOT pacific_islander",
            "NOT south_asian",
            "NOT southeast_asian",
            "NOT other"
          ],
          "type": "string"
        },
        "type": "array",
        "description": "Show images with people of the specified ethnicities, or start with NOT to show images without those ethnicities"
      },
      "people_gender": {
        "enum": [
          "male",
          "female",
          "both"
        ],
        "type": "string",
        "description": "Show images with people of the specified gender"
      },
      "people_number": {
        "maximum": 4,
        "minimum": 0,
        "type": "integer",
        "description": "Show images with the specified number of people"
      },
      "query": {
        "type": "string",
        "description": "One or more search terms separated by spaces; you can use NOT to filter out images that match a term"
      },
      "region": {
        "anyOf": [
          {
            "format": "country-code-2",
            "type": "string"
          },
          {
            "format": "ipv4",
            "type": "string"
          }
        ],
        "description": "Raise or lower search result rankings based on the result's relevance to a specified region; you can provide a country code or an IP address from which the API infers a country"
      },
      "safe": {
        "default": true,
        "type": "boolean",
        "description": "Enable or disable safe search"
      },
      "sort": {
        "default": "popular",
        "enum": [
          "newest",
          "popular",
          "relevance",
          "random"
        ],
        "type": "string",
        "description": "Sort by"
      },
      "spellcheck_query": {
        "default": true,
        "type": "boolean",
        "description": "Spellcheck the search query and return results on suggested spellings"
      },
      "view": {
        "default": "minimal",
        "enum": [
          "minimal",
          "full"
        ],
        "type": "string",
        "description": "Amount of detail to render in the response"
      },
      "width": {
        "type": "integer",
        "description": "(Deprecated; use width_from and width_to instead) Show images with the specified width"
      },
      "width_from": {
        "type": "integer",
        "description": "Show images with the specified width or larger, in pixels"
      },
      "width_to": {
        "type": "integer",
        "description": "Show images with the specified width or smaller, in pixels"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.shutterstock.com/v2/images/search{?added_date,added_date_start,aspect_ratio_min,aspect_ratio_max,aspect_ratio,ai_search,ai_labels_limit,ai_industry,ai_objective,added_date_end,category,color,contributor,contributor_country,fields,height,height_from,height_to,image_type,keyword_safe_search,language,license,model,orientation,page,per_page,people_model_released,people_age,people_ethnicity,people_gender,people_number,query,region,safe,sort,spellcheck_query,view,width,width_from,width_to}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Image search results",
        "**Key properties:**",
        {
          "$ul": [
            "**data**: List of images",
            [
              "**insights**: AI-powered insights about an asset, based on the specified audience and objective",
              {
                "$ul": [
                  "**label_performance**: How effective the AI thinks an asset in the category is for the specified audience and objective, expressed as a percentile compared to other images"
                ]
              }
            ],
            "**message**: Server-generated message, if any",
            "**page**: Current page that is returned",
            "**per_page**: Number of results per page",
            "**search_id**: Unique identifier for the search request",
            "**spellcheck_info**: Returns information if search phrase has potentially been mistyped or another query would lead to better search results",
            "**total_count**: Total count of all results across all pages"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
