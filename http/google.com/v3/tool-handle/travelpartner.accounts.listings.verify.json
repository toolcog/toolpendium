{
  "name": "travelpartner_accounts_listings_verify",
  "description": "returns verified listings with data issues and serving eligibilities",
  "parameters": {
    "type": "object",
    "properties": {
      "parent": {
        "type": "string",
        "description": "The resource name of the account being queried. The format is `accounts/{account_id}`."
      },
      "$.xgafv": {
        "enum": [
          "1",
          "2"
        ],
        "type": "string",
        "description": "V1 error format."
      },
      "access_token": {
        "type": "string",
        "description": "OAuth access token."
      },
      "alt": {
        "enum": [
          "json",
          "media",
          "proto"
        ],
        "type": "string",
        "description": "Data format for response."
      },
      "callback": {
        "type": "string",
        "description": "JSONP"
      },
      "fields": {
        "type": "string",
        "description": "Selector specifying which fields to include in a partial response."
      },
      "key": {
        "type": "string",
        "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
      },
      "oauth_token": {
        "type": "string",
        "description": "OAuth 2.0 token for the current user."
      },
      "prettyPrint": {
        "type": "boolean",
        "description": "Returns response with indentations and line breaks."
      },
      "quotaUser": {
        "type": "string",
        "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
      },
      "upload_protocol": {
        "type": "string",
        "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      },
      "uploadType": {
        "type": "string",
        "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
      },
      "body": {
        "$ref": "#/$defs/VerifyListingsRequest"
      }
    },
    "required": [
      "parent"
    ],
    "$defs": {
      "VerifyListingsRequest": {
        "description": "Request message for VRPartnerListingVerificationService.VerifyPartnerListings.",
        "properties": {
          "xmlListing": {
            "description": "A listing that follows the XML format specified in https://developers.google.com/hotels/hotel-prices/xml-reference/hotel-list-feed.",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://travelpartner.googleapis.com//v3/{parent}/listings:verify{?$.xgafv,access_token,alt,callback,fields,key,oauth_token,prettyPrint,quotaUser,upload_protocol,uploadType}"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Response message for VRPartnerListingVerificationService.VerifyPartnerListings.",
        "**Key properties:**",
        {
          "$ul": [
            [
              "**parsedListing**: A parsed listing",
              {
                "$ul": [
                  "**brand**: If not empty, it indicates that this listing belongs to a brand of the feed.",
                  "**category**: The partner provided category (accommodation type) of the property.",
                  "**dataIssueDetail**: Data issues about this listing",
                  "**description**: Description of the property.",
                  "**image**: Images associated with this listing, localized.",
                  "**imprecisionRadiusMeters**: Represents the accuracy of the location. The listing can be anywhere within the defined circular area.",
                  "**isServed**: Whether the listing can be served based on non image data alone.",
                  "**listingName**: List of localized names.",
                  [
                    "**location**: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.",
                    {
                      "$ul": [
                        "**latitude**: The latitude in degrees. It must be in the range [-90.0, +90.0].",
                        "**longitude**: The longitude in degrees. It must be in the range [-180.0, +180.0]."
                      ]
                    }
                  ],
                  "**partnerListId**: The list id on partner lec feed, provided by partner.",
                  "**regionCode**: The country code where the listing is located.",
                  "**review**: Reviews associated with this listing. Each review proto has a single language attached to it.",
                  "**unitAttributes**: VR List attribute."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
