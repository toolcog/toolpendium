{
  "name": "SearchServices",
  "description": "Search for Services and APIs",
  "parameters": {
    "type": "object",
    "properties": {
      "queryMap": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object",
        "description": "Map of criterion. Key can be simply 'name' with value as the searched string. You can also search by label using keys like 'labels.x' where 'x' is the label and value the label value"
      }
    },
    "required": [
      "queryMap"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "http://microcks.local/services/search{?queryMap}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "List"
        },
        "Represents a Service or API definition as registred into Microcks repository",
        "**Key properties:**",
        {
          "$ul": [
            "**id**: Unique identifier for this Service or API",
            [
              "**metadata**: Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.",
              {
                "$ul": [
                  "**annotations**: Annotations of attached object",
                  "**createdOn**: Creation date of attached object",
                  "**labels**: Labels put on attached object",
                  "**lastUpdate**: Last update of attached object"
                ]
              }
            ],
            "**name**: Distinct name for this Service or API (maybe shared among many versions)",
            "**operations**: Set of Operations for Service or API",
            "**type**: Service or API Type",
            "**version**: Distinct version for a named Service or API",
            "**xmlNS**: Associated Xml Namespace in case of Xml based Service"
          ]
        },
        {
          "$each": "$.body.*",
          "$as": "item",
          "$block": [
            {
              "$h2": {
                "$": "$.item.name"
              }
            },
            {
              "$lang": "json",
              "$code": {
                "$encode": "json",
                "$indent": true,
                "$content": {
                  "$": "$.item"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
