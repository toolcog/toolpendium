{
  "name": "ActivateImportJob",
  "description": "Make an ImportJob active, so that it is executed",
  "parameters": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Unique identifier of ImportJob to manage"
      }
    },
    "required": [
      "id"
    ]
  },
  "handler": "http",
  "request": {
    "method": "PUT",
    "url": {
      "$uri": "http://microcks.local/jobs/{id}/activate"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "An ImportJob allow defining a repository artifact to poll for discovering Services and APIs mocks and tests",
        "**Key properties:**",
        {
          "$ul": [
            "**active**: Whether this ImportJob is active (ie. scheduled for execution)",
            "**createdDate**: Creation date for this ImportJob",
            "**etag**: Etag of repository URL during previous import. Is used for not re-importing if no recent changes",
            "**frequency**: Reserved for future usage",
            "**id**: Unique identifier of ImportJob",
            "**lastImportDate**: Date last import was done",
            "**lastImportError**: Error message of last import (if any)",
            "**mainArtifact**: Flag telling if considered as primary or secondary artifact. Default to `true`",
            [
              "**metadata**: Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.",
              {
                "$ul": [
                  "**annotations**: Annotations of attached object",
                  "**createdOn**: Creation date of attached object",
                  "**labels**: Labels put on attached object",
                  "**lastUpdate**: Last update of attached object"
                ]
              }
            ],
            "**name**: Unique distinct name of this ImportJob",
            "**repositoryDisableSSLValidation**: Whether to disable SSL certificate verification when checking repository",
            "**repositoryUrl**: URL of mocks and tests repository artifact",
            [
              "**secretRef**: Lightweight reference for an existing Secret",
              {
                "$ul": [
                  "**name**: Distinct name of the referenced Secret",
                  "**secretId**: Unique identifier or referenced Secret"
                ]
              }
            ],
            "**serviceRefs**: References of Services discovered when checking repository"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
