{
  "name": "CreateTest",
  "description": "Create a new Test",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "$ref": "#/$defs/TestRequest"
      }
    },
    "required": [
      "body"
    ],
    "$defs": {
      "TestRequest": {
        "description": "Test request is a minimalist wrapper for requesting the launch of a new test",
        "properties": {
          "filteredOperations": {
            "description": "A restriction on service operations to test",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "operationHeaders": {
            "$ref": "#/$defs/OperationHeaders"
          },
          "runnerType": {
            "$ref": "#/$defs/TestRunnerType"
          },
          "secretName": {
            "description": "The name of Secret to use for connecting the test endpoint",
            "type": "string"
          },
          "serviceId": {
            "description": "Unique identifier of service to test",
            "type": "string"
          },
          "testEndpoint": {
            "description": "Endpoint to test for this service",
            "type": "string"
          },
          "timeout": {
            "description": "The maximum time (in milliseconds) to wait for this test ends",
            "type": "integer"
          }
        },
        "required": [
          "serviceId",
          "testEndpoint",
          "runnerType",
          "timeout"
        ]
      },
      "OperationHeaders": {
        "additionalProperties": {
          "items": {
            "$ref": "#/$defs/HeaderDTO"
          },
          "type": "array"
        },
        "description": "Specification of additional headers for a Service/API operations. Keys are operation name or \"globals\" (if header applies to all), values are Header objects DTO.",
        "type": "object"
      },
      "HeaderDTO": {
        "description": "Data Transfert Object for headers of both Requests and Responses",
        "properties": {
          "name": {
            "description": "Unique distinct name of this Header",
            "type": "string"
          },
          "values": {
            "description": "Values for this header (comma separated strings)",
            "type": "string"
          }
        },
        "required": [
          "name",
          "values"
        ],
        "type": "object"
      },
      "TestRunnerType": {
        "description": "Type of test strategy (different strategies are implemented by different runners)",
        "enum": [
          "HTTP",
          "SOAP_HTTP",
          "SOAP_UI",
          "POSTMAN",
          "OPEN_API_SCHEMA",
          "ASYNC_API_SCHEMA",
          "GRPC_PROTOBUF",
          "GRAPHQL_SCHEMA"
        ],
        "type": "string"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "http://microcks.local/tests"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "201": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "Represents the result of a Service or API test run by Microcks. Tests are related to a service and made of multiple test cases corresponding to each operations / actions composing service. Tests are run against a specific endpoint named testedEndpoint. It holds global markers telling if test still ran, is a success, how many times is has taken and so on ...",
        "**Key properties:**",
        {
          "$ul": [
            "**elapsedTime**: Elapsed time in milliseconds since test beginning",
            "**id**: Unique identifier of TestResult",
            "**inProgress**: Flag telling is test is still in progress",
            "**operationHeaders**: Specification of additional headers for a Service/API operations. Keys are operation name or \"globals\" (if header applies to all), values are Header objects DTO.",
            "**runnerType**: Type of test strategy (different strategies are implemented by different runners)",
            [
              "**secretRef**: Lightweight reference for an existing Secret",
              {
                "$ul": [
                  "**name**: Distinct name of the referenced Secret",
                  "**secretId**: Unique identifier or referenced Secret"
                ]
              }
            ],
            "**serviceId**: Unique identifier of service tested",
            "**success**: Flag telling if test is a success",
            "**testCaseResults**: TestCase results associated to this test",
            "**testDate**: Timestamp of creation date of this service",
            "**testNumber**: Incremental number for tracking number of tests of a service",
            "**testedEndpoint**: Endpoint used during test",
            "**timeout**: The maximum time (in milliseconds) to wait for this test ends",
            "**version**: Revision number of this test"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
