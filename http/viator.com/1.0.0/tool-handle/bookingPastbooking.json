{
  "name": "bookingPastbooking",
  "description": "Get the details of a single specific past booking based on the `voucherKey` or `itemId` and email address sent in the request.\n\n**Note**: this service will only return past bookings that were made with the same API key that was used to make the booking\n\n**Sample query parameters**:\n- email=apitest@viator.com&amp;itemId=580669678\n\n**or**\n- voucherKey=1005851866:4af44c13ecf3f1a7d3f9ef2fc00c2257e08fa42ae20f877f3039ff9b52aba24e:580669678\n\n**email**\n- The email address passed must match the email address associated with the booking\n\n**Departure details**\n\n- Departure details such as the `departurePoint`, `departurePointAddress` and `departurePointDirections` is included in the response. \n- These fields may contain HTML escape characters such as &amp;amp; and special characters that are escaped by a backslash. Ensure that these fields are parsed after receiving the response as it will cause your JSON to be invalid.\n\nFor more information, see: [Reviewing bookings](#section/Common-workflows-and-data-validation/Reviewing-bookings)\n",
  "parameters": {
    "type": "object",
    "properties": {
      "Accept-Language": {
        "example": "en-US",
        "type": "string",
        "description": "Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)\n"
      },
      "voucherKey": {
        "type": "string",
        "description": "**specifier** of past booking type (use *one* of: `itemId` (booking reference) *and* `'voucherKey'` *or* `'email'`)"
      },
      "email": {
        "type": "string",
        "description": "**email address** by which to search for past bookings"
      },
      "itemId": {
        "type": "string",
        "description": "Search for a booking with this **unique booking-reference number**. See [Booking references](#section/Key-concepts/Booking-references) for more information.\n"
      }
    },
    "required": [
      "Accept-Language"
    ]
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://viatorapi.viator.com/service/booking/pastbooking{?voucherKey,email,itemId}"
    },
    "headers": {
      "Accept-Language": {
        "$": "Accept-Language"
      }
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**dateStamp**: **timestamp** of *this* response",
            "**errorCodes**: **array** of error codes pertaining to *this* error",
            "**errorMessage**: **array** of error message strings",
            "**errorMessageText**: **array** of error message strings in plain text",
            "**errorName**: **name** of *this* type of error",
            "**errorReference**: **reference number** of *this* error",
            "**errorType**: **code** specifying the type of error",
            "**extraInfo**: ignore (Viator only)",
            "**extraObject**: ignore (Viator only)",
            "**success**: **boolean indicator** of *this* request's outcome",
            "**totalCount**: **number** of results available for *this* service",
            "**vmid**: **unique numeric id** of the server that processed *this* request",
            [
              "**data**: **object** containing pricing matrix information",
              {
                "$ul": [
                  "**bookerEmail**: **email address** of the entity that booked the tour",
                  "**bookingDate**: **date** on which the booking was made",
                  [
                    "**bookingStatus**: **object** containing itinerary booking status information",
                    {
                      "$ul": [
                        "**amended**: **indicator**: `true` if *this* itinerary's booking has been amended",
                        "**cancelled**: **indicator**: `true` if *this* itinerary's booking has been cancelled",
                        "**confirmed**: **indicator**: `true` if *this* itinerary's booking is confirmed",
                        "**failed**: **indicator**: `true` if *this* itinerary's booking has failed",
                        "**level**: **level** of *this* itinerary's booking status",
                        "**pending**: **indicator**: `true` if *this* itinerary's booking is pending",
                        "**status**: **numeric identifier** of *this* itinerary's booking status",
                        "**text**: **natural-language description** of *this* itinerary's booking status",
                        "**type**: **specifier** of *this* itinerary's booking status"
                      ]
                    }
                  ],
                  "**currencyCode**: **currency code** for the currency in which pricing is displayed",
                  "**distributorRef**: **reference code** for the distributor",
                  "**exchangeRate**: ignore (Viator only)",
                  "**hasVoucher**: **indicator**: `true` if a voucher exists",
                  "**itemSummaries**: **array** of item summary objects",
                  "**itineraryId**: ignore (Viator only)",
                  "**rulesApplied**: ignore (Viator only)",
                  "**sortOrder**: **sort order** for *this* result",
                  "**totalPrice**: **numeric merchant total price** for *this* booking",
                  "**totalPriceFormatted**: **currency-formatted merchant total price** for *this* booking",
                  "**totalPriceUSD**: **numeric merchant total price** of this booking in USD",
                  "**userId**: ignore (Viator only)",
                  "**voucherKey**: Unique reference for the voucher for this booking that can be used as a request parameter to search for existing bookings using the [/booking/mybookings](#operation/bookingMybookings) and [/booking/pastbooking](#operation/bookingPastbooking) endpoints",
                  "**voucherURL**: **URL of the voucher** for *this* product (if available). The customer can access this URL to retrieve their voucher."
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
