{
  "name": "listPaymentsAuditV4",
  "description": "Get payments for the given payor Id",
  "parameters": {
    "type": "object",
    "properties": {
      "payeeId": {
        "format": "uuid",
        "type": "string",
        "description": "The UUID of the payee."
      },
      "payorId": {
        "format": "uuid",
        "type": "string",
        "description": "The account owner Payor Id. Required for external users."
      },
      "payorName": {
        "type": "string",
        "description": "The payor’s name. This filters via a case insensitive substring match."
      },
      "remoteId": {
        "type": "string",
        "description": "The remote id of the payees."
      },
      "remoteSystemId": {
        "type": "string",
        "description": "The id of the remote system that is orchestrating payments"
      },
      "status": {
        "enum": [
          "ACCEPTED",
          "AWAITING_FUNDS",
          "FUNDED",
          "UNFUNDED",
          "BANK_PAYMENT_REQUESTED",
          "REJECTED",
          "ACCEPTED_BY_RAILS",
          "CONFIRMED",
          "FAILED",
          "RETURNED",
          "WITHDRAWN"
        ],
        "type": "string",
        "description": "Payment Status"
      },
      "transmissionType": {
        "enum": [
          "ACH",
          "SAME_DAY_ACH",
          "WIRE",
          "LOCAL",
          "GACHO"
        ],
        "type": "string",
        "description": "Transmission Type\n* ACH\n* SAME_DAY_ACH\n* WIRE\n* GACHO\n"
      },
      "sourceAccountName": {
        "type": "string",
        "description": "The source account name filter. This filters via a case insensitive substring match."
      },
      "sourceAmountFrom": {
        "format": "int32",
        "type": "integer",
        "description": "The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom"
      },
      "sourceAmountTo": {
        "format": "int32",
        "type": "integer",
        "description": "The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo"
      },
      "sourceCurrency": {
        "type": "string",
        "description": "The source currency filter. Filters based on an exact match on the currency."
      },
      "paymentAmountFrom": {
        "format": "int32",
        "type": "integer",
        "description": "The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom"
      },
      "paymentAmountTo": {
        "format": "int32",
        "type": "integer",
        "description": "The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo"
      },
      "paymentCurrency": {
        "type": "string",
        "description": "The payment currency filter. Filters based on an exact match on the currency."
      },
      "submittedDateFrom": {
        "format": "date",
        "type": "string",
        "description": "The submitted date from range filter. Format is yyyy-MM-dd."
      },
      "submittedDateTo": {
        "format": "date",
        "type": "string",
        "description": "The submitted date to range filter. Format is yyyy-MM-dd."
      },
      "paymentMemo": {
        "type": "string",
        "description": "The payment memo filter. This filters via a case insensitive substring match."
      },
      "railsId": {
        "type": "string",
        "description": "Payout Rails ID filter - case insensitive match.\nAny value is allowed, but you should use one of the supported railsId values.\nTo get this list of values, you should call the 'Get Supported Rails' endpoint.\n"
      },
      "scheduledForDateFrom": {
        "format": "date",
        "type": "string",
        "description": "Filter payouts scheduled to run on or after the given date. Format is yyyy-MM-dd."
      },
      "scheduledForDateTo": {
        "format": "date",
        "type": "string",
        "description": "Filter payouts scheduled to run on or before the given date. Format is yyyy-MM-dd."
      },
      "scheduleStatus": {
        "enum": [
          "ANY",
          "SCHEDULED",
          "EXECUTED",
          "FAILED"
        ],
        "type": "string",
        "description": "Payout Schedule Status"
      },
      "postInstructFxStatus": {
        "enum": [
          "ANY",
          "INITIATED",
          "CANCELLED",
          "EXECUTED",
          "COMPLETED",
          "RETURNED",
          "RESUBMITTED",
          "REFUNDED"
        ],
        "type": "string",
        "description": "The status of the post instruct FX step if one was required for the payment"
      },
      "page": {
        "default": 1,
        "format": "int32",
        "type": "integer",
        "description": "Page number. Default is 1."
      },
      "pageSize": {
        "default": 25,
        "format": "int32",
        "maximum": 100,
        "minimum": 1,
        "type": "integer",
        "description": "The number of results to return in a page"
      },
      "sort": {
        "type": "string",
        "description": "List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by submittedDateTime:desc,paymentId:asc\nThe supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,\nroutingNumber, accountNumber, remoteId, submittedDateTime, status and paymentId\n"
      },
      "sensitive": {
        "type": "boolean",
        "description": "Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.\nIf set to true, and you have permission, the PII values will be returned as their original unmasked values.\n"
      }
    }
  },
  "handler": "http",
  "request": {
    "method": "GET",
    "url": {
      "$uri": "https://api.sandbox.velopayments.com//v4/paymentaudit/payments{?payeeId,payorId,payorName,remoteId,remoteSystemId,status,transmissionType,sourceAccountName,sourceAmountFrom,sourceAmountTo,sourceCurrency,paymentAmountFrom,paymentAmountTo,paymentCurrency,submittedDateFrom,submittedDateTo,paymentMemo,railsId,scheduledForDateFrom,scheduledForDateTo,scheduleStatus,postInstructFxStatus,page,pageSize,sort,sensitive}"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "List Payments Response Object",
        "**Key properties:**",
        {
          "$ul": [
            "**content**",
            "**links**",
            [
              "**page**",
              {
                "$ul": [
                  "**numberOfElements**",
                  "**page**",
                  "**pageSize**",
                  "**totalElements**",
                  "**totalPages**"
                ]
              }
            ]
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "400": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**correlationId**: a unique identifier to track a request or related sequence of requests",
            "**errors**: one or more errors",
            "**httpStatusCode**: this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "401": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**correlationId**: a unique identifier to track a request or related sequence of requests",
            "**errors**: one or more errors",
            "**httpStatusCode**: this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    },
    "403": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "Object"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**correlationId**: a unique identifier to track a request or related sequence of requests",
            "**errors**: one or more errors",
            "**httpStatusCode**: this will mirror the Status-Code part of the Status-Line http response header and is included for extra clarity"
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
