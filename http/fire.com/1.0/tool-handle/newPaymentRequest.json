{
  "name": "newPaymentRequest",
  "description": "Fire Open Payments is a feature of the fire.com business account that leverages Open Banking to allow your customers to pay you via bank transfer and to reconcile those payments as they are received into your fire.com GBP or EUR account.\n\nTo set up each Fire Open Payment you first need to create a payment request. This contains the details of the payment such as the amount, destination account, description as well as various other specific fields that you want to associate with the payment. The payment request is represented as a URL with a unique code which can then be incorporated into an eCommerce shopping cart as an alternative form of payment. For example, you can put “Pay by Bank” on your website along with “Pay by Card” and “Pay by PayPal”. It can also be distributed by a variety of means such as by email, SMS, WhatsApp, encoded as a QR code, NFC tag, etc.\n\nConsumers confirm the payment details such as the amount are correct, select their bank and authorise the payment. Payments can be made from all major UK banks.\n\nThe funds are settled into your fire.com account, fully reconciled, with your specified fields provided.\n\nThere are two implementation options you can use to display payment pages with Fire Open Payments.\n1. **Hosted Payment Pages:** fire.com hosts the payment pages - this option allows you to re-direct your customer to the hosted fire.com payment pages displaying the payment details confirmation, bank selection, consent and response pages.\n2. **Integrated Payment Pages:** You host the payments page yourself - this option allows you to have control of the UI and UX for displaying the payment details confirmation, bank selection and response pages. Once the response is received, fire.com can re-direct the payer back to your website.\n\n## Hosted Payment Pages Option\n![Image](https://fire.com/docs/images/fop-hosted-flow.png)\n\nThe payer is brought through 5 stages to complete the payment:\n1. **View Payment Details page:** The payer must first be clear on the amount of the payment, who they are paying and the reason for the payment.\n2. **Select Bank / Account Provider page:** The payer then selects their bank. Again this step is offered as part of the fire.com payment UI.\n3. **Consent page:**  The payer must provide consent to the PISP (fire.com) prior to authorising the payment. This is a regulatory requirement, this page must be hosted by fire.com.\n4. **Authenticate and Authorise Payment:** The payer will be redirected to their bank’s online site or mobile banking app. After authenticating, the details of the payment will be displayed, and the payer will authorise the payment.\n5. **Response page:** It is a regulatory requirement that the PISP (fire.com) display the results of the payment and provide the same information that would be provided if the payer had made the payment via their banking application. fire.com must display this page, before optionally redirecting the payer back to your website.\n\nTo implement the hosted Fire Open Payments option you need to do the following:\n1. You can create a new Fire Open Payment request either within Firework Online or via the API.\n2. Create your new API application with the appropriate permissions required in Firework Online, as outlined in the “Authentication” steps. The permissions needed are:\n    - “Create a Payment Request”\n    - “Get Payment Details”\n\n3. Use the Refresh Token, Client ID and Client Key to create an access token as outlined in the “Authentication” steps.\n4. On your website, create a “Pay by Bank” button alongside your other available payment methods, such as Cards and PayPal.\n5. After the user clicks on “Pay by Bank”, you need to create a new Fire Open Payment request as outlined in the “Create a Fire Open Payment” steps. The Create a Fire Open Payment request endpoint returns a unique code for the payment request.\n6. Create a URL using the code returned in this format: `https://payments.fire.com/{code}` and redirect your customer to this page.\n7. fire.com will host all the pages that the customer needs to review and authorise the payment. fire.com will will return the paymentUUID of the successful or failed transaction to the returnUrl that you supplied when creating the Fire Open Payment request. fire.com can also optionally send a “webhook” to your website notifying you of the transaction’s outcome.\n8. Once fire.com responds with the paymentUUID and/or the webhook to your website, you need to call the “Get Payment Details” endpoint to get the details of the transaction. This will let you know whether the transaction was successful or not. You can set up the “Payment Request Payment Authorised” webhook to notify you once the payment is authorised or cancelled.\n9. The funds will be received into your GBP or EUR account. Funding will typically be within 6 business hours.\n\nOnce the code is returned the payment can be viewed and paid by going to the following URL: `https://payments.fire.com/{code}`\n\nThis request creates a new Fire Open Payment Payment. A code is returned that can be shared to your customers as a URL by any channel you wish.\nYou will need to enable the `PERM_BUSINESS_POST_PAYMENT_REQUEST` permission to use this endpoint.\n",
  "parameters": {
    "type": "object",
    "properties": {
      "body": {
        "properties": {
          "additionalFields": {
            "description": "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
            "example": "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
            "type": "string"
          },
          "amount": {
            "description": "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
            "example": 1000,
            "format": "int64",
            "type": "integer"
          },
          "collectFields": {
            "description": "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
            "example": "ADDRESS|REFERENCE|COMMENT1",
            "type": "string"
          },
          "currency": {
            "description": "Either `EUR` or `GBP`, and must correspond to the currency of the account the funds are being lodged into in the `icanTo`.",
            "enum": [
              "EUR",
              "GBP"
            ],
            "type": "string"
          },
          "description": {
            "description": "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
            "example": "Gym Fees Oct 2020",
            "type": "string"
          },
          "expiry": {
            "description": "This is the expiry of the payment request. After this time, the payment cannot be paid.",
            "example": "2020-10-22T07:48:56.460Z",
            "format": "date-time",
            "type": "string"
          },
          "icanTo": {
            "description": "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
            "example": 42,
            "format": "int64",
            "type": "integer"
          },
          "mandatoryFields": {
            "description": "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
            "example": "ADDRESS|REFERENCE|COMMENT1",
            "type": "string"
          },
          "maxNumberPayments": {
            "description": "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
            "example": 1,
            "type": "integer"
          },
          "myRef": {
            "description": "An internal description of the request.",
            "example": "Fees",
            "type": "string"
          },
          "orderDetails": {
            "properties": {
              "comment1": {
                "description": "This is your own comment for the transaction.",
                "example": "Additional comments about the transaction",
                "type": "string"
              },
              "comment2": {
                "description": "This is your own comment for the transaction.",
                "example": "Additional comments about the transaction",
                "type": "string"
              },
              "customerNumber": {
                "description": "Use this field to store a customer number for the transaction (for example).",
                "example": "123645",
                "type": "string"
              },
              "deliveryAddressLine1": {
                "description": "The first line of the delivery address.",
                "example": "12 The Street",
                "type": "string"
              },
              "deliveryAddressLine2": {
                "description": "The second line of the delivery address.",
                "example": "The Way",
                "type": "string"
              },
              "deliveryCity": {
                "description": "Delivery address city",
                "example": "London",
                "type": "string"
              },
              "deliveryCountry": {
                "description": "2-digit code for the country",
                "example": "GB",
                "type": "string"
              },
              "deliveryPostCode": {
                "description": "Delivery address post code",
                "example": "EC15155",
                "type": "string"
              },
              "merchantCustomerIdentification": {
                "description": "This is a reference you use to uniquely identify each of your customers.",
                "example": 8303863544,
                "type": "string"
              },
              "merchantNumber": {
                "description": "Your Merchant Number (if applicable).",
                "example": "1234567",
                "type": "string"
              },
              "orderId": {
                "description": "Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.",
                "example": "6c28a47d-4502-4111",
                "type": "string"
              },
              "productId": {
                "description": "Use this field to store a product id for the transaction (for example).",
                "example": "ZFDAA-1221",
                "type": "string"
              },
              "variableReference": {
                "description": "Use this field to store any other reference for the transaction (for example, a phone number).",
                "example": "John Doe",
                "type": "string"
              }
            },
            "title": "orderDetails",
            "type": "object"
          },
          "returnUrl": {
            "description": "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
            "example": "https://example.com/callback",
            "type": "string"
          },
          "type": {
            "description": "The type of Fire Open Payment that was created",
            "enum": [
              "OTHER"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "icanTo",
          "currency",
          "myRef",
          "description"
        ],
        "title": "newPaymentRequest",
        "type": "object",
        "description": "Details of the new payment request"
      }
    },
    "required": [
      "body"
    ]
  },
  "handler": "http",
  "request": {
    "method": "POST",
    "url": {
      "$uri": "https://api.fire.com/business/v1/paymentrequests"
    },
    "body": {
      "$": "body",
      "encode": "json"
    }
  },
  "responses": {
    "200": {
      "$encode": "markdown",
      "$block": [
        {
          "$h1": "newPaymentRequestResponse"
        },
        "**Key properties:**",
        {
          "$ul": [
            "**code**: The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.",
            "**type**: The type of Fire Open Payment that was created."
          ]
        },
        {
          "$lang": "json",
          "$code": {
            "$encode": "json",
            "$indent": true,
            "$content": {
              "$": "$.body"
            }
          }
        }
      ]
    }
  }
}
